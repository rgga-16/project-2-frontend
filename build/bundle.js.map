{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/utils.js","../../node_modules/@svelte-put/copy/src/copy.helpers.js","../../src/components/LoadingBar.svelte","../../src/savers.js","../../src/components/FeedbackSelector.svelte","../../src/components/Range.svelte","../../node_modules/svelte-markdown/src/Parser.svelte","../../node_modules/svelte-markdown/src/supress-warnings.js","../../node_modules/svelte-markdown/node_modules/marked/lib/marked.esm.js","../../node_modules/svelte-markdown/src/context.js","../../node_modules/svelte-markdown/src/renderers/Heading.svelte","../../node_modules/svelte-markdown/src/renderers/Paragraph.svelte","../../node_modules/svelte-markdown/src/renderers/Text.svelte","../../node_modules/svelte-markdown/src/renderers/Image.svelte","../../node_modules/svelte-markdown/src/renderers/Link.svelte","../../node_modules/svelte-markdown/src/renderers/Em.svelte","../../node_modules/svelte-markdown/src/renderers/Del.svelte","../../node_modules/svelte-markdown/src/renderers/Codespan.svelte","../../node_modules/svelte-markdown/src/renderers/Strong.svelte","../../node_modules/svelte-markdown/src/renderers/Table.svelte","../../node_modules/svelte-markdown/src/renderers/TableHead.svelte","../../node_modules/svelte-markdown/src/renderers/TableBody.svelte","../../node_modules/svelte-markdown/src/renderers/TableRow.svelte","../../node_modules/svelte-markdown/src/renderers/TableCell.svelte","../../node_modules/svelte-markdown/src/renderers/List.svelte","../../node_modules/svelte-markdown/src/renderers/ListItem.svelte","../../node_modules/svelte-markdown/src/renderers/Hr.svelte","../../node_modules/svelte-markdown/src/renderers/Html.svelte","../../node_modules/svelte-markdown/src/renderers/Blockquote.svelte","../../node_modules/svelte-markdown/src/renderers/Code.svelte","../../node_modules/svelte-markdown/src/renderers/Br.svelte","../../node_modules/svelte-markdown/src/markdown-parser.js","../../node_modules/svelte-markdown/src/SvelteMarkdown.svelte","../../src/components/FeedbackList.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","\nimport {get} from 'svelte/store';\nimport { copyToClipboard } from '@svelte-put/copy'; //https://svelte-put.vnphanquang.com/docs/copy#installation\nimport {marked} from 'marked'; //https://marked.js.org/\n\nexport async function pause(milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds));\n}\n\nexport async function saveBase64Image(image_base64) {\n    const response = await fetch(\"/save_image\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({image_data: image_base64})\n    });\n    if(!response.ok) {\n        throw new Error(\"Failed to save image\");\n    }\n    const json = await response.json();\n    return json[\"image_path\"];\n}\n\nexport async function convertImageToBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result); // This is the base64 string\n        reader.onerror = error => reject(error);\n        reader.readAsDataURL(file);\n    });\n}\n\nexport function setCookie(name,value,daysToExpire) {\n    var expires = \"\";\n    if(daysToExpire) {\n        var date = new Date();\n        date.setTime(date.getTime() + (daysToExpire*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nexport function getCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i < ca.length;i++) {\n        var c = ca[i];\n        while(c.charAt(0) === ' ') c = c.substring(1,c.length);\n        if(c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n\n}\n\nexport async function logAction(action, data) {\n\n    // console.log(\"Action: \" + action);\n    // console.log(data);\n\n    // Send data to server\n    const response = await fetch(\"/log_action\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({action: action, data: data})\n    });\n    if(!response.ok) {\n        throw new Error(\"Failed to log action\");\n    }\n    const json = await response.json();\n    console.log(json[\"message\"]);\n}\n\nexport function setLoadingProgress(loadbar, value) {\n    let bar = loadbar.ldBar;\n    bar.set(value);\n}\n\nexport function timeToSeconds(time) {\n    // time is in the format HH:MM:SS,MILISECONDS, e.g., 00:00:53,531\n    let timeArray = time.split(\":\");\n    let hours = parseInt(timeArray[0]);\n    let minutes = parseInt(timeArray[1]);\n    let seconds = parseInt(timeArray[2].split(\",\")[0]);\n    let milliseconds = parseInt(timeArray[2].split(\",\")[1]);\n\n    return hours*3600 + minutes*60 + seconds + milliseconds/1000;\n}\n\nexport function seekTo(time, videoPlayer) {\n    videoPlayer.currentTime = timeToSeconds(time);\n    videoPlayer.play();\n}\n\nexport function focusOnFeedback(feedback) {\n    let dialogue_id = parseInt(feedback.dialogue_id);\n    let quoteElement = document.getElementById(dialogue_id);\n    if(quoteElement) {\n        quoteElement.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"nearest\"});\n    } else {\n        console.log(\"Error: Can't focus on feedback. Corresponding transcript excerpt not found.\")\n    }\n}\n\nexport function focusOnFeedbackNote(feedback) {\n    let id = feedback.id;\n    let noteElement = document.getElementById(\"feedback-note-section-\"+id);\n    if(noteElement) {\n        noteElement.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"nearest\"});\n    } else {\n        console.log(\"Error: Can't focus on feedback note. Corresponding note section not found.\")\n    }\n}\n\nexport function copy(text) {\n    copyToClipboard(text);\n}","/**\n * Copy a text to the clipboard. Will attempt to use the new `navigator.clipboard` API,\n * but will fallback to the `execCommand()` if `navigator.clipboard` is not available.\n *\n * This is shamelessly \"copied\" from {@link https://github.com/vuejs/vitepress/blob/43c89d66c0d8c87e244a0a0e73a897509b977e65/src/client/app/composables/copyCode.ts | vitepress source code}\n * @param {string} text - text to copy\n * @returns {Promise<void> | undefined}\n */\nexport function copyToClipboard(text) {\n\ttry {\n\t\treturn navigator.clipboard.writeText(text);\n\t} catch {\n\t\tconst element = document.createElement('textarea');\n\t\tconst previouslyFocusedElement = document.activeElement;\n\n\t\telement.value = text;\n\n\t\t// Prevent keyboard from showing on mobile\n\t\telement.setAttribute('readonly', '');\n\n\t\telement.style.contain = 'strict';\n\t\telement.style.position = 'absolute';\n\t\telement.style.left = '-9999px';\n\t\telement.style.fontSize = '12pt'; // Prevent zooming on iOS\n\n\t\tconst selection = document.getSelection();\n\t\tconst originalRange = selection ? selection.rangeCount > 0 && selection.getRangeAt(0) : null;\n\n\t\tdocument.body.appendChild(element);\n\t\telement.select();\n\n\t\t// Explicit selection workaround for iOS\n\t\telement.selectionStart = 0;\n\t\telement.selectionEnd = text.length;\n\n\t\tdocument.execCommand('copy');\n\t\tdocument.body.removeChild(element);\n\n\t\tif (originalRange && selection) {\n\t\t\tselection.removeAllRanges(); // originalRange can't be truthy when selection is falsy\n\t\t\tselection.addRange(originalRange);\n\t\t}\n\n\t\t// Get the focus back on the previously focused element, if any\n\t\tif (previouslyFocusedElement) {\n\t\t\t/** @type {HTMLElement} */ (previouslyFocusedElement).focus();\n\t\t}\n\t}\n}\n","<script>\n  export let progress = 0; // Progress is a value between 0 and 100\n  export let status= ''; // Status is a string that can be used to display a message\n</script>\n\n<style>\n\n    .container {\n        height: 80%;\n        width: 80%;\n    }\n    .loading-bar-container {\n        width: 100%;\n        background-color: #eee;\n        border-radius: 0.5rem;\n        overflow: hidden;\n    }\n\n    .loading-bar-progress {\n        height: 2rem;\n        background-color: #007bff;\n        width: 0%;\n        transition: width 0.5s ease;\n        border-radius: 0.5rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: white; /* Color of the progress text */\n        font-weight: bold;\n        animation: pulse 2s infinite ease-in-out;\n    }\n\n    @keyframes pulse {\n        0% { background-color: #007bff; }\n        50% { background-color: #0056b3; }\n        100% { background-color: #007bff; }\n    }\n\n    .status-text {\n        text-align: center;\n        margin-top: 0;\n    }\n</style>\n\n<div class=\"container column centered spaced\">\n    <span class=\"status-text\"> [{progress}%] {status} </span>\n    <div class=\"loading-bar-container\">\n        <div class=\"loading-bar-progress\" style=\"width: {progress}%;\">\n        </div>\n    </div>\n</div>\n    \n\n\n","\nexport async function saveRecording(recording) {\n\n    const response = await fetch('/save_recording', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({recording:recording})\n    });\n    if(!response.ok) {\n        throw new Error('Failed to save recording');\n    }\n\n    let response_json = await response.json();\n    if(\"message\" in response_json) {\n        console.log(response_json[\"message\"]);\n    }\n    return response_json[\"message\"];\n}\n\n\nexport async function saveFeedbackList(feedback_list) {\n    const response = await fetch(\"/save_feedback_list\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({feedback_list: feedback_list})\n    });\n    if(!response.ok) {\n        throw new Error(\"Failed to save feedback list\");\n    }\n\n    let response_json = await response.json();\n    if(\"message\" in response_json) {\n        console.log(response_json[\"message\"]);\n    }\n\n    return response_json[\"message\"];\n}\n\nexport async function saveDisplayChatbotMessages(display_chatbot_messages) {\n    const response = await fetch(\"/save_display_chatbot_messages\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({display_chatbot_messages: display_chatbot_messages})\n    });\n    if(!response.ok) {\n        throw new Error(\"Failed to save display chatbot messages\");\n    }\n\n    let response_json = await response.json();\n    if(\"message\" in response_json) {\n        console.log(response_json[\"message\"]);\n    }\n\n    return response_json[\"message\"];\n}\n\nexport async function saveMyNotes(my_notes) {\n    const response = await fetch(\"/save_my_notes\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({my_notes: my_notes})\n    });\n    if(!response.ok) {\n        throw new Error(\"Failed to save my notes\");\n    }\n\n    let response_json = await response.json();\n    if(\"message\" in response_json) {\n        console.log(response_json[\"message\"]);\n    }\n\n    return response_json[\"message\"];\n}\n\nexport async function saveMyFeedbackNotes(feedback_notes) {\n    const response = await fetch(\"/save_feedback_notes\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({feedback_notes: feedback_notes})\n    });\n    if(!response.ok) {\n        throw new Error(\"Failed to save my feedback notes\");\n    }\n\n    let response_json = await response.json();\n    if(\"message\" in response_json) {\n        console.log(response_json[\"message\"]);\n    }\n\n    return response_json[\"message\"];\n}\n","<script>\n    import {onMount} from 'svelte';\n    import LoadingBar from './LoadingBar.svelte';\n    import {seekTo, focusOnFeedback, logAction, pause} from '../utils.js';\n    import {saveFeedbackList, saveRecording} from '../savers.js';\n    \n    export let recording = {};\n    export let feedback_list = [];\n\n    let tooltip; \n\n    let to_transcribe=false;\n    let feedback_idx = 0; \n\n    let mediaPlayer; \n    let ld_bar_transcript;\n\n    let is_recording=false;\n    let is_paused=false;\n\n    let videoStream;\n    let micStream;\n    let settings;\n\n    let micBlobs=[];\n    let videoChunks = [];\n\n    let videoRecorder;\n    let micRecorder;\n\n    let videoPath;\n    let micPath; \n\n    let media_files, mediafile_input;\n    let transcript_files, transcript_fileinput;\n\n    let is_loading=false;\n    let load_status = \"\";\n    let progress = 0;\n\n    async function sendVideoToServer(videoBlobs) {\n        const vidblob = new Blob(videoBlobs, {type: 'video/webm'});\n        \n        console.log(\"video blobs\", {videoBlobs, vidblob});\n        let data = new FormData();\n        data.append('file', vidblob);\n\n        if(vidblob.length === 0 || !vidblob) {\n            return null;\n        }\n\n        const response = await fetch('/download_screen', {\n            method: 'POST',\n            body: data,\n        });\n        if(!response.ok) {\n            micPath = null;\n            videoPath = null;\n            // throw new Error('Failed to send video to server');\n            console.log('Failed to send video to server');\n        } else {\n            const json = await response.json();\n            videoPath = json[\"filepath\"];\n        }\n        return videoPath;\n    }\n\n    async function sendAudioToServer(audioBlobs) {\n        const blob = new Blob(audioBlobs, {type: 'audio/webm'});\n        console.log(\"audio blobs\", {audioBlobs, blob})\n        let data = new FormData();\n        data.append('audio', blob, 'audio.webm');\n        const response = await fetch('/download_mic', {\n            method: 'POST',\n            body: data,\n        });\n        if(!response.ok) {\n            micPath = null;\n            videoPath = null;\n            throw new Error('Failed to send audio to server');\n        } else {\n            const json = await response.json();\n            micPath = json[\"filepath\"];\n        }\n        return micPath;\n    }\n\n    async function fetchVideo(video_path) {\n        try {   \n            const response = await fetch(\"/fetch_video\", {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    \"path\": video_path,\n                }),\n            });\n            const blob = await response.blob();\n            let video_source = URL.createObjectURL(blob);\n            return video_source;\n        } catch (error) {\n            console.error(error);\n        } \n    }\n\n    async function fetchAudio(audio_path) {\n        try {   \n            const response = await fetch(\"/fetch_audio\", {\n                method: \"POST\",\n                headers: {\"Content-Type\": \"application/json\"},\n                body: JSON.stringify({\n                    \"audio_path\": audio_path,\n                }),\n            });\n            const blob = await response.blob();\n            let audio_source = URL.createObjectURL(blob);\n            return audio_source;\n        } catch (error) {\n            console.error(error);\n        } \n    }\n\n    async function transcribeMic(micPath) {\n        const response = await fetch('/transcribe_mic', {\n            method: 'POST',\n            body: JSON.stringify({\"audio\": micPath}),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        if(!response.ok) {\n            throw new Error('Failed to transcribe audio');\n        } else {\n            const json = await response.json();\n            let transcript = json[\"transcript\"]\n            return transcript\n        }\n    }\n\n    async function startRecording() {\n        is_recording = true;\n        videoStream = await navigator.mediaDevices.getDisplayMedia({\n            video: {frameRate:60},\n            //@ts-ignore\n            selfBrowserSurface:'include',\n        })\n        videoRecorder = new MediaRecorder(videoStream, {mimeType: 'video/webm'});\n        videoRecorder.videoChunks = [];\n        videoRecorder.addEventListener('dataavailable', event => {\n            if (event.data.size > 0) {\n                videoChunks.push(event.data);\n            }\n        });\n        videoRecorder.addEventListener('stop', () => {\n            \n            // sendVideoToServer(videoChunks);\n            // console.log(\"video chunks\", videoChunks);\n            // videoChunks = [];\n        });\n\n        micStream = await navigator.mediaDevices.getUserMedia({audio: true});\n        micRecorder = new MediaRecorder(micStream);\n        micRecorder.audioBlobs = [];\n        micRecorder.addEventListener('dataavailable', event => {\n            if (event.data.size > 0) {\n                micBlobs.push(event.data);\n            }\n        });\n        micRecorder.addEventListener('stop', () => {\n            // sendAudioToServer(micBlobs);\n            // micBlobs = [];\n        });\n        videoRecorder.start();\n        micRecorder.start();\n    }\n\n    function pauseRecording() {\n        is_recording=false;\n        is_paused=true;\n        videoRecorder.pause();\n        micRecorder.pause();\n    }\n\n    function resumeRecording() {\n\n        is_recording=true;\n        is_paused=false;\n\n        videoRecorder.resume();\n        micRecorder.resume();\n    }\n\n    async function embedTranscriptList(transcript_list) {\n        const response = await fetch(\"/embed_transcript\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({transcript: transcript_list})\n        });\n        if(!response.ok) {\n            throw new Error(\"Failed to embed transcript list\");\n        }\n    }\n\n    async function stopRecording() {\n        is_recording=false;\n        is_paused=false;\n        \n        \n        videoStream.getTracks().forEach(track => track.stop());\n        micStream.getTracks().forEach(track => track.stop());\n\n        load_status=\"Saving video and audio ...\";\n        progress=20; \n        videoPath = await sendVideoToServer(videoChunks); //Bug workaround: Do this for the first time because newly created vidblob is empty during first time.\n        videoPath = await sendVideoToServer(videoChunks); \n        videoChunks = [];\n        \n        let videoSrc = await fetchVideo(videoPath);\n        \n        micPath = await sendAudioToServer(micBlobs); \n        micBlobs = [];\n        let micSrc = await fetchAudio(micPath);\n\n        load_status=\"Transcribing audio (this may take a while) ...\";\n        progress=40;\n        let transcript = await transcribeMic(micPath);\n\n        load_status=\"Cleaning transcript...\"\n        progress=60;\n        let simplified_transcript = await simplifyTranscript(transcript);\n        let transcript_list = await convertTranscriptToList(simplified_transcript);\n\n        load_status=\"Saving transcript as a database (this may take a while) ... \"\n        progress=80;\n        await embedTranscriptList(transcript_list);\n\n        load_status=\"Done!\"\n        progress=100;\n        await pause(1500); \n        let newRecording = {\n            video: videoSrc, \n            video_path: videoPath,\n            audio: micSrc, \n            audio_path: micPath,\n            transcript: simplified_transcript, \n            transcript_list : transcript_list\n        };\n        recording=newRecording;\n        // await incrementRecordNumber();\n    }\n\n    async function extractAudioFromVideo(videoFile) {\n        const formData = new FormData();\n        formData.append('file', videoFile);\n        const response = await fetch('/extract_audio_from_video', {\n            method: 'POST',\n            body: formData,\n        });\n\n        if (!response.ok) {\n            return null;\n        } \n        const json = await response.json();\n        return [json[\"audiopath\"], json[\"videopath\"]];\n    }\n\n    async function deleteRecording() {\n        let response = await fetch(\"/delete_recording\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({recording: recording})\n        });\n        recording = {};\n\n        let response_json = await response.json();\n        if(\"message\" in response_json) {\n            console.log(response_json[\"message\"]);\n        }\n        return response_json[\"message\"];\n    }\n\n    async function deleteRecordingMedia() {\n        let response = await fetch(\"/delete_recording_media\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({recording: recording})\n        });\n\n        let response_json = await response.json();\n        if(\"message\" in response_json) {\n            console.log(response_json[\"message\"]);\n        }\n        return response_json[\"message\"];\n    }\n\n\n    async function handleMediaUpload() {\n        if(media_files) {\n            for (const file of media_files) {\n                console.log(file.type);\n                if(file.type.includes('video')) {\n                    if(recording || \"video\" in recording || \"audio\" in recording || \"transcript_list\" in recording) {\n                        if(recording.video || recording.audio) {\n                            let confirm = window.confirm(\"Uploading a new video will overwrite this current media. Do you want to proceed?\");\n                            if(!confirm) {\n                                return;\n                            }\n                            await deleteRecordingMedia();\n                            if(recording.audio) {\n                                recording.audio=null;\n                                recording.audio_path=null;\n                                recording=recording;\n                            }\n                            if(recording.video) {\n                                recording.video=null;\n                                recording.video_path=null;\n                                recording=recording;\n                            }\n\n                            // recording.transcript_list = [];\n                            // recording.transcript = \"\";\n                            // recording=recording;\n                            await saveRecording(recording);\n\n\n                            await logAction(\"FeedbackSelector: Remove media\", recording);\n                        }\n                    }\n                    // feedback_list=[];\n\n                    let videoSrc = URL.createObjectURL(file);\n                    load_status=\"Uploading video...\";\n                    progress= to_transcribe ? 20 : 50;\n                    [micPath, videoPath] = await extractAudioFromVideo(file);\n                    if(!micPath || !videoPath) {\n                        micPath = null;\n                        videoPath = null;\n                        throw new Error('Failed to extract audio from video');\n                    } \n\n                    let micSrc = await fetchAudio(micPath);\n\n                    let transcript=\"\"; \n                    let transcript_list = []; \n                    if(to_transcribe) {\n                        load_status=\"Transcribing audio (this may take a while) ...\";\n                        progress=40;\n                        transcript = await transcribeMic(micPath);\n\n                        load_status=\"Cleaning transcript...\";\n                        progress=60;\n                        // load_status=\"Extracting video frames from transcript timestamps...\";\n                        // let timestamp_frames = await extractFrames(videoPath, transcript);\n                        transcript = await simplifyTranscript(transcript);\n                        transcript_list = await convertTranscriptToList(transcript);\n                        \n                        load_status=\"Saving transcript as a database (this may take a while) ... \"\n                        progress=80;\n                        await embedTranscriptList(transcript_list);\n                    }\n\n\n                    load_status=\"Done!\"\n                    progress=100;\n                    pause(1500);\n                    progress=0;\n                    let newRecording = {\n                        video: videoSrc, \n                        video_path: videoPath,\n                        audio: micSrc, \n                        audio_path: micPath,\n                        transcript: transcript, \n                        transcript_list:transcript_list\n                    };\n\n                    if(recording && (\"transcript_list\" in recording && recording.transcript_list)) {\n                        recording.video = videoSrc;\n                        recording.video_path = videoPath;\n                        recording.audio = micSrc;\n                        recording.audio_path = micPath;\n                        recording=recording;\n                        recording=recording;\n                    } else {\n                        recording = newRecording;\n                    }\n\n\n                    micPath=null;\n                    videoPath=null;\n                    // await incrementRecordNumber();\n                } else if(file.type.includes('audio')) {\n                    if(recording || \"audio\" in recording || \"video\" in recording || \"transcript_list\" in recording) {\n                        if(recording.audio || recording.video) {\n                            let confirm = window.confirm(\"Uploading a new audio will overwrite this current media. Do you want to proceed?\");\n                            if(!confirm) {\n                                return;\n                            }\n                            await deleteRecordingMedia();\n                            if(recording.audio) {\n                                recording.audio=null;\n                                recording.audio_path=null;\n                                recording=recording;\n                            }\n                            if(recording.video) {\n                                recording.video=null;\n                                recording.video_path=null;\n                                recording=recording;\n                            }\n                            await saveRecording(recording);\n                            await logAction(\"FeedbackSelector: Remove media\", recording);\n                        }\n                    }\n                    // feedback_list=[];\n                    let audioSrc = URL.createObjectURL(file);\n                    // Save the audio file and get its path\n                    load_status=\"Uploading audio...\";\n                    progress= to_transcribe ? 20 : 50;\n                    const formData = new FormData();\n                    formData.append('audio', file);\n                    const response = await fetch('/download_mic', {\n                        method: 'POST',\n                        body: formData,\n                    });\n                    if(!response.ok) {\n                        micPath = null;\n                        videoPath = null;\n                        throw new Error('Failed to save uploaded audio');\n                    }\n                    let json = await response.json();\n                    micPath = json[\"filepath\"];\n\n                    let transcript=\"\"; \n                    let transcript_list = []; \n\n                    if(to_transcribe) {\n                        // Transcribe the audio\n                        load_status=\"Transcribing audio (this may take a while) ...\";\n                        progress=40;\n                        transcript = await transcribeMic(micPath);\n\n                        load_status=\"Cleaning transcript...\";\n                        progress=60;\n                        transcript = await simplifyTranscript(transcript);\n                        transcript_list = await convertTranscriptToList(transcript);\n\n                        load_status=\"Saving transcript as a database (this may take a while) ... \"\n                        progress=80;\n                        await embedTranscriptList(transcript_list);\n                    }\n\n                    load_status=\"Done!\"\n                    progress=100; \n                    await pause(1500);\n                    progress=0;\n                    let newRecording = {\n                        video: null,\n                        video_path: null,\n                        audio: audioSrc, \n                        audio_path: micPath,\n                        transcript: transcript, \n                        transcript_list:transcript_list\n                    };\n\n                    if(recording && (\"transcript_list\" in recording && recording.transcript_list)) {\n                        recording.audio = audioSrc;\n                        recording.audio_path = micPath;\n                        recording=recording;\n                        recording=recording;\n                    } else {\n                        recording = newRecording;\n                    }\n\n                    micPath=null;\n                    videoPath=null;\n                    // await incrementRecordNumber();\n\n                } \n            }\n            // Clear the file input\n            media_files=null;\n            mediafile_input.value='';\n            \n        }\n        console.log(\"Recording\", recording);\n        progress=0;\n        load_status=\"\";\n    \n    }\n\n    async function handleTranscriptUpload() {\n        if(transcript_files) {\n            for (const file of transcript_files) {\n                console.log(file.type);\n                if(file.name.endsWith('.srt')) {\n\n                    if(recording || \"transcript\" in recording || \"transcript_list\" in recording) {\n                        if(recording.transcript_list) {\n                            if(recording.transcript_list.length > 0) {\n                                let confirm = window.confirm(\"Uploading a new transcript will overwrite this current transcript. Do you want to proceed?\");\n                                if(!confirm) {\n                                    return;\n                                }\n                                removeAllFeedback();\n                                feedback_list=[];\n                                recording.transcript_list = [];\n                                recording.transcript = \"\";\n                                recording=recording;\n                                await saveRecording(recording);\n                                await logAction(\"FeedbackSelector: Remove transcript\", recording);\n                            }\n                        }\n                        \n                    }\n                    \n\n                    let reader = new FileReader();\n\n                    reader.onload = async function(e) {\n                        console.log(ld_bar_transcript);\n                        is_loading=true;\n                        let text = e.target.result;\n                        console.log(text);\n                        load_status=\"Cleaning transcript...\";\n                        progress=30;\n                        let transcript = await simplifyTranscript(text);\n                        await pause(1500); \n\n                        let transcript_list = await convertTranscriptToList(transcript); \n\n                        let newRecording = {\n                            video: null, \n                            video_path: null,\n                            audio: null, \n                            audio_path: null,\n                            transcript: transcript, \n                            transcript_list:transcript_list\n                        };\n                        if(recording && ((\"video\" in recording && recording.video) || (\"audio\" in recording && recording.audio))) {\n                            recording.transcript_list = transcript_list;\n                            recording.transcript_list=recording.transcript_list;\n                            recording.transcript=transcript;\n                            recording.transcript=recording.transcript;\n                            recording=recording;\n                            recording=recording;\n                        } else {\n                            recording = newRecording;\n                        }\n\n\n                        load_status=\"Saving transcript as a database (this may take a while) ... \"\n                        progress=60;\n                        await embedTranscriptList(transcript_list);\n\n                        // await saveTranscriptList();\n                        await saveRecording(recording);\n                        console.log(\"Transcript list embedded\")\n                        load_status=\"Done!\"\n                        progress=100;\n                        await pause(500); \n                        progress=0;\n                        \n                        is_loading=false;\n                    }\n                    reader.readAsText(file);\n                }\n\n            }\n            // Clear the file input\n            transcript_files=null;\n            transcript_fileinput.value='';\n            \n        }\n        console.log(\"Recording\", recording);\n        progress=0;\n        load_status=\"\";\n    }\n\n    async function simplifyTranscript(transcript) {\n        const response = await fetch(\"/simplify_transcript\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({transcript: transcript})\n        });\n        if(!response.ok) {\n            throw new Error(\"Failed to simplify transcript string\");\n        }\n        const json = await response.json();\n        return json[\"simplified_transcript\"];\n    }\n\n    async function convertTranscriptToList(transcript) {\n        const response = await fetch(\"/transcript_to_list\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({transcript: transcript})\n        });\n        if(!response.ok) {\n            throw new Error(\"Failed to convert transcript string to list of excerpts\");\n        }\n\n        // 4) Send response back here to client\n        const json = await response.json();\n        let transcript_list = json[\"transcript_list\"];\n\n        return transcript_list;\n    }\n\n    function convertTranscriptListToStr(transcript_list) {\n        let transcript_str = \"\";\n        for (let i = 0; i < transcript_list.length; i++) {\n            let excerpt = transcript_list[i];\n            let id= excerpt.id;\n            let start = excerpt.start_timestamp;\n            let end = excerpt.end_timestamp;\n            \n            let dialogue = excerpt.dialogue;\n\n            if(\"speaker\" in excerpt && excerpt.speaker != \"\"){\n                let speaker = excerpt.speaker;\n                transcript_str += `${id}\\n${start} --> ${end}\\n${speaker}: ${dialogue}\\n\\n`;\n            } else {\n                transcript_str += `${id}\\n${start} --> ${end}\\n${dialogue}\\n\\n`;\n            }\n        }\n        return transcript_str;\n    }\n    \n    async function autoDetectFeedback(transcript_list) {\n        let feedback_list = [];\n\n        let transcript_str = convertTranscriptListToStr(transcript_list);\n        \n        const response = await fetch(\"/autodetect_feedback\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({transcript: transcript_str})\n        });\n        if(!response.ok) {\n            throw new Error(\"Failed to detect feedback\");\n        }\n        const json = await response.json();\n        feedback_list = json[\"feedback_list\"];\n        console.log(feedback_list);\n        return feedback_list;   \n    }\n\n    function addFeedback(type) {\n        const selection = window.getSelection().toString();\n        if(selection.trim() === \"\") {\n            alert(\"Please highlight text in the transcript with your mouse to add as feedback.\");\n            return \"Error: No text highlighted\";\n        }\n        if(selection) {\n            let feedback = {quote: selection, type: type, done:false, speaker:null, dialogue_id:null};\n            let excerpt_reference = findExcerptByQuote(recording.transcript_list, selection);\n            // console.log(excerpt_reference);\n\n            if(!excerpt_reference) {\n                console.log(\"Error: Corresponding transcript excerpt not found\")\n                alert(\"Error: Corresponding transcript excerpt not found. Feedback not added.\");\n                return \"Error: Corresponding transcript excerpt not found for selection: \" + selection;\n            }\n            feedback.id = feedback_list.length+1;\n            feedback.dialogue_id = excerpt_reference.id;\n            feedback.speaker=excerpt_reference.speaker;\n            feedback.excerpt_reference=excerpt_reference;\n            feedback.chatbot_messages =[{\"role\":\"system\", \"content\":\"You are an expert senior interior designer who is tasked to assist less experienced interior designers like students and junior interior designers with their work by answering their questions on a wide range of interior design topics. \"}];\n            feedback_list.push(feedback);\n            feedback_list=feedback_list;\n\n            recording.transcript_list = recording.transcript_list;\n\n            autoHighlightFeedback([feedback]);\n            return feedback;\n        } else {\n            alert(\"Please highlight text in the transcript with your mouse to add as feedback.\");\n            return \"Error: No text highlighted\";\n        }\n    }\n\n\n    function removeFeedback() {\n        const selection = window.getSelection().toString();\n        if(selection.trim() === \"\") {\n            alert(\"Please highlight the feedback you want to remove using your mouse.\");\n            return \"Error: No text highlighted\";\n        }\n        if(selection) {\n            for(let i=0; i < feedback_list.length; i++) {\n                let feedback = feedback_list[i];\n                if(feedback.quote.includes(selection)) {\n\n                    let dialogue_id = parseInt(feedback.dialogue_id);\n                    let feedback_quote = feedback.quote;\n\n                    feedback_list.splice(i, 1);\n                    feedback_list=feedback_list;\n\n                    deHighlightFeedback(dialogue_id, feedback_quote);\n                    return feedback;\n                }\n            }  \n        }\n        return \"Error: Feedback not found for selection: \" + selection;\n    }\n\n    function removeAllFeedback() {\n        for (let i = 0; i < feedback_list.length; i++) {\n            let feedback = feedback_list[i];\n            let dialogue_id = parseInt(feedback.dialogue_id);\n            let feedback_quote = feedback.quote;\n            deHighlightFeedback(dialogue_id, feedback_quote);\n\n            feedback_list.splice(i, 1);\n            feedback_list=feedback_list;\n        }\n    }\n\n    function deHighlightFeedback(dialogue_id, feedback_quote) {\n        for(let j = 0; j < recording.transcript_list.length; j++) {\n            let e = recording.transcript_list[j];\n            if(e.id === dialogue_id) {\n                let dialogue = e.dialogue;\n                let start_index = dialogue.indexOf(\"<mark\");\n                let end_index = dialogue.indexOf(\"</mark>\") + 7;\n                // BUG: The highlight in the dialogue is not being removed\n                let highlighted_dialogue = dialogue.slice(0, start_index) + feedback_quote + dialogue.slice(end_index);\n                \n                e.dialogue = highlighted_dialogue;\n                e.dialogue = e.dialogue;\n                recording.transcript_list = recording.transcript_list;\n                break;\n            }\n        }\n        \n    }\n\n    function autoHighlightFeedback(feedback_list) {\n        for(let i=0; i < feedback_list.length; i++) {\n            let feedback=feedback_list[i];\n            let feedback_type = feedback.type;\n            if (feedback.type!=\"positive\" && feedback.type!=\"critical\") {\n                continue;\n            }\n\n            let dialogue_id = parseInt(feedback.dialogue_id);\n            let excerpt;\n            for(let j = 0; j < recording.transcript_list.length; j++) {\n                let e = recording.transcript_list[j];\n                if(e.id === dialogue_id) {\n                    excerpt = e;\n                    break;\n                }\n                \n            }\n            if (!excerpt){\n                console.log(\"Error: Corresponding transcript excerpt not found\")\n                continue;\n            }\n            \n            let dialogue = excerpt.dialogue;\n            let start_index = dialogue.indexOf(feedback.quote);\n            let end_index = start_index + feedback.quote.length;\n            let highlighted_dialogue = dialogue.slice(0, start_index) + `<mark class=\"${feedback_type}\" style=\"background-color:${feedback_type === \"positive\" ? \"lightgreen\" : \"lightcoral\"};\">${feedback.quote}</mark>` + dialogue.slice(end_index);\n            excerpt.dialogue = highlighted_dialogue;\n        }\n        recording.transcript_list = recording.transcript_list;\n    }\n\n\n    function findExcerptByID(transcript_list,id) {\n        id=parseInt(id);\n        for(let i=0; i < transcript_list.length; i++) {\n            let excerpt = transcript_list[i];\n            if(excerpt.id === id) {\n                return excerpt;\n            }\n        }\n        console.log(\"Error: Can't find excerpt with id\", id);\n        return null;\n    }\n\n    function findExcerptByQuote(transcript_list,quote) {\n        console.log(quote);\n        for(let i=0; i < transcript_list.length; i++) {\n            let excerpt = transcript_list[i];\n            let excerpt_str = excerpt.dialogue;\n            if(excerpt.speaker){\n                excerpt_str = excerpt.speaker + \": \" + excerpt_str;\n            }\n            if(excerpt_str.includes(quote)) {\n                return excerpt;\n            }\n        }\n        return null;\n    }\n\n    \n\n    \n\n    onMount(async () => {\n        console.log(recording);\n    });\n</script>\n\n<div div class=\"row spaced\" id=\"feedback-selector-page\">\n    <div id=\"left-panel\" class=\"column spaced\" >\n        <div id=\"transcript-area\" class=\"column bordered spaced\">\n\n            <div class=\"overlay centered padded\" class:invisible={is_loading===false}> \n                    <LoadingBar bind:progress={progress} bind:status={load_status} />\n            </div>\n\n            <div id=\"traverse-feedback-area\" class=\"bordered spaced\" >\n                {#if feedback_list && feedback_list.length > 0}\n                    <span> {feedback_idx+1} of {feedback_list.length} feedback moments highlighted </span>\n                {:else}\n                    <span> No feedback moments highlighted. </span>\n                {/if}\n                <button disabled={!feedback_list || feedback_list.length <= 0} on:click={async () => {\n                    if(feedback_idx > 0) {\n                        feedback_idx--;\n                    } else {\n                        feedback_idx = feedback_list.length - 1;\n                    }\n                    focusOnFeedback(feedback_list[feedback_idx]);\n                    await logAction(\"FeedbackSelector: Traverse to previous feedback\", feedback_list[feedback_idx]);\n                }}> \n                    <img src=\"./logos/up-arrow-5-svgrepo-com.svg\" alt=\"Prev feedback\" class=\"logo\" style=\"width: 1.5rem; height: 1.5rem;\">\n                </button>\n                <button disabled={!feedback_list || feedback_list.length <= 0} on:click={async () => {\n                    if(feedback_idx < feedback_list.length - 1) {\n                        feedback_idx++;\n                    } else {\n                        feedback_idx = 0;\n                    }\n                    focusOnFeedback(feedback_list[feedback_idx]);\n                    await logAction(\"FeedbackSelector: Traverse to next feedback\", feedback_list[feedback_idx]);\n                }}> \n                    <img src=\"./logos/down-arrow-5-svgrepo-com.svg\" alt=\"Next feedback\" class=\"logo\" style=\"width: 1.5rem; height: 1.5rem;\">  \n                </button>\n            </div>\n            {#if recording && recording.transcript_list && recording.transcript_list.length > 0}\n                <p class=\"padded\"> \n                    {#each recording.transcript_list as excerpt, i}\n                        <div class=\"spaced\">\n                            <span class=\"timestamp\" on:click={async () => {\n                                seekTo(excerpt.start_timestamp, mediaPlayer); \n                                await logAction(\"FeedbackSelector: Seeked to start timestamp\", excerpt.start_timestamp);\n                            }}>[{excerpt.start_timestamp}]</span> \n                            - \n                            <span class=\"timestamp\" on:click={async () => {\n                                seekTo(excerpt.end_timestamp, mediaPlayer);\n                                await logAction(\"FeedbackSelector: Seeked to end timestamp\", excerpt.end_timestamp);\n                            }}>[{excerpt.end_timestamp}]</span>\n                            <br>\n                            {excerpt.speaker ? excerpt.speaker+\":\" : \"\"}  \n                            <span id={excerpt.id}>\n                                {@html excerpt.dialogue} \n                            </span> <br><br>\n                        </div>    \n                    {/each}\n                </p>\n            {:else}\n                <div class=\"centered\" style=\"height: 100%; width: 100%;\">\n                    <!-- <span> No discussion transcript loaded. Please first record or upload your discussion. </span> -->\n                    <span> No discussion transcript loaded. Please first upload your transcript. </span>\n                </div>\n                \n            {/if}\n        </div>\n        <div id=\"transcript-buttons-area\" class=\"row centered spaced bordered\">\n            <div id=\"capture-feedback-panel\" class=\"column padded centered spaced\">\n                <span style=\"font-weight: bold; text-decoration: underline; margin-left: 1rem;\"> Step 1: Upload your discussion.</span>\n                <div class=\"row centered spaced\">\n                    <!-- <div class=\"column centered\">\n                        <span >Screen record your discussion</span>\n                        <div class=\"row spaced\">\n                            <button class=\"action-button\" on:click={async () => {\n                                if(\"video\" in recording || \"audio\" in recording || \"transcript_list\" in recording) {\n                                    if(recording.video || recording.audio || recording.transcript_list ) {\n                                        let confirm = window.confirm(\"Starting a new recording will clear all highlighted feedback and overwrite the existing recording. Do you want to proceed?\");\n                                        if(!confirm) {\n                                            return;\n                                        }\n                                    }\n                                }\n                                // feedback_list=[]; \n                                startRecording();\n                                await logAction(\"FeedbackSelector: Start recording\", null);\n                            }} disabled={is_recording || is_paused} >\n                                <img src=\"./logos/record-video-svgrepo-com.svg\" alt=\"Start recording\" class=\"logo\">\n                                Record\n                            </button>\n                            {#if is_paused}\n                                <button class=\"action-button\" on:click={async () => {\n                                        resumeRecording(); \n                                        await logAction(\"FeedbackSelector: Resume recording\", null);\n                                    }} disabled={!is_paused}>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-play logo\" style=\"border-radius: 50%; padding: 5px; background-color: #fff;\">\n                                        <polygon points=\"5 3 19 12 5 21 5 3\"></polygon>\n                                    </svg>\n                                    Resume\n                                </button>\n                            {:else}\n                                <button class=\"action-button\" on:click={async () => {\n                                        pauseRecording();\n                                        await logAction(\"FeedbackSelector: Pause recording\", null)\n                                    }} disabled={!is_recording || is_paused}>\n                                    <img src=\"./logos/pause-circle-svgrepo-com.svg\" alt=\"Pause recording\" class=\"logo\">\n                                    Pause\n                                </button>\n                            {/if}\n                            <button class=\"action-button\" \n                                on:click={ async () => {\n                                    is_loading=true;\n                                    await stopRecording();\n                                    is_loading=false;\n                                    await logAction(\"FeedbackSelector: Stop recording\", recording);\n                                }}\n                                disabled={!is_recording && !is_paused}>\n                                <img src=\"./logos/record-video-stop-svgrepo-com.svg\" alt=\"Stop recording\" class=\"logo\">\n                                Stop\n                            </button>\n                        </div>\n                    </div>\n                    <span>or</span> -->\n                    <div class=\"column centered spaced\">\n                        <div class=\"column spaced centered\">\n                            <label for=\"file_upload\" >Upload your own video or audio: </label>\n                            <div class=\"row centered spaced\">\n                                <input style=\"width: 50%;\" bind:value={media_files} bind:this={mediafile_input} name=\"mediafile_upload\"type=\"file\" id=\"mediafile_upload\" accept=\"video/*, audio/*\"\n                                    on:change={async (e) => {\n                                        media_files = e.target.files;\n                                        console.log(media_files);\n                                        \n                                        await logAction(\"FeedbackSelector: Select media file\", media_files);\n                                    }}\n                                />\n\n                                <!-- <div class=\"column centered\">\n                                    <label for=\"to-transcribe\">\n                                        Transcribe \n                                        <a class=\"tooltip-link\" style=\"color: blue;\"\n                                        on:mouseover={() => {tooltip.style.visibility = 'visible';}} \n                                        on:mouseout={() => {tooltip.style.visibility = 'hidden';}}>\n                                            (?)\n                                        </a>\n                                    </label>\n                                    <span bind:this={tooltip} class=\"tooltip\">Checking this will automatically transcribe the video/audio.</span>\n                                    <input id=\"to-transcribe\" type=\"checkbox\" bind:checked={to_transcribe} on:change={async () => {logAction(\"FeedbackSelector: Check transcribe\",to_transcribe)}}/>\n                                </div> -->\n                                \n                                <button class=\"action-button centered column \" on:click={async () => {\n                                            is_loading=true;\n                                            await handleMediaUpload();\n                                            \n                                            is_loading=false;\n                                            await saveRecording(recording);\n                                            await logAction(\"FeedbackSelector: Upload media\", recording);\n                                        }} \n                                disabled={is_loading || !media_files || media_files.length===0}> \n                                    <img src=\"./logos/upload-svgrepo-com.svg\" alt=\"Upload file\" class=\"mini-icon\">\n                                    Upload file \n                                </button> \n                                \n                                {#if recording.video || recording.audio}\n                                    <button class=\"action-button centered row \" on:click={async () => {\n                                        let confirm = window.confirm(\"This cannot be undone. Do you want to proceed?\");\n                                        if(confirm) {\n                                            // recording = {};\n                                            await deleteRecordingMedia();\n                                            if(recording.audio) {\n                                                recording.audio=null;\n                                                recording.audio_path=null;\n                                                recording=recording;\n                                            }\n                                            if(recording.video) {\n                                                recording.video=null;\n                                                recording.video_path=null;\n                                                recording=recording;\n                                            }\n                                            await saveRecording(recording);\n                                            await logAction(\"FeedbackSelector: Remove media\", recording);\n                                        }\n                                    }} \n                                    disabled={is_loading}> \n                                        <img src=\"./logos/delete-x-svgrepo-com.svg\" alt=\"Delete media\" class=\"mini-icon\">\n                                        Remove media\n                                    </button> \n                                {/if}\n                            </div>\n                        </div>\n\n                        <div class=\"column spaced centered\">\n                            <label for=\"file_upload\" >Upload your own transcript (in .srt only): </label>\n                            <div class=\"row centered spaced\">\n                                <input style=\"width: 50%;\" bind:value={transcript_files} bind:this={transcript_fileinput} name=\"transcirptfile_upload\"type=\"file\" id=\"transcriptfile_upload\" accept=\" .srt\"\n                                    on:change={async (e) => {\n                                        transcript_files = e.target.files;\n                                        await logAction(\"FeedbackSelector: Select transcript file\", transcript_files);\n                                    }}\n                                />\n                                <button class=\"action-button centered column \" on:click={async () => {\n                                            is_loading=true;\n                                            await handleTranscriptUpload();\n                                            is_loading=false;\n                                            console.log(recording);\n                                            await logAction(\"FeedbackSelector: Upload transcript\", recording);\n                                            \n                                        }} \n                                disabled={is_loading || !transcript_files || transcript_files.length===0}> \n                                    <img src=\"./logos/upload-svgrepo-com.svg\" alt=\"Upload file\" class=\"mini-icon\">\n                                    Upload file\n                                </button> \n                                {#if recording.transcript_list && recording.transcript_list.length > 0}\n                                    <button class=\"action-button centered row \" on:click={async () => {\n                                        let confirm = window.confirm(\"This cannot be undone. Do you want to proceed?\");\n                                        if(confirm) {\n                                            removeAllFeedback();\n                                            feedback_list=[];\n                                            recording.transcript_list = [];\n                                            recording.transcript = \"\";\n                                            recording=recording;\n                                            await saveRecording(recording);\n                                            await logAction(\"FeedbackSelector: Remove transcript\", recording);\n                                        }\n                                    }} \n                                    disabled={is_loading}> \n                                        <img src=\"./logos/delete-x-svgrepo-com.svg\" alt=\"Delete transcript\" class=\"mini-icon\">\n                                        Remove transcript\n                                    </button> \n                                {/if}\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n            <div id=\"feedback-highlight-panel\" class =\"column spaced padded \">\n                <span style=\"font-weight: bold; text-decoration: underline; margin-left: 1rem;\"> Step 2: Highlight feedback in the discussion's transcript.</span>\n                <div class=\"centered\" style=\"height: 100%; width: 100%;\">\n                    <div class=\"row centered spaced\">\n                        <button class = \"action-button\" \n                            disabled={!recording || !recording.transcript_list || is_loading}\n                            on:click={async () => {\n                                if(feedback_list.length > 0) {\n                                    let confirm = window.confirm(\"Auto-detecting again will clear all feedback highlighted. Do you want to proceed?\");\n                                    if(!confirm) {\n                                        return;\n                                    }\n                                }\n    \n                                is_loading=true;\n                                progress=0;\n                                let list = recording.transcript_list;\n                                // Divide list into 4 equally sized chunks.\n                                let chunk_size = Math.ceil(list.length / 4);\n                                let chunk1 = list.slice(0, chunk_size);\n                                let chunk2 = list.slice(chunk_size, 2 * chunk_size);\n                                let chunk3 = list.slice(2 * chunk_size, 3 * chunk_size);\n                                let chunk4 = list.slice(3 * chunk_size, list.length);\n                                let chunks=[chunk1, chunk2, chunk3, chunk4];\n                                load_status=\"Detecting feedback in transcript ...\";\n                                for(let i=0; i < chunks.length; i++) {\n                                    let thing = await autoDetectFeedback(chunks[i]);\n                                    feedback_list = feedback_list.concat(thing);\n                                    progress = (i+1) * 20;\n                                    await pause(250); \n                                }\n                                feedback_list=feedback_list;\n                                console.log(feedback_list);\n                                for(let j = 0; j < feedback_list.length; j++) {\n                                    feedback_list[j].id = j+1; // Assign unique id to each feedback\n                                    let reference_id = feedback_list[j].dialogue_id;\n                                    let excerpt = findExcerptByID(recording.transcript_list,reference_id);\n                                    feedback_list[j].excerpt_reference=excerpt;\n                                }\n                                feedback_list=feedback_list;\n                                load_status=\"Highlighting feedback ...\"\n                                autoHighlightFeedback(feedback_list);\n                                await saveFeedbackList(feedback_list);\n                                await saveRecording(recording);\n                                await pause(500); \n                                progress=100; \n                                console.log(\"Feedback: \" + feedback_list[0]);\n                                is_loading=false;\n                                progress=0; \n                                load_status=\"\";\n                                await logAction(\"FeedbackSelector: Auto-detect feedback\", feedback_list);\n                            }}\n                        > \n                            <img src=\"./logos/magnifying-glass-for-search-3-svgrepo-com.svg\" alt=\"Auto-detect Feedback\" class=\"logo\">\n                            Auto-detect <br> Feedback\n                        </button>\n                        <button class=\"action-button\"\n                            disabled={!recording || !recording.transcript_list || is_loading}\n                            on:click={async () => {\n                                let selection = addFeedback(\"positive\");\n                                await saveFeedbackList(feedback_list);\n                                await saveRecording(recording);\n                                await logAction(\"FeedbackSelector: Add positive feedback\", selection);\n                            }}\n                        > \n                            <img src=\"./logos/highlight-green-svgrepo-com.svg\" alt=\"Highlight Positive Feedback\" class=\"logo\">\n                            Highlight <br> Positive\n                        </button>\n                        <button class=\"action-button\"\n                            disabled={!recording || !recording.transcript_list || is_loading}\n                            on:click={async () => {\n                                let selection = addFeedback(\"critical\");\n                                await saveFeedbackList(feedback_list);\n                                await saveRecording(recording);\n                                await logAction(\"FeedbackSelector: Add critical feedback\", selection);\n                            }}\n                        > \n                            <img src=\"./logos/highlight-red-svgrepo-com.svg\" alt=\"Highlight Critical Feedback\" class=\"logo\">\n                            Highlight <br> Critical \n                        </button>\n                        <button class=\"action-button\"\n                            disabled={!recording || !recording.transcript_list || is_loading || feedback_list.length <= 0}\n                            on:click={async () => {\n                                let selection = removeFeedback();\n                                await saveFeedbackList(feedback_list);\n                                await saveRecording(recording);\n                                await logAction(\"FeedbackSelector: Remove feedback\", selection);\n                            }}\n                        > \n                            <img src=\"./logos/erase-svgrepo-com.svg\" alt=\"De-highlight Feedback\" class=\"logo\">\n                            Remove <br> Feedback\n                        </button>\n                        <button class=\"action-button\"\n                            disabled={!recording || !recording.transcript_list || is_loading || feedback_list.length <= 0}\n                            on:click={async () => {\n                                removeAllFeedback();\n                                await saveFeedbackList(feedback_list);\n                                await saveRecording(recording);\n                                await logAction(\"FeedbackSelector: Removed all feedback\", feedback_list);\n                            }}\n                        > \n                            <img src=\"./logos/delete-svgrepo-com.svg\" alt=\"Delete all Feedback\" class=\"logo\">\n                            Remove all <br> Feedback\n                        </button>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n    </div>\n\n    <div id=\"right-panel\" class=\"column spaced\" >\n        <div id=\"media-player-area\" class=\"bordered centered\">\n            {#if recording && recording.video}\n                <video bind:this={mediaPlayer} src={recording.video} controls style=\"width: 100%; height: 100%;\">\n                    <track kind=\"captions\" src=\"blank.vtt\" srclang=\"en\">\n                </video>\n            {:else if recording && recording.audio}\n                <audio bind:this={mediaPlayer} src={recording.audio} controls style=\"width: 100%; height: 100%;\"></audio>\n            {:else}\n                <video bind:this={mediaPlayer} src=\"video.mp4\" controls style=\"width: 100%; height: 100%;\">\n                    <track kind=\"captions\" src=\"blank.vtt\" srclang=\"en\">\n                </video>\n            {/if}\n        </div>\n        <div id=\"feedback-details-area\" class=\"bordered padded spaced\" style=\"overflow-y:auto;\">\n            <h3 style=\"font-weight: bold; text-decoration: underline;\"> Discussion Transcript Details </h3>\n            {#if recording && recording.transcript_list}\n                {#if recording.transcript_list && recording.transcript_list.length > 0 &&  \"speaker\" in recording.transcript_list[0]} \n                    <strong> Number of participants: {Object.keys(recording.transcript_list.reduce((acc, cur) => {\n                        acc[cur.speaker] = true;\n                        return acc;\n                    }, {})).length}</strong> <br>\n                    <ul>\n                        {#each Object.entries(recording.transcript_list.reduce((acc, cur) => {\n                            acc[cur.speaker] = (acc[cur.speaker] || 0) + 1;\n                            return acc;\n                        }, {})) as [pa, count]}\n                            <li> - {pa}: {count} utterances</li>\n                            <!-- <li> - {pa} </li> -->\n                        {/each}\n                    </ul>\n                    <br>\n                {/if}\n                \n                \n                {#if feedback_list}\n                    <strong> Number of feedback utterances: {feedback_list.length} </strong>\n                    <ul>\n                        <li> - Number of positive feedback: {feedback_list.filter(feedback => feedback.type === 'positive').length}</li>\n                        <li> - Number of critical feedback: {feedback_list.filter(feedback => feedback.type === 'critical').length}</li>\n                    </ul>\n                {/if}\n            {/if}\n        </div>\n    </div>\n    \n\n\n\n</div>\n\n<style>\n    #feedback-selector-page{\n        position: relative;\n        padding-top: 1rem;\n        display:flex;\n        height:100%;\n        width:100%;\n        background-color: #F8F9FA;\n    }\n\n    #left-panel {\n        position: relative;\n        height: 100%;\n        width: 60%;\n        padding-bottom: 1rem;\n    }\n\n    #transcript-area {\n        width:100%;\n        height:72%;\n        overflow-y: auto;\n    }\n\n    #traverse-feedback-area {\n        align-self: flex-end; \n        display: flex; \n        padding: 0.5rem; \n        position: sticky; \n        top: 0; \n        right: 0; \n        z-index: 2; \n        justify-content: right; \n        text-align:right; \n        width: 35%; \n        background-color: #f0f0f0;\n    }\n\n    #transcript-buttons-area {\n        width:100%;\n        height:28%;\n    }\n\n    #capture-feedback-panel {\n        position:relative;\n        height: 100%;\n        width: 60%;\n    }\n\n    #feedback-highlight-panel {\n        position:relative;\n        height: 100%;\n        width: 40%;\n    }\n\n    #right-panel {\n        position: relative;\n        height: 100%;\n        width: 40%;\n        padding-bottom: 1rem;\n    }\n\n    #media-player-area {\n        position:relative;\n        height: 50%;\n        width: 100%;\n    }\n\n    #feedback-details-area {\n        position:relative;\n        height: 50%;\n        width: 100%;\n    }\n\n    .action-button{\n        height: 100%;\n        width: auto; \n        border: 0 none;\n    }\n\n    mark.positive {\n        /* background-color:lightgreen;\n        color: black; */\n        background-color: #28A745;\n        color: #FFFFFF;\n        \n    }\n\n    mark.critical{\n        /* background-color:lightcoral;\n        color: black; */\n        background-color: #DC3545;\n        color: #FFFFFF;\n    }\n\n    mark:hover {\n        cursor: pointer;\n    }\n\n    span.timestamp {\n        color: #007BFF;\n    }\n\n    span.timestamp:hover{\n        /* font-weight: bold; */\n        text-decoration: underline;\n        cursor: pointer;\n    }\n\n    \n\n</style>","<script>\n\n  export let min = 0.0;\n  export let max = 2.0;\n  export let step = 0.1;\n  export let value = 1.0;\n\n\n</script>\n\n<div class=\"centered spaced\" style=\"width: 100%; height: 100%;\">\n  <input type=\"range\" min={min} max={max} step={step} bind:value={value}  id=\"rangeSlider\">\n  <span id=\"sliderValue\">{value}</span>\n</div>\n\n\n\n\n<style>\n  /* General styles for the slider */\n  input[type=range] {\n    -webkit-appearance: none; /* Override default CSS styles */\n    appearance: none;\n    width: 100%; /* Full-width */\n    height: 1rem; /* Specified height */\n    background: #d3d3d3; /* Grey background */\n    outline: none; /* Remove outline */\n    opacity: 0.7; /* Set transparency (cross-browser) */\n    -webkit-transition: .2s; /* 0.2 seconds transition on hover */\n    transition: opacity .2s;\n  }\n\n  /* Mouse-over effects */\n  input[type=range]:hover {\n    opacity: 1; /* Fully opaque on hover */\n  }\n\n  /* Styles for the slider thumb */\n  input[type=range]::-webkit-slider-thumb {\n    -webkit-appearance: none; /* Override default look */\n    appearance: none;\n    width: 1.3rem; /* Width and height of the thumb */\n    height: 1.3rem;\n    background: #3071a9; /* Green background */\n    cursor: pointer; /* Cursor on hover */\n    border-radius: 50%; /* Circular shape */\n  }\n\n  input[type=range]::-moz-range-thumb {\n    width: 1.3rem; /* Width and height of the thumb */\n    height: 1.3rem;\n    background: #3071a9; /* Green background */\n    cursor: pointer; /* Cursor on hover */\n    border-radius: 50%; /* Circular shape */\n  }\n\n  /* Styles for the slider track */\n  input[type=range]::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 1rem;\n    background: lightgray; /* Blue background */\n    border: none; /* No border */\n  }\n\n  input[type=range]::-moz-range-track {\n    width: 100%;\n    height: 1rem;\n    background: lightgray; /* Blue background */\n    border: none; /* No border */\n  }\n</style>","<script>\n  import { supressWarnings } from './supress-warnings'\n\n  export let type = undefined\n  export let tokens = undefined\n  export let header = undefined\n  export let rows = undefined\n  export let ordered = false\n  export let renderers\n\n  supressWarnings();\n</script>\n\n{#if !type}\n  {#each tokens as token}\n    <svelte:self {...token} {renderers} />\n  {/each}\n{:else}\n  {#if renderers[type]}\n    {#if type === 'table'}\n      <svelte:component this={renderers.table}>\n        <svelte:component this={renderers.tablehead}>\n          <svelte:component this={renderers.tablerow}>\n            {#each header as headerItem, i}\n              <svelte:component\n                this={renderers.tablecell}\n                header={true}\n                align={$$restProps.align[i] || 'center'}\n                >\n                <svelte:self tokens={headerItem.tokens} {renderers} />\n              </svelte:component>\n            {/each}\n          </svelte:component>\n        </svelte:component>\n        <svelte:component this={renderers.tablebody}>\n          {#each rows as row}\n            <svelte:component this={renderers.tablerow}>\n              {#each row as cells, i}\n                <svelte:component\n                  this={renderers.tablecell}\n                  header={false}\n                  align={$$restProps.align[i] || 'center'}\n                  >\n                  <svelte:self tokens={cells.tokens} {renderers} />\n                </svelte:component>\n              {/each}\n            </svelte:component>\n          {/each}\n        </svelte:component>\n      </svelte:component>\n    {:else if type === 'list'}\n      {#if ordered}\n        <svelte:component this={renderers.list} {ordered} {...$$restProps}>\n          {#each $$restProps.items as item}\n            <svelte:component this={renderers.orderedlistitem || renderers.listitem} {...item}>\n              <svelte:self tokens={item.tokens} {renderers} />\n            </svelte:component>\n          {/each}\n        </svelte:component>\n      {:else}\n        <svelte:component this={renderers.list} {ordered} {...$$restProps}>\n          {#each $$restProps.items as item}\n            <svelte:component this={renderers.unorderedlistitem || renderers.listitem} {...item}>\n              <svelte:self tokens={item.tokens} {renderers} />\n            </svelte:component>\n          {/each}\n        </svelte:component>\n      {/if}\n    {:else}\n      <svelte:component this={renderers[type]} {...$$restProps}>\n        {#if tokens}\n          <svelte:self {tokens} {renderers} />\n        {:else}\n          {$$restProps.raw}\n        {/if}\n      </svelte:component>\n    {/if}\n  {/if}\n{/if}\n","import { onMount } from 'svelte'\n\nexport function supressWarnings() {\n  const origWarn = console.warn\n\n  console.warn = (message) => {\n    if (message.includes('unknown prop')) return\n    if (message.includes('unexpected slot')) return\n    origWarn(message)\n  }\n\n  onMount(() => {\n    console.warn = origWarn\n  })\n}\n","/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkSanitizeDeprecation(opt);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","export const key = {}\n","<script>\n  import { getContext } from 'svelte'\n  import { key } from '../context'\n  export let depth\n  export let raw\n  export let text\n\n  const { slug, getOptions } = getContext(key)\n  const options = getOptions()\n\n  $: id = options.headerIds\n    ? options.headerPrefix + slug(text)\n    : undefined\n</script>\n\n{#if depth === 1}\n  <h1 {id}><slot></slot></h1>\n{:else if depth === 2}\n  <h2 {id}><slot></slot></h2>\n{:else if depth === 3}\n  <h3 {id}><slot></slot></h3>\n{:else if depth === 4}\n  <h4 {id}><slot></slot></h4>\n{:else if depth === 5}\n  <h5 {id}><slot></slot></h5>\n{:else if depth === 6}\n  <h6 {id}><slot></slot></h6>\n{:else}\n  {raw}\n{/if}\n","<p><slot></slot></p>\n","<script>\n    export let text; text;\n    export let raw; raw;\n</script>\n<slot />\n","<script>\n  export let href = ''\n  export let title = undefined\n  export let text = ''\n</script>\n\n<img src={href} {title} alt={text}>\n","<script>\n  export let href = ''\n  export let title = undefined\n</script>\n\n<a {href} {title}><slot></slot></a>\n","<em><slot></slot></em>\n","<del><slot></slot></del>\n","<script>\n  export let raw\n</script>\n\n<code>{raw.replace(/`/g, '')}</code>\n","<strong><slot></slot></strong>\n","<table><slot></slot></table>\n","<thead><slot></slot></thead>\n","<tbody><slot></slot></tbody>\n","<tr><slot></slot></tr>\n","<script>\n  export let header\n  export let align\n</script>\n\n{#if header}\n  <th {align}><slot></slot></th>\n{:else}\n  <td {align}><slot></slot></td>\n{/if}\n","<script>\n  export let ordered\n  export let start\n</script>\n\n{#if ordered}\n  <ol {start}><slot></slot></ol>\n{:else}\n  <ul><slot></slot></ul>\n{/if}\n","<li><slot></slot></li>\n","<hr>\n","<script>\n  export let text\n</script>\n\n{@html text}\n","<blockquote><slot></slot></blockquote>\n","<script>\n  export let lang\n  export let text\n</script>\n\n<pre class={lang}><code>{text}</code></pre>\n","<br /><slot />\n","export { Lexer, Slugger } from 'marked'\n\nimport {\n  Heading,\n  Paragraph,\n  Text,\n  Image,\n  Link,\n  Em,\n  Strong,\n  Codespan,\n  Del,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  List,\n  ListItem,\n  Hr,\n  Html,\n  Blockquote,\n  Code,\n  Br,\n} from './renderers'\n\nexport const defaultRenderers = {\n  heading: Heading,\n  paragraph: Paragraph,\n  text: Text,\n  image: Image,\n  link: Link,\n  em: Em,\n  strong: Strong,\n  codespan: Codespan,\n  del: Del,\n  table: Table,\n  tablehead: TableHead,\n  tablebody: TableBody,\n  tablerow: TableRow,\n  tablecell: TableCell,\n  list: List,\n  orderedlistitem: null,\n  unorderedlistitem: null,\n  listitem: ListItem,\n  hr: Hr,\n  html: Html,\n  blockquote: Blockquote,\n  code: Code,\n  br: Br,\n}\nexport const defaultOptions = {\n  baseUrl: null,\n  breaks: false,\n  gfm: true,\n  headerIds: true,\n  headerPrefix: '',\n  highlight: null,\n  langPrefix: 'language-',\n  mangle: true,\n  pedantic: false,\n  renderer: null,\n  sanitize: false,\n  sanitizer: null,\n  silent: false,\n  smartLists: false,\n  smartypants: false,\n  tokenizer: null,\n  xhtml: false,\n}\n","<script>\n  import { setContext, createEventDispatcher, onMount } from 'svelte'\n  import Parser from './Parser.svelte'\n  import { Lexer, Slugger, defaultOptions, defaultRenderers } from './markdown-parser'\n  import { key } from './context'\n\n  export let source = []\n  export let renderers = {}\n  export let options = {}\n  export let isInline = false\n\n  const dispatch = createEventDispatcher();\n\n  let tokens;\n  let lexer;\n  let mounted;\n\n  $: preprocessed = Array.isArray(source)\n  $: slugger = source ? new Slugger : undefined\n  $: combinedOptions = { ...defaultOptions, ...options }\n  $: if (preprocessed) {\n    tokens = source\n  } else {\n    lexer = new Lexer(combinedOptions)\n\n    tokens = isInline ? lexer.inlineTokens(source) : lexer.lex(source)\n\n    dispatch('parsed', { tokens })\n  }\n\n  $: combinedRenderers = { ...defaultRenderers, ...renderers }\n\n  setContext(key, {\n    slug: (val) => slugger ? slugger.slug(val) : '',\n    getOptions: () => combinedOptions\n  })\n  $: mounted && !preprocessed && dispatch('parsed', { tokens })\n\n  onMount(() => {\n    mounted = true\n  });\n</script>\n\n<Parser {tokens} renderers={combinedRenderers} />\n","<script>\n    import { onMount, prevent_default } from 'svelte/internal';\n\n    import {seekTo, focusOnFeedback, logAction, pause, focusOnFeedbackNote, copy, convertImageToBase64,saveBase64Image} from '../utils.js';\n    import {saveFeedbackList, saveDisplayChatbotMessages, saveMyNotes, saveMyFeedbackNotes} from '../savers.js';\n    import LoadingBar from './LoadingBar.svelte';\n    import Range from './Range.svelte';\n    import SvelteMarkdown from 'svelte-markdown';\n\n    export let feedback_list;\n    export let recording; \n    export let documents = [];\n    export let chatbot_messages = [{\n        \"content\": \"You are an expert senior interior designer who is tasked to assist less experienced interior designers like students and junior interior designers with their work by answering their questions on a wide range of interior design topics. \",\n        \"role\": \"system\"\n    }];\n\n    export let my_notes = [];\n    export let feedback_notes = {};\n    export let left_display_styles={\n        0:\"row\",\n        1:\"grid\",\n    };\n    \n    let show_chatbot_settings=false;\n    let chatbot_models = {\n        \"GPT-4o\":\"gpt-4o\",\n        \"GPT-4o Mini\": \"gpt-4o-mini\",\n        \"The Interior Design Reference & Specification GPT\": \"ft:gpt-4o-mini-2024-07-18:im-lab:the-interior-des:9p9NTD1W\",\n        \"Planning and Designers Handbook GPT\": \"ft:gpt-4o-mini-2024-07-18:im-lab:planning-and-des:9p9vtdRF\",\n        \"Interior Design Illustrated GPT\": \"ft:gpt-4o-mini-2024-07-18:im-lab:int-illustrated:9qXQyPfI\"\n    }\n    let selected_chatbot=\"GPT-4o\";\n    let chatbot_temperature = 0.0;\n    let chatbot_max_output_tokens = 256; \n\n    let mediaPlayer;\n    let inputMessage = \"\";\n    \n    let selected_feedback; \n\n    let active_right_tab=0;  \n    let active_left_tab=0;\n    \n\n    let context;\n    let selected_image;\n    let image_url; \n    let image_files;\n    let image_input;\n\n    \n    let document_files, document_file_input;\n\n\n    let left_panel_tabs = [\n        \"Critical Feedback\", \"Positive Feedback\"\n    ]\n    let right_panel_tabs = [\n        \"Transcript\", \"Chatbot\",\"Notes\"\n    ]\n\n    let is_loading=false; \n    let chatbot_load_status = \"\";\n    let chatbot_load_progress= 0; \n    let ld_bar_chatbot; \n\n    let document_load_status=\"\";\n    let document_load_progress=0;\n    let is_document_loading=false;\n\n    \n\n    async function handleImageUpload(image_files) {\n        let image_file = image_files[0];\n        if(image_file) {\n            if(image_file.type.includes('image')) {\n                console.log(image_file);\n                let image_url = URL.createObjectURL(image_file);\n                // alert(\"Image uploaded successfully.\");\n                return [image_url, image_file];\n            } else {\n                alert(\"Please select an image file.\");\n            }\n        } else {\n            console.log(\"No image selected.\");\n        }\n        return null;\n\n    }\n\n    async function paraphrasePositively(feedback_quote, excerpt) {\n        const response = await fetch(\"/positively_paraphrase_feedback\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({feedback: feedback_quote, excerpt: excerpt})\n        });\n        if(!response.ok) {\n            throw new Error(\"Failed to detect feedback\");\n        }\n        const json = await response.json();\n        let paraphrased_feedback = json[\"paraphrased_feedback\"];\n        return paraphrased_feedback;   \n    }\n\n    function removeFeedback(feedback) {\n        if (selected_feedback === feedback) {\n            selected_feedback = null;\n        }\n        feedback_list = feedback_list.filter(f => f !== feedback);\n        feedback_list=feedback_list;\n    }\n\n    function selectFeedback(feedback, event) {\n        selected_feedback = feedback;\n        event.stopPropagation(); // Prevents the event from bubbling up to the window\n    }\n\n    function deselectFeedback() {\n        selected_feedback = null;\n    }\n\n    function showParaphrasedQuote(feedback,show=true) {\n        feedback.show_paraphrased = show;\n    }\n\n    async function generateTask(feedback_quote, excerpt) {\n        const response = await fetch(\"/generate_task\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({feedback: feedback_quote, excerpt: excerpt})\n        });\n        if(!response.ok) {\n            throw new Error(\"Failed to generate task\");\n        }\n        const json = await response.json();\n        let task = json[\"task\"];\n        return task;   \n    }\n\n    let sortKey = null;\n    let sortAscending = true;\n    function sortFeedbackList(key) {\n        if (sortKey === key) {\n            sortAscending = !sortAscending;\n        } else {\n            sortKey = key;\n            sortAscending = true;\n        }\n        feedback_list.sort((a, b) => {\n            if (a[key] < b[key]) return sortAscending ? -1 : 1;\n            if (a[key] > b[key]) return sortAscending ? 1 : -1;\n            return 0;\n        });\n        feedback_list = feedback_list;\n    }\n\n    async function sendMessage(inputMessage,  context=null) {\n        let inputMessageClone = inputMessage.slice();\n        if(is_loading) {\n            alert(\"Please wait for the current message to be processed.\");\n            return;\n        }\n\n        is_loading=true; \n        if(inputMessage.trim() === \"\") {\n            alert(\"Please enter a message.\");\n            return;\n        }\n\n        let message = {\n            role: \"user\", \n            content: inputMessage\n        };\n\n\n        if (context) {\n            message[\"context\"] = context;\n            let context_string = \"\\n\\nHere is the piece of feedback as context.\";\n            context_string += \"\\nF#\"+context.id+\": \\\"\"+context.speaker+\": \"+context.quote+\"\\\".\";\n            inputMessageClone += context_string;\n        }\n\n        let body = {\n            message: inputMessageClone,\n            image_data: null,\n            max_output_tokens: chatbot_max_output_tokens,\n            temperature: chatbot_temperature,\n            model: chatbot_models[selected_chatbot]\n        };\n\n        image_url ? message[\"image\"] = image_url : null;\n        if(selected_image) {\n            chatbot_load_status = \"Uploading image...\";\n            chatbot_load_progress=30; \n            let image_base64 = await convertImageToBase64(selected_image);\n\n            body[\"image_data\"] = image_base64;\n            message[\"image_path\"] = await saveBase64Image(image_base64);\n            body[\"image_path\"] = message[\"image_path\"];\n        }\n\n        chatbot_messages.push(message);\n        chatbot_messages = chatbot_messages; console.log(chatbot_messages);\n        feedback_list = feedback_list;\n        await saveDisplayChatbotMessages(chatbot_messages);\n\n        chatbot_load_status = \"Thinking...\";\n        chatbot_load_progress=50;\n        const response = await fetch(\"/message_chatbot\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        });\n        if(!response.ok) {\n            throw new Error(\"Failed to send message\");\n        }\n        const json = await response.json();\n        let chatbot_response = json[\"chatbot_response\"];\n\n        chatbot_load_status=\"Done!\"\n        chatbot_load_progress=100;\n        await pause(1200);\n\n        await logAction(\"FeedbackList: Sent message\", [inputMessage, context, image_url]);\n\n        let assistant_message = {\n            role: \"assistant\",\n            content: chatbot_response\n        };\n\n        context ? assistant_message[\"context\"] = context : null;\n        image_url ? assistant_message[\"image\"] = image_url : null;\n        \n        chatbot_messages.push(assistant_message);\n        chatbot_messages = chatbot_messages;\n        feedback_list = feedback_list;\n        await saveDisplayChatbotMessages(chatbot_messages);\n\n        is_loading=false;\n        chatbot_load_progress=0;\n    }\n\n    function addContext(feedback) {\n        if(context===feedback) {\n            alert(\"This feedback is already added as context.\");\n        } else {\n            context = feedback;\n        }\n    }\n\n    async function addDocument(event) {\n        const files = event.target.files; \n\n        if (files) {\n            for (const file of files) {\n\n                const formData = new FormData();\n                formData.append(\"file\", file);\n\n                document_load_progress=50;\n                document_load_status = \"Adding document... (this may take a while)\";\n                const response = await fetch(\"/add_document\", {\n                    method: \"POST\",\n                    body: formData\n                });\n                if (!response.ok) {\n                    return null;\n                } \n                const json = await response.json();\n                \n\n                let document_name = json[\"document_name\"];\n                documents.push(document_name);\n                documents=documents;\n                document_load_status = \"Done!\";\n                document_load_progress=100;\n                await pause(1200);\n            }\n        }\n    }\n\n    \n    async function deleteDocument(title,idx) {\n\n        const response = await fetch(\"/delete_document\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({title: title})\n        });\n        if (!response.ok) {\n            return console.log(`Failed to delete document ${title}`);\n        } \n\n        // Remove document at idx\n        documents.splice(idx, 1);\n        documents=documents;\n        return title\n    }\n\n    async function deleteAllDocuments() {\n        document_load_status=\"Removing all documents...\";\n        for(let i=0; i<documents.length; i++) {\n            let doc = documents[i];\n            document_load_progress = (i)/documents.length*100;\n            try {\n                await deleteDocument(doc, i);\n            } catch (error) {\n                console.error(`Error deleting document ${doc}:`, error);\n                // Optionally, break the loop or continue to the next document\n            }\n        }\n\n        if(documents.length === 1) {\n            await deleteDocument(documents[0], 0);\n        }\n\n\n\n        document_load_status=\"Done!\";\n        document_load_progress=100;\n        await pause(1000);\n        document_load_progress=0;\n    }\n\n    let adding_note=false;\n    let temp_note=\"\";\n\n    async function addNote(note,feedback_id=null, image_url=null) {\n\n        if(note.trim() == \"\") {\n            alert(\"Please enter a note.\");\n            return;\n        }\n\n        if(feedback_id) {\n\n            if(feedback_id in feedback_notes) {\n                feedback_notes[feedback_id].notes.push(note);\n                feedback_notes[feedback_id].notes = feedback_notes[feedback_id].notes;\n                // image_url ? feedback_notes[feedback_id].image = image_url : null;\n            } else {\n                feedback_notes[feedback_id] = {notes:[note], is_adding:false};\n                // image_url ? feedback_notes[feedback_id].image = image_url : null;\n            }\n        } else {\n            my_notes.push(note);\n            my_notes = my_notes;\n\n        }\n    }\n\n    async function removeNote(note_idx, feedback_id=null) {\n        if(feedback_id) {\n            feedback_notes[feedback_id].notes.splice(note_idx, 1);\n            feedback_notes[feedback_id].notes = feedback_notes[feedback_id].notes;\n        } else {\n            my_notes.splice(note_idx, 1);\n            my_notes = my_notes;\n        }\n    }\n\n    async function confirmNote(feedback_id=null) {\n        adding_note=false;\n        addNote(temp_note, feedback_id);\n        temp_note=\"\";\n    }\n\n    \n</script>\n\n<div id=\"feedback-list-page\" class=\"spaced\" on:window:click={deselectFeedback}>\n    <div id=\"left-panel\" class=\"column\">\n        <div class=\"tabbed-area bordered\">\n            <div class=\"tab-header space-between\">\n                <div class=\"row\">\n                    {#each left_panel_tabs as tab, i}\n                        <button class=\"tab\" on:click={async  ()=>{\n                                active_left_tab=i;\n                                await logAction(\"FeedbackList: Switched left panel tab\", left_panel_tabs[active_left_tab]);\n                            }} \n                            class:active={i===active_left_tab} class:right-bordered={i<left_panel_tabs.length-1} >{tab}</button>\n                    {/each}\n                </div>\n\n                <div class=\"row\">\n                    <button class=\"tab\" on:click={async () => {\n                        left_display_styles[active_left_tab] = \"row\";\n                        await logAction(\"FeedbackList: Switched left panel display style\", \"row\");\n                    }} class:active={left_display_styles[active_left_tab]===\"row\"}>\n                        <img src=\"./logos/row-vertical-svgrepo-com.svg\" alt=\"Row view\" class=\"mini-icon\" >\n                    </button>\n                    <button class=\"tab\" on:click={async () => {\n                        left_display_styles[active_left_tab] = \"grid\";\n                        await logAction(\"FeedbackList: Switched left panel display style\", \"grid\");\n                    }} class:active={left_display_styles[active_left_tab]===\"grid\"}>\n                        <img src=\"./logos/grid-svgrepo-com.svg\" alt=\"Grid view\" class=\"mini-icon\" >\n                    </button>\n\n                </div>\n            </div>\n            <div class=\"tab-content padded\" style=\"overflow-y: auto;\">\n                {#if active_left_tab===0}\n\n                    {#if left_display_styles[active_left_tab] === \"grid\"}\n                        <div class=\"grid\" style=\"overflow-y: auto;\">\n                            {#each feedback_list as feedback, i}\n                                {#if feedback.type===\"critical\"}\n                                    <div class=\"critical-feedback-note\" class:done={feedback.done} class:selected={feedback===selected_feedback} \n                                        on:click={ async (event) => {\n                                            selectFeedback(feedback, event);\n                                            focusOnFeedback(feedback);\n                                            await logAction(\"FeedbackList: Selected feedback\", feedback);\n                                    }}>\n                                        <div class=\"note-header row space-between\">\n                                            <small class=\"timestamp\" on:click={\n                                                async () => {\n                                                    active_right_tab = 0;\n                                                    if(\"excerpt_reference\" in feedback) {\n                                                        if(\"start_timestamp\" in feedback.excerpt_reference) {\n                                                            seekTo(feedback.excerpt_reference.start_timestamp, mediaPlayer);\n                                                            await logAction(\"FeedbackList: Seeked to timestamp\", feedback.excerpt_reference.start_timestamp);\n                                                        }\n                                                    }\n                                                }}>\n                                                {#if \"excerpt_reference\" in feedback} \n                                                    {#if \"start_timestamp\" in feedback.excerpt_reference}\n                                                        [{feedback.excerpt_reference.start_timestamp}]\n                                                    {:else}\n                                                        [00:00:00]\n                                                    {/if}\n                                                {:else}\n                                                    [00:00:00]  \n                                                {/if}\n                                            </small>\n\n                                            <div class=\"row spaced\">\n\n                                                <button class=\"action-button\" on:click={async () => { \n                                                    feedback.positivised_quote = await paraphrasePositively(feedback.quote, feedback.excerpt_reference.dialogue);\n                                                    showParaphrasedQuote(feedback, true);\n                                                    feedback_list = feedback_list;\n                                                    await logAction(\"FeedbackList: Positivize Quote\", feedback);\n                                                }}>\n                                                    <img src=\"./logos/ai-positive-paraphrase.png\" alt=\"Paraphrase positively\"  class=\"mini-icon\">\n                                                </button>\n                                                \n                                                <button class=\"action-button\" on:click = {async () => {\n                                                    active_right_tab = 1;\n                                                    addContext(feedback);\n                                                    await logAction(\"FeedbackList: Select as context\", context);\n                                                }}>\n                                                    <img src=\"./logos/select-context.svg\" alt=\"Select feedback as context\" style=\"height: 2.3rem; width: 2.3rem;\">\n                                                </button>\n\n                                                <button class=\"action-button\" on:click = {async () => {\n                                                    active_right_tab = 2;\n                                                    if(feedback.id in feedback_notes) {\n                                                        feedback_notes[feedback.id].is_adding = true;\n                                                    } else {\n                                                        feedback_notes[feedback.id] = {notes:[], is_adding:true};\n                                                    }\n                                                }}>\n                                                    <img src=\"./logos/note-svgrepo-com.svg\" alt=\"Add note\" class=\"mini-icon\" >\n                                                </button>\n\n                                                <button class=\"action-button\" on:click = {async () => {\n                                                    removeFeedback(feedback);\n                                                    await saveFeedbackList(feedback_list);\n                                                    await logAction(\"FeedbackList: Remove critical feedback\", feedback);\n                                                }}>\n                                                    <img src=\"./logos/delete-svgrepo-com.svg\" alt=\"Remove critical feedback\" style=\"height: 2rem; width: 2rem;\">\n                                                </button>\n\n                                                <span  class=\"centered\">\n                                                    <input type=\"checkbox\" bind:checked={feedback.done} />\n                                                </span>\n\n                                            </div>\n                                        </div>\n                                        \n                                        <br>\n                                        <strong>F#{feedback.id}: </strong>\n                                        {#if feedback.positivised_quote && feedback.show_paraphrased}\n                                            <strong>(Paraphrased Feedback)</strong> \"{feedback.positivised_quote}\" \n                                            <span class=\"clickable\" \n                                            on:click={async () => {showParaphrasedQuote(feedback, false); await logAction(\"FeedbackList: Show original quote\", feedback.original_quote)}}>\n                                            (View original quote)</span>\n                                        {:else}\n                                            \"{feedback.quote}\" {#if feedback.positivised_quote && !feedback.show_paraphrased } \n                                            <span class=\"clickable\" \n                                            on:click={async () => {showParaphrasedQuote(feedback, true); await logAction(\"FeedbackList: Show paraphrased quote\", feedback.positivised_quote)}}>(View paraphrased quote)</span> {/if}\n                                        {/if}\n                                        <br>\n                                        <span> - {feedback.speaker} </span>\n                                    </div>\n                                {/if}\n                            {/each}\n                        </div>\n                    {:else}\n                        <div class=\"column\" style=\"overflow-y: auto;\">\n                            <div class=\"feedback-header row\" >\n                                <span class=\"centered row id-col\" style=\"gap: 0.4rem;\">\n                                    <strong>ID</strong>\n                                    <button class=\"action-button\" on:click={async () => {sortFeedbackList('id'); await logAction(\"FeedbackList: Sorted feedback\", 'id')}}>\n                                        {#if sortAscending && sortKey==='id'}\n                                            <img style=\"height: 1rem; width: 1rem;\" src=\"./logos/ascending-sort-svgrepo-com.svg\" alt=\"Sort ascending\" class=\"mini-icon\">\n                                        {:else}\n                                            <img style=\"height: 1rem; width: 1rem;\" src=\"./logos/descending-sort-svgrepo-com.svg\" alt=\"Sort descending\" class=\"mini-icon\">\n                                        {/if}\n                                    </button>\n                                </span>\n                                <span  class=\"centered row spaced feedback-col\">\n                                    <strong>Feedback</strong>\n                                    <button class=\"action-button\" on:click={async () => {sortFeedbackList('quote'); await logAction(\"FeedbackList: Sorted feedback\", 'quote')}}>\n                                        {#if sortAscending && sortKey==='quote'}\n                                            <img style=\"height: 1rem; width: 1rem;\" src=\"./logos/ascending-sort-svgrepo-com.svg\" alt=\"Sort ascending\" class=\"mini-icon\">\n                                        {:else}\n                                            <img style=\"height: 1rem; width: 1rem;\" src=\"./logos/descending-sort-svgrepo-com.svg\" alt=\"Sort descending\" class=\"mini-icon\">\n                                        {/if}\n                                    </button>\n                                </span>\n                                <span class=\"centered row spaced speaker-col\">\n                                    <strong>Speaker</strong>\n                                    <button class=\"action-button\" on:click={async () => {sortFeedbackList('speaker'); await logAction(\"FeedbackList: Sorted feedback\", 'speaker')}}>\n                                        {#if sortAscending && sortKey==='speaker'}\n                                            <img style=\"height: 1rem; width: 1rem;\" src=\"./logos/ascending-sort-svgrepo-com.svg\" alt=\"Sort ascending\" class=\"mini-icon\">\n                                        {:else}\n                                            <img style=\"height: 1rem; width: 1rem;\" src=\"./logos/descending-sort-svgrepo-com.svg\" alt=\"Sort descending\" class=\"mini-icon\">\n                                        {/if}\n                                    </button>\n                                </span>\n                                <span id=\"feedback-buttons\"  class=\"centered row actions-col\">\n                                    <strong>Actions</strong>\n                                </span>\n                                <span  class=\"centered row spaced done-col\">\n                                    <strong>Done?</strong>\n                                    <button class=\"action-button\" on:click={async () => {sortFeedbackList('done'); await logAction(\"FeedbackList: Sorted feedback\", 'done')}}>\n                                        <img style=\"height: 1rem; width: 1rem;\" src={sortAscending && sortKey==='done' ? \"./logos/ascending-sort-svgrepo-com.svg\" :  \"./logos/descending-sort-svgrepo-com.svg\"} alt={sortAscending && sortKey==='done' ? \"Sort ascending\" : \"Sort descending\"} class=\"mini-icon\">\n                                    </button>\n                                </span>\n                            </div>\n                            {#each feedback_list as feedback, i}\n                                {#if feedback.type===\"critical\"}\n                                    <div class=\"feedback-row row bordered padded\" class:done={feedback.done} class:selected={feedback===selected_feedback} \n                                        on:click={async (event) => {\n                                            selectFeedback(feedback, event);\n                                            focusOnFeedback(feedback);\n                                            await logAction(\"FeedbackList: Selected feedback\", feedback);\n                                        }}\n                                    >\n                                        <span class=\"id-col\">\n                                            <strong> {feedback.id} </strong>\n                                        </span>\n                                        <div class=\"column feedback-col\" >\n                                            <span  class=\"\">\n                                                <span class=\"timestamp\" on:click={\n                                                    async () => {\n                                                        active_right_tab = 0;\n                                                        if(\"excerpt_reference\" in feedback) {\n                                                            if(\"start_timestamp\" in feedback.excerpt_reference) {\n                                                                seekTo(feedback.excerpt_reference.start_timestamp, mediaPlayer);\n                                                                await logAction(\"FeedbackList: Seeked to timestamp\", feedback.excerpt_reference.start_timestamp);\n                                                            }\n                                                        }\n                                                    }}>\n                                                    {#if \"excerpt_reference\" in feedback} \n                                                        {#if \"start_timestamp\" in feedback.excerpt_reference}\n                                                            [{feedback.excerpt_reference.start_timestamp}]\n                                                        {:else}\n                                                            [00:00:00]\n                                                        {/if}\n                                                    {:else}\n                                                        [00:00:00]  \n                                                    {/if}\n                                                </span> \n                                                {#if feedback.positivised_quote && feedback.show_paraphrased}\n                                                    <strong>(Paraphrased Feedback)</strong> \"{feedback.positivised_quote}\" \n                                                    <span class=\"clickable\" \n                                                    on:click={async () => {showParaphrasedQuote(feedback, false); await logAction(\"FeedbackList: Show original quote\", feedback.original_quote)}}>\n                                                    (View original quote)</span>\n                                                {:else}\n                                                    \"{feedback.quote}\" {#if feedback.positivised_quote && !feedback.show_paraphrased } \n                                                    <span class=\"clickable\" \n                                                    on:click={async () => {showParaphrasedQuote(feedback, true); await logAction(\"FeedbackList: Show paraphrased quote\", feedback.positivised_quote)}}>(View paraphrased quote)</span> {/if}\n                                                {/if}\n                                            </span>\n                                        </div>\n                                        <span  class=\"centered speaker-col\">\n                                            {feedback.speaker ? feedback.speaker : \"Unknown\"}\n                                        </span>\n                                        <div id=\"feedback-buttons\"  class=\"row centered spaced actions-col\">\n                                            <button class=\"action-button\" on:click={async () => { \n                                                feedback.positivised_quote = await paraphrasePositively(feedback.quote, feedback.excerpt_reference.dialogue);\n                                                showParaphrasedQuote(feedback, true);\n                                                feedback_list = feedback_list;\n                                                await logAction(\"FeedbackList: Positivize Quote\", feedback);\n                                            }}>\n                                                <img src=\"./logos/ai-positive-paraphrase.png\" alt=\"Paraphrase positively\" class=\"action-icon\">\n                                                Positivize\n                                            </button>\n\n                                            <button class=\"action-button centered column\" on:click={async () => {\n                                                active_right_tab=1;\n                                                addContext(feedback);\n                                                await logAction(\"FeedbackList: Select as context\", context);\n                                            }}>\n                                                <img src=\"./logos/select-context.svg\" alt=\"Select feedback as context\" style=\"height: 3.3rem; width: 3.3rem;\">\n                                                Select Context\n                                            </button>\n                                            <button class=\"action-button\" on:click={async () => {\n                                                active_right_tab = 2;\n                                                if(feedback.id in feedback_notes) {\n                                                    feedback_notes[feedback.id].is_adding = true;\n                                                } else {\n                                                    feedback_notes[feedback.id] = {notes:[], is_adding:true};\n                                                }\n                                            }}>\n                                                <img src=\"./logos/note-svgrepo-com.svg\" alt=\"Remove feedback\" class=\"action-icon\">\n                                                Add Note\n                                            </button>\n                                            <button class=\"action-button\" on:click={async () => {\n                                                let confirm = window.confirm(\"Are you sure you want to delete this feedback? This cannot be undone.\");\n                                                if(!confirm) {\n                                                    return;\n                                                }\n                                                \n                                                removeFeedback(feedback);\n                                                await saveFeedbackList(feedback_list);\n                                                await logAction(\"FeedbackList: Remove critical feedback\", feedback);\n                                            }}>\n                                                <img src=\"./logos/delete-svgrepo-com.svg\" alt=\"Remove feedback\" class=\"action-icon\">\n                                                Delete\n                                            </button>\n                                            \n                                        </div>\n                                        <span  class=\"centered done-col\">\n                                            <input type=\"checkbox\" bind:checked={feedback.done} />\n                                        </span>\n                                    </div>\n                                {/if}\n                            {/each}\n                        </div>\n                    {/if}\n\n                {:else if active_left_tab===1}\n                    {#if left_display_styles[active_left_tab] === \"grid\"}\n                        <div class=\"grid\" style=\"overflow-y: auto;\">\n                            {#each feedback_list as feedback, i}\n                                {#if feedback.type===\"positive\"}\n                                    <div class=\"positive-feedback-note\" class:selected={feedback===selected_feedback} \n                                        on:click={ async (event) => {\n                                            selectFeedback(feedback, event);\n                                            focusOnFeedback(feedback);\n                                            await logAction(\"FeedbackList: Selected feedback\", feedback);\n                                    }}>\n                                        <div class=\"note-header row space-between\">\n                                            <small class=\"timestamp\" on:click={\n                                                async () => {\n                                                    active_right_tab = 0;\n                                                    if(\"excerpt_reference\" in feedback) {\n                                                        if(\"start_timestamp\" in feedback.excerpt_reference) {\n                                                            seekTo(feedback.excerpt_reference.start_timestamp, mediaPlayer);\n                                                            await logAction(\"FeedbackList: Seeked to timestamp\", feedback.excerpt_reference.start_timestamp);\n                                                        }\n                                                    }\n                                                }}>\n                                                {#if \"excerpt_reference\" in feedback} \n                                                    {#if \"start_timestamp\" in feedback.excerpt_reference}\n                                                        [{feedback.excerpt_reference.start_timestamp}]\n                                                    {:else}\n                                                        [00:00:00]\n                                                    {/if}\n                                                {:else}\n                                                    [00:00:00]  \n                                                {/if}\n                                            </small>\n\n                                            <div class=\"row spaced\">\n\n                                                <button class=\"action-button\" on:click={async () => { \n                                                    feedback.positivised_quote = await paraphrasePositively(feedback.quote, feedback.excerpt_reference.dialogue);\n                                                    showParaphrasedQuote(feedback, true);\n                                                    feedback_list = feedback_list;\n                                                    await logAction(\"FeedbackList: Positivize Quote\", feedback);\n                                                }}>\n                                                    <img src=\"./logos/ai-positive-paraphrase.png\" alt=\"Paraphrase positively\"  class=\"mini-icon\">\n                                                </button>\n\n                                                <button class=\"action-button\" on:click = {async () => {\n                                                    active_right_tab = 1;\n                                                    addContext(feedback);\n                                                    await logAction(\"FeedbackList: Select as context\", context);\n                                                }}>\n                                                    <img src=\"./logos/select-context.svg\" alt=\"Select feedback as context\" style=\"height: 2.3rem; width: 2.3rem;\">\n                                                </button>\n\n                                                <button class=\"action-button\" on:click = {async () => {\n                                                    active_right_tab = 2;\n                                                    if(feedback.id in feedback_notes) {\n                                                        feedback_notes[feedback.id].is_adding = true;\n                                                    } else {\n                                                        feedback_notes[feedback.id] = {notes:[], is_adding:true};\n                                                    }\n                                                }}>\n                                                    <img src=\"./logos/note-svgrepo-com.svg\" alt=\"Add note\" class=\"mini-icon\" >\n                                                </button>\n\n                                                <button class=\"action-button\" on:click = {async () => {\n                                                    removeFeedback(feedback);\n                                                    await saveFeedbackList(feedback_list);\n                                                    await logAction(\"FeedbackList: Remove positive feedback\", feedback);\n                                                }}>\n                                                    <img src=\"./logos/delete-svgrepo-com.svg\" alt=\"Paraphrase positively\" style=\"height: 2rem; width: 2rem;\">\n                                                </button>\n\n                                            </div>\n                                        </div>\n                                        \n                                        <br>\n                                        <strong>F#{feedback.id}: </strong>\n                                        {#if feedback.positivised_quote && feedback.show_paraphrased}\n                                            <strong>(Paraphrased Feedback)</strong> \"{feedback.positivised_quote}\" \n                                            <span class=\"clickable\" \n                                            on:click={async () => {showParaphrasedQuote(feedback, false); await logAction(\"FeedbackList: Show original quote\", feedback.original_quote)}}>\n                                            (View original quote)</span>\n                                        {:else}\n                                            \"{feedback.quote}\" {#if feedback.positivised_quote && !feedback.show_paraphrased } \n                                            <span class=\"clickable\" \n                                            on:click={async () => {showParaphrasedQuote(feedback, true); await logAction(\"FeedbackList: Show paraphrased quote\", feedback.positivised_quote)}}>(View paraphrased quote)</span> {/if}\n                                        {/if}\n                                        <br>\n                                        <span> - {feedback.speaker} </span>\n                                    </div>\n                                {/if}\n                            {/each}\n                        </div>\n                    {:else}\n                        <div class=\"column\" style=\"overflow-y: auto;\">\n                            <div class=\"feedback-header row\" >\n                                <span class=\"centered row id-col\" style=\"gap: 0.4rem;\">\n                                    <strong>ID</strong>\n                                    <button class=\"action-button\" on:click={async () => {sortFeedbackList('id'); await logAction(\"FeedbackList: Sorted feedback\", 'id')}}>\n                                        {#if sortAscending && sortKey==='id'}\n                                            <img style=\"height: 1rem; width: 1rem;\" src=\"./logos/ascending-sort-svgrepo-com.svg\" alt=\"Sort ascending\" class=\"mini-icon\">\n                                        {:else}\n                                            <img style=\"height: 1rem; width: 1rem;\" src=\"./logos/descending-sort-svgrepo-com.svg\" alt=\"Sort descending\" class=\"mini-icon\">\n                                        {/if}\n                                    </button>\n                                </span>\n                                <span  class=\"centered row spaced feedback-col\">\n                                    <strong>Feedback</strong>\n                                    <button class=\"action-button\" on:click={async () => {sortFeedbackList('quote'); await logAction(\"FeedbackList: Sorted feedback\", 'quote')}}>\n                                        {#if sortAscending && sortKey==='quote'}\n                                            <img style=\"height: 1rem; width: 1rem;\" src=\"./logos/ascending-sort-svgrepo-com.svg\" alt=\"Sort ascending\" class=\"mini-icon\">\n                                        {:else}\n                                            <img style=\"height: 1rem; width: 1rem;\" src=\"./logos/descending-sort-svgrepo-com.svg\" alt=\"Sort descending\" class=\"mini-icon\">\n                                        {/if}\n                                    </button>\n                                </span>\n                                <span class=\"centered row spaced speaker-col\">\n                                    <strong>Speaker</strong>\n                                    <button class=\"action-button\" on:click={async () => {sortFeedbackList('speaker'); await logAction(\"FeedbackList: Sorted feedback\", 'speaker')}}>\n                                        {#if sortAscending && sortKey==='speaker'}\n                                            <img style=\"height: 1rem; width: 1rem;\" src=\"./logos/ascending-sort-svgrepo-com.svg\" alt=\"Sort ascending\" class=\"mini-icon\">\n                                        {:else}\n                                            <img style=\"height: 1rem; width: 1rem;\" src=\"./logos/descending-sort-svgrepo-com.svg\" alt=\"Sort descending\" class=\"mini-icon\">\n                                        {/if}\n                                    </button>\n                                </span>\n                                <span id=\"feedback-buttons\"  class=\"centered row actions-col\">\n                                    <strong>Actions</strong>\n                                </span>\n                                <!-- <span  class=\"centered row spaced done-col\">\n                                    <strong>Done?</strong>\n                                    <button class=\"action-button\" on:click={async () => {sortFeedbackList('done'); await logAction(\"FeedbackList: Sorted feedback\", 'done')}}>\n                                        <img style=\"height: 1rem; width: 1rem;\" src={sortAscending && sortKey==='done' ? \"./logos/ascending-sort-svgrepo-com.svg\" :  \"./logos/descending-sort-svgrepo-com.svg\"} alt={sortAscending && sortKey==='done' ? \"Sort ascending\" : \"Sort descending\"} class=\"mini-icon\">\n                                    </button>\n                                </span> -->\n                            </div>\n                            {#each feedback_list as feedback, i}\n                                {#if feedback.type===\"positive\"}\n                                    <div class=\"feedback-row row bordered padded\" class:done={feedback.done} class:selected={feedback===selected_feedback} \n                                        on:click={async (event) => {\n                                            selectFeedback(feedback, event);\n                                            focusOnFeedback(feedback);\n                                            await logAction(\"FeedbackList: Selected feedback\", feedback);\n                                        }}\n                                    >\n                                        <span class=\"id-col\">\n                                            <strong> {feedback.id} </strong>\n                                        </span>\n                                        <div class=\"column feedback-col\" >\n                                            <span  class=\"\">\n                                                <span class=\"timestamp\" on:click={\n                                                    async () => {\n                                                        active_right_tab = 0;\n                                                        if(\"excerpt_reference\" in feedback) {\n                                                            if(\"start_timestamp\" in feedback.excerpt_reference) {\n                                                                seekTo(feedback.excerpt_reference.start_timestamp, mediaPlayer);\n                                                                await logAction(\"FeedbackList: Seeked to timestamp\", feedback.excerpt_reference.start_timestamp);\n                                                            }\n                                                        }\n                                                    }}>\n                                                    {#if \"excerpt_reference\" in feedback} \n                                                        {#if \"start_timestamp\" in feedback.excerpt_reference}\n                                                            [{feedback.excerpt_reference.start_timestamp}]\n                                                        {:else}\n                                                            [00:00:00]\n                                                        {/if}\n                                                    {:else}\n                                                        [00:00:00]  \n                                                    {/if}\n                                                </span> \n                                                {#if feedback.positivised_quote && feedback.show_paraphrased}\n                                                    <strong>(Paraphrased Feedback)</strong> \"{feedback.positivised_quote}\" \n                                                    <span class=\"clickable\" \n                                                    on:click={async () => {showParaphrasedQuote(feedback, false); await logAction(\"FeedbackList: Show original quote\", feedback.original_quote)}}>\n                                                    (View original quote)</span>\n                                                {:else}\n                                                    \"{feedback.quote}\" {#if feedback.positivised_quote && !feedback.show_paraphrased } \n                                                    <span class=\"clickable\" \n                                                    on:click={async () => {showParaphrasedQuote(feedback, true); await logAction(\"FeedbackList: Show paraphrased quote\", feedback.positivised_quote)}}>(View paraphrased quote)</span> {/if}\n                                                {/if}\n                                            </span>\n                                        </div>\n                                        <span  class=\"centered speaker-col\">\n                                            {feedback.speaker ? feedback.speaker : \"Unknown\"}\n                                        </span>\n                                        <div id=\"feedback-buttons\"  class=\"row centered spaced actions-col\">\n                                            <button class=\"action-button\" on:click={async () => { \n                                                feedback.positivised_quote = await paraphrasePositively(feedback.quote, feedback.excerpt_reference.dialogue);\n                                                showParaphrasedQuote(feedback, true);\n                                                feedback_list = feedback_list;\n                                                await logAction(\"FeedbackList: Positivize Quote\", feedback);\n                                            }}>\n                                                <img src=\"./logos/ai-positive-paraphrase.png\" alt=\"Paraphrase positively\" class=\"action-icon\">\n                                                Positivize\n                                            </button>\n\n                                            <button class=\"action-button centered column\" on:click={async () => {\n                                                active_right_tab=1;\n                                                addContext(feedback);\n                                                await logAction(\"FeedbackList: Select as context\", context);\n                                            }}>\n                                                <img src=\"./logos/select-context.svg\" alt=\"Select feedback as context\" style=\"height: 3.3rem; width: 3.3rem;\">\n                                                Select Context\n                                            </button>\n                                            <button class=\"action-button\" on:click={async () => {\n                                                active_right_tab = 2;\n                                                if(feedback.id in feedback_notes) {\n                                                    feedback_notes[feedback.id].is_adding = true;\n                                                } else {\n                                                    feedback_notes[feedback.id] = {notes:[], is_adding:true};\n                                                }\n                                            }}>\n                                                <img src=\"./logos/note-svgrepo-com.svg\" alt=\"Remove feedback\" class=\"action-icon\">\n                                                Add Note\n                                            </button>\n                                            <button class=\"action-button\" on:click={async () => {\n                                                let confirm = window.confirm(\"Are you sure you want to delete this feedback? This cannot be undone.\");\n                                                if(!confirm) {\n                                                    return;\n                                                }\n                                                \n                                                removeFeedback(feedback);\n                                                await saveFeedbackList(feedback_list);\n                                                await logAction(\"FeedbackList: Remove positive feedback\", feedback);\n                                            }}>\n                                                <img src=\"./logos/delete-svgrepo-com.svg\" alt=\"Remove feedback\" class=\"action-icon\">\n                                                Delete\n                                            </button>\n                                            \n                                        </div>\n                                        <!-- <span  class=\"centered done-col\">\n                                            <input type=\"checkbox\" bind:checked={feedback.done} />\n                                        </span> -->\n                                    </div>\n                                {/if}\n                            {/each}\n                        </div>\n                    {/if}\n\n                {/if}\n            </div>\n        </div>\n\n    </div>\n\n    <div id=\"right-panel\" class=\"column \">\n        <div class=\"tabbed-area bordered\">\n            <div class=\"tab-header\">\n                {#each right_panel_tabs as tab, i}\n                    <button class=\"tab\" on:click={async ()=>{active_right_tab=i; await logAction(\"FeedbackList: Switched right panel tab\", right_panel_tabs[active_right_tab]);}} class:active={i===active_right_tab} class:right-bordered={i<right_panel_tabs.length-1} >{tab}</button>\n                {/each}\n            </div>\n            <div class=\"tab-content column\" >\n                {#if active_right_tab===0}\n                    <div class=\"column padded spaced\" style=\"width: 100%; height: 100%;\">\n                        <div id=\"media-player-area\" class=\"bordered\">\n                            {#if recording && recording.video}\n                                <video bind:this={mediaPlayer} src={recording.video} controls style=\"width: 100%; height: 100%;\">\n                                    <track kind=\"captions\" src=\"blank.vtt\" srclang=\"en\">\n                                </video>\n                            {:else if recording && recording.audio}\n                                <audio bind:this={mediaPlayer} src={recording.audio} controls style=\"width: 100%; height: 100%;\"></audio>\n                            {:else}\n                                <video bind:this={mediaPlayer} src=\"video.mp4\" controls style=\"width: 100%; height: 100%;\">\n                                    <track kind=\"captions\" src=\"blank.vtt\" srclang=\"en\">\n                                </video>\n                            {/if}\n                        </div>\n                        <div id=\"transcript-area\" class=\"column bordered spaced\">\n                            {#if recording && recording.transcript}\n                                <p class=\"spaced padded\"> \n                                    {#each recording.transcript_list as excerpt, i}\n                                        <span class=\"timestamp\" on:click={async () => {seekTo(excerpt.start_timestamp, mediaPlayer); await logAction(\"FeedbackList: Seek to start timestamp\", excerpt.start_timestamp)}}>[{excerpt.start_timestamp}]</span> - <span class=\"timestamp\" on:click={async () => {seekTo(excerpt.end_timestamp, mediaPlayer); await logAction(\"FeedbackList: Seek to end timestamp\", excerpt.end_timestamp)}}>[{excerpt.end_timestamp}]</span>\n                                        <br>\n                                        {excerpt.speaker ? excerpt.speaker+\":\" : \"\"}  \n                                        <span id={excerpt.id}>\n                                            {@html excerpt.dialogue} \n                                        </span> <br><br>\n                                    {/each}\n                                </p>\n                            {/if}\n                        </div>\n                    </div>\n                    \n                {:else if active_right_tab===1}\n                    <div id=\"chatbot-tab-content\" class=\"column\">\n                        <div id=\"chatbot-header\" class=\"padded row space-between\">\n                            <div class:gone={show_chatbot_settings} class=\"row spaced centered\" style=\"height: auto; width: 100%;\">\n                                <span>Model: </span>\n                                <select bind:value={selected_chatbot} >\n                                    {#each Object.keys(chatbot_models) as model}\n                                        <option value={model}>{model}</option>\n                                    {/each}\n                                </select>\n                            </div>\n                            \n                            <button class=\"action-button\" on:click={async ()=> {\n                                    show_chatbot_settings=!show_chatbot_settings;\n                                    await logAction(\"FeedbackList: Toggled chatbot settings\", show_chatbot_settings);\n                                }}>\n                                <img class=\"action-icon\" \n                                src={show_chatbot_settings ? \"./logos/exit-svgrepo-com.svg\" : \"./logos/settings-svgrepo-com.svg\" }\n                                alt={show_chatbot_settings ? \"Exit chatbot settings\" : \"Open chatbot settings\"}\n                                style=\"width: 2.5rem; height: 2.5rem;\">\n                            </button>\n                        </div>\n\n                        {#if !show_chatbot_settings} \n                            <div id=\"chatbot-messages\" class=\"column spaced bordered padded\">\n                                <div class=\"assistant padded\">\n                                    <p> <strong> assistant: </strong> Hello! How can I help you today? </p>\n                                </div>\n                                {#each chatbot_messages as message} \n                                    {#if message.role != \"system\"}\n                                        <div class=\"{message.role} padded column spaced\">\n                                            <div class=\"message-header row {\"context\" in message || \"image\" in message ? 'with-context' : 'no-context'}\" >\n                                                <div class=\"row spaced\">\n                                                    {#if \"context\" in message}\n                                                        <div class=\"context-tag feedback\">\n                                                            <small>Context: F#{message.context.id} {\n                                                                message.context.quote.length > 40 ? message.context.quote.slice(0,40)+\"...\" : message.context.quote\n                                                            }</small>\n                                                        </div>\n                                                    {/if}\n                                                    {#if \"image\" in message}\n                                                        <div class=\"context-tag image\">\n                                                            <small>\n                                                                {message.role === \"user\" ? \"Attached image\" : \"Response to image\"}\n                                                            </small>\n                                                        </div>\n                                                    {/if}\n                                                </div>\n                                                <div class=\"row spaced\">\n                                                    <button class=\"action-button row spaced centered\" on:click={async () => {\n                                                        active_right_tab = 2;\n                                                        addNote(message.role+\": \"+message.content);\n                                                        await saveMyNotes(my_notes);\n                                                        await logAction(\"FeedbackList: Added note to My Notes\", message);                                                        \n                                                    }}> \n                                                        <small> Add to My Notes </small>\n                                                        <img src=\"./logos/note-svgrepo-com.svg\" alt=\"Add to my notes\" class=\"mini-icon\">\n                                                    </button>\n                                                    \n                                                    {#if \"context\" in message}\n                                                        <button class=\"action-button row spaced centered\" on:click={async () => {\n                                                            active_right_tab = 2;\n                                                            addNote(message.role+\": \"+message.content, \"id\" in message.context ? message.context.id : null);\n                                                            await saveMyFeedbackNotes(feedback_notes);\n                                                            await logAction(\"FeedbackList: Added note to Feedback ID\"+message.context.id, message);                                                        \n                                                        }}> \n                                                            <small> Add to F#{message.context.id} Notes </small>\n                                                            <img src=\"./logos/note-svgrepo-com.svg\" alt=\"Add feedback note\" class=\"mini-icon\">\n                                                        </button>\n                                                    {/if}\n\n                                                    <div class=\"row\">\n                                                        <button class=\"action-button column centered\" on:click = {async () => {\n                                                            // navigator.clipboard.writeText(message.role+\": \"+message.content);\n                                                            copy(message.role+\": \"+message.content);\n                                                            await logAction(\"FeedbackList: Copied message\", message);\n                                                        }}> \n                                                            <img src=\"./logos/copy-svgrepo-com.svg\" alt=\"Copy note\" class=\"mini-icon\">\n                                                        </button>\n\n                                                        {#if message.role===\"user\"} \n                                                            <button disabled={is_loading} class=\"action-button column centered\" on:click = {async () => {\n                                                                let confirm = window.confirm(\"Are you sure you want to delete this message? This cannot be undone.\");\n                                                                if(!confirm) {\n                                                                    return;\n                                                                }\n                                                                \n\n                                                                // Get index of assistant message in chatbot_messages. Delete assistant message too. \n                                                                //BUG: NOt being deleted\n                                                                let idx = chatbot_messages.indexOf(message);\n                                                                let assistant_idx = idx+1;\n                                                                let assistant_message = chatbot_messages[assistant_idx];\n                                                                \n\n                                                                await fetch(\"/remove_from_backend_chatbot_messages\", {\n                                                                    method: \"POST\",\n                                                                    headers: {\n                                                                        \"Content-Type\": \"application/json\"\n                                                                    },\n                                                                    body: JSON.stringify({user_message_idx: idx, assistant_message_idx: assistant_idx})\n                                                                });\n\n                                                                chatbot_messages = chatbot_messages.filter(m => m !== message);\n                                                                if(assistant_message.role===\"assistant\") {\n                                                                    chatbot_messages = chatbot_messages.filter(m => m !== assistant_message);\n                                                                }\n\n\n                                                                chatbot_messages = chatbot_messages;\n                                                                await saveDisplayChatbotMessages(chatbot_messages);\n                                                                await logAction(\"FeedbackList: Removed message\", message);\n                                                            }}> \n                                                                <img src=\"./logos/delete-x-svgrepo-com.svg\" alt=\"Delete message\" class=\"mini-icon\">\n                                                            </button>\n                                                        {/if}\n\n                                                        \n                                                    </div>\n                                        \n                                                    \n                                                </div>\n                                            </div>\n                                            <div >\n                                                <strong> {message.role}: </strong>\n\n                                                <SvelteMarkdown source={message.content} />\n\n                                                <!-- <md-block>  {message.content} </md-block> -->\n                                            </div>\n                                            {#if \"image\" in message && message.role===\"user\"}\n                                                <div class=\"column centered\" style=\"width: 100%;\">\n                                                    <img src={message.image} alt=\"Visual context\" style=\"width:50%; height:auto;\">\n                                                </div>\n                                            {/if}\n                                            \n                                        </div>\n                                    {/if}\n                                {/each}\n                                <div class=\"assistant padded column\" class:invisible={is_loading===false}>\n                                    <p> <strong> assistant: </strong>  </p>\n                                    <LoadingBar bind:progress={chatbot_load_progress} bind:status={chatbot_load_status} />\n                                </div>\n                                <div style=\"height: 20%; width: 100%; background-color:white; color:white; cursor: default;\"></div> \n                            </div>\n\n                            <div id=\"chatbot-actions\" class=\"column padded spaced centered\">\n                                <div id=\"chatbot-utilities\" class=\"row centered spaced\" >\n                                    <div id=\"contexts\" class=\"column centered bordered\" style={image_url ? \"width:30%;\" : \"width:45%;\"}>\n                                        <span><strong>Feedback Context:</strong></span>\n                                        {#if context}\n                                            <div class=\"suggested-message row \"> \n                                                <span>F#{context.id}:{context.quote.slice(0, 30)}... </span>\n                                                <button on:click|preventDefault={\n                                                    async () => {\n                                                        await logAction(\"FeedbackList: Removed context\", context);\n                                                        context=null;\n                                                    }}>\n                                                    <img src=\"./logos/delete-x-svgrepo-com.svg\" alt=\"Remove context\" class=\"mini-icon\">\n                                                </button>\n                                            </div>\n                                        {:else}\n                                            <span> None. Add by selecting from the feedback.</span>\n                                        {/if}\n                                    </div>\n                                    <div id=\"suggested-messages\" class=\"column centered bordered\" style={image_url ? \"width:30%;\" : \"width:45%;\"}>\n                                        <span><strong>Suggested messages:</strong></span>\n                                        <div class=\"suggested-message\" on:click|preventDefault={\n                                                async () => {\n                                                    if(!is_loading) {\n                                                        await sendMessage(\"Can you explain the following feedback?\",context);\n                                                    }\n                                                }\n                                            } >\n                                            Explain feedback.\n                                        </div>\n                                        <div class=\"suggested-message\" on:click|preventDefault={\n                                                async () => {\n                                                    if(!is_loading) {\n                                                        await sendMessage(\"Can you brainstorm a set of actions to address the following feedback?\",context);\n                                                    }\n                                                }\n                                            }>\n                                            Brainstorm actions.\n                                        </div>\n                                    </div>\n                                    <div id=\"visual-context\" class=\"column centered bordered\" style={image_url ? \"width:30%;\" : \"display:none;\"}>\n                                        {#if image_url}\n                                            <span><strong>Attached image:</strong></span>\n                                            <div class=\"row\" style=\"width:100%; height:100%;\">\n                                                <img src={image_url} alt=\"Visual context\" style=\"width:100%; height:100%;\">\n                                                <button on:click|preventDefault={\n                                                    async () => {\n                                                        await logAction(\"FeedbackList: Removed image\", image_url);\n                                                        image_url = null;\n                                                        selected_image = null;\n                                                    }}>\n                                                    <img src=\"./logos/delete-x-svgrepo-com.svg\" alt=\"Remove image\" class=\"mini-icon\">\n                                                </button>\n                                            </div>\n                                            \n                                        {:else}\n                                            \n                                        {/if}\n                                    </div>\n                                </div>\n                                <div id=\"chatbot-input\" class=\"row spaced centered\" >\n                                    <div class=\"column spaced\">\n                                        <!-- <button class=\"action-button centered column\" on:click|preventDefault={async () => { \n                                                // Take screenshot.\n                                                // Attach screenshotted image as a context. \n                                            }}>\n                                            <img src=\"./logos/screenshot-tile-noroot-svgrepo-com.svg\" alt=\"Screenshot\" class=\"action-icon\">\n                                        </button> -->\n                                        \n                                        <label for=\"image_upload\" style=\"display: none;\"></label>\n                                        <input bind:value={image_files} bind:this={image_input} \n                                            accept=\"image/png, image/jpeg\" type=\"file\" style=\"display: none;\"\n                                            id=\"image_upload\" name=\"image_upload\" \n                                            on:change = { async () => {\n                                                image_files = image_input.files;\n                                                [image_url,selected_image] = await handleImageUpload(image_files);\n                                                await logAction( image_url ? \"FeedbackList: Uploaded image\": \"FeedbackList: Canceled uploading image\", image_url);\n                                            }}\n                                        />\n                                        <button class=\"action-button centered column\" on:click|preventDefault={async () => { \n                                                // Add image\n                                                image_input.click();\n                                            }}>\n                                            \n                                            <img src=\"./logos/image-svgrepo-com.svg\" alt=\"Attach image\" class=\"action-icon\">\n                                        </button>\n                                    </div>\n                                    \n                                    <textarea bind:value=\"{inputMessage}\" style=\"width:100%;height:100%;\" on:keydown=\"{e => e.key==='Enter' && sendMessage(inputMessage, context)}\"  placeholder=\"Type your message here...\" id=\"textarea\"></textarea>\n                                    <button class=\"action-button centered column\" disabled={is_loading} on:click|preventDefault={async () => { \n                                            \n                                            await sendMessage(inputMessage,  context);\n                                            \n                                            inputMessage = \"\";\n                                        }}>\n                                        <img src=\"./logos/send-svgrepo-com.svg\" alt=\"Send\" class=\"action-icon\">\n                                    </button>\n                                </div>\n                            </div>\n                        {:else}\n                            <div id=\"chatbot-settings\" class=\"column padded spaced\" style=\"width: 100%; height: 95%;\">\n                                <div id=\"chatbot-configurations\" class=\"column centered spaced padded bordered\">\n                                    <span> <strong> Configurations </strong> </span>\n                                    <div class=\"row spaced centered\" style=\"height: auto; width: 100%;\">\n                                        <span>Model: </span>\n                                        <select bind:value={selected_chatbot} >\n                                            {#each Object.keys(chatbot_models) as model}\n                                                <option value={model}>{model}</option>\n                                            {/each}\n                                        </select>\n                                    </div>\n                                    <div class=\"row spaced\" style=\"height: auto; width: 100%;\">\n                                        <span>Temperature: </span>\n                                        <Range min=0.0 max=2.0 step=0.1 bind:value={chatbot_temperature} />\n                                    </div>\n                                    <div class=\"row spaced\" style=\"height: auto; width: 100%;\">\n                                        <span>Max Output Tokens: </span>\n                                        <Range min=10.0 max=4095.0 step=1.0 bind:value={chatbot_max_output_tokens} />\n                                    </div>\n\n                                </div>\n                                <div id=\"chatbot-rag-panel\" class=\"column centered spaced padded bordered\" >\n                                    <span> <strong> Chatbot's Resources </strong> </span>\n\n                                    <div id=\"chatbot-rag-sources\" class=\"column centered spaced padded bordered\" style=\"width:100%; height:auto; overflow-y:auto;\">\n                                        <div class=\"overlay centered padded\" class:invisible = {is_document_loading===false}>\n                                            <LoadingBar bind:progress={document_load_progress} bind:status={document_load_status} />\n                                        </div>\n\n                                        {#if documents.length > 0}\n                                            {#each documents as doc,i}\n                                                <div class=\"row centered spaced centered\">\n                                                    {doc}\n                                                    <button disabled={is_document_loading} class=\"action-button\" on:click|preventDefault={\n                                                        async () => {\n                                                            let confirm = window.confirm(\"Are you sure you want to delete this document? This cannot be undone.\");\n                                                            if(!confirm) {\n                                                                return;\n                                                            }\n                                                            is_document_loading=true;\n                                                            document_load_progress=50;\n                                                            document_load_status=\"Removing document...\";\n                                                            let result = await deleteDocument(doc,i);\n                                                            document_load_status=\"Done!\";\n                                                            document_load_progress=100;\n                                                            is_document_loading=false;\n                                                            logAction(\"FeedbackList: Removed document\", result);\n                                                        }}>\n                                                        <img src=\"./logos/delete-x-svgrepo-com.svg\" alt=\"Remove document\" class=\"mini-icon\">\n                                                    </button>\n                                                </div>\n                                            {/each}\n                                        {:else}\n                                            <span> No resources available. </span>\n                                        {/if}\n                                    </div>\n\n                                    <div id=\"chatbot-rag-buttons\" class=\"row centered  padded spaced\" style=\"width:100%; height:auto;\"> \n                                        <input bind:this={document_file_input} type=\"file\" id=\"document_file_input\" class=\"gone\" on:change={\n                                            async (e) => {\n                                                is_document_loading=true;\n                                                await addDocument(e);\n                                                is_document_loading=false;\n                                                await logAction(\"FeedbackList: Added document\", e.target.files);\n                                            }}\n                                        />\n                                        <button disabled={is_document_loading} class=\"centered spaced column action-button\"\n                                            on:click={async () => {\n                                                // Add document\n                                                let confirm = window.confirm(\"Adding a new document will take a long time, since its information will be extracted. Do you want to proceed?\");\n                                                if(!confirm) {\n                                                    return;\n                                                }\n                                                document.getElementById(\"document_file_input\").click();\n                                                await logAction(\"FeedbackList: Added document\", \"Document\");\n                                            }}\n                                        >\n                                            <img src=\"./logos/add-ellipse-svgrepo-com.svg\" alt=\"Add document\" class=\"action-icon\">\n                                            Add Document\n                                        </button>\n                                        <button disabled={is_document_loading} class=\"centered spaced column action-button\"\n                                            on:click={async () => {\n                                                // Remove all documents\n                                                let confirm = window.confirm(\"Are you sure you want to remove all documents? This cannot be undone.\");\n                                                if(!confirm) {\n                                                    return;\n                                                }\n                                                is_document_loading=true;\n                                                await deleteAllDocuments();\n                                                is_document_loading=false;\n                                                await logAction(\"FeedbackList: Removed all documents\", documents);\n                                            }}\n                                        >\n                                            <img src=\"./logos/delete-svgrepo-com.svg\" alt=\"Remove all documents\" class=\"action-icon\">\n                                            Remove All\n                                        </button>\n                                    </div>\n                                </div>\n\n                            </div>\n\n                        {/if}\n                    </div>\n                {:else if active_right_tab===2}\n                    <div class=\"column spaced padded\" style=\"width: 100%; height: 100%; overflow-y: auto;\">\n                        <div class=\"column centered spaced padded\" style=\"width:100%; height:auto;\">\n                            <div class=\"row centered\" style=\"width:100%; height:auto;\">\n                                <span style=\"text-decoration: underline;\"> <strong>  My Notes </strong></span>\n                            </div>\n                            <div class=\"column bordered\" class:centered={my_notes.length <= 0} style=\"width:100%; height:auto;\">\n                                {#if my_notes.length > 0}\n                                    {#each my_notes as note, i}\n                                        <div class=\"row padded bordered space-between\"> \n                                            <div style=\"width: 95%; align-items: flex-start;\">\n                                                <SvelteMarkdown source={note} />\n                                            </div>\n                                            <!-- <p style=\"width: 95%; align-items: flex-start;\">\n                                                {note}\n                                            </p> -->\n                                            <div class=\"row spaced\" style=\"width: 5%; align-items: flex-start;\">\n                                                <!-- <button> Edit </button> -->\n                                                <button class=\"action-button\" on:click={async () => {\n                                                    removeNote(i);\n                                                    await saveMyNotes(my_notes);\n                                                    await logAction(\"FeedbackList: Removed note\", note);\n                                                }}> \n                                                    <img src=\"./logos/delete-x-svgrepo-com.svg\" alt=\"Delete note\" class=\"mini-icon\">\n                                                </button>\n                                            </div>\n                                        </div>\n                                    {/each}\n                                {:else}\n                                    <div class=\"row padded space-between centered\">\n                                        <span> No notes added. Feel free to add a note. </span>\n                                    </div>\n                                {/if}\n                                {#if adding_note} \n                                    <div class=\"row padded bordered space-between\" style=\"width:100%; height:auto;\"> \n                                        <input class=\"note-input\" type=\"text\" bind:value={temp_note} placeholder=\"Enter your note here\"/>\n                                        <div class=\"row spaced\">\n                                            <button class=\"action-button\" on:click={async () => {\n                                                confirmNote(); \n                                                adding_note=false;\n                                                await saveMyNotes(my_notes);\n                                                await logAction(\"FeedbackList: Added note to My Notes\", temp_note);\n                                            }}> \n                                                <img src=\"./logos/check-svgrepo-com.svg\" alt=\"Confirm adding note\" class=\"mini-icon\">\n                                            </button>\n                                            <button class=\"action-button\" on:click={async () => {\n                                                adding_note=false;\n                                                temp_note=\"\";\n                                                await logAction(\"FeedbackList: Cancelled adding note to My Notes\", temp_note);\n                                            }}> \n                                                <img src=\"./logos/delete-x-svgrepo-com.svg\" alt=\"Cancel adding note\" class=\"mini-icon\">\n                                            </button>\n                                        </div>\n                                    </div>\n                                {/if}\n                            </div>\n                            \n                            <div class=\"row centered spaced\">\n                                <button class=\"action-button centered column\"\n                                    on:click={async () => {\n                                        adding_note=true;\n                                        await logAction(\"FeedbackList: Clicked on My Notes' Add Note button\", adding_note);\n                                    }}\n                                > \n                                    <img src=\"./logos/note-svgrepo-com.svg\" alt=\"Add Note\" class=\"action-icon\">\n                                    Add Note\n                                </button>\n                                <button class=\"action-button centered column\"\n                                    on:click={async() => {\n                                        let confirm = window.confirm(\"Are you sure you want to delete all notes? This cannot be undone.\");\n                                        if(!confirm) {\n                                            return;\n                                        }\n                                        my_notes=[];\n                                        my_notes=my_notes;\n                                        await saveMyNotes(my_notes);\n                                        await logAction(\"FeedbackList: Removed all notes from My Notes\", my_notes);\n                                }}> \n                                    <img src=\"./logos/delete-svgrepo-com.svg\" alt=\"Delete all notes\" class=\"action-icon\">\n                                    Delete all \n                                    \n                                </button>\n                            </div>\n                        </div>\n\n                        <div class=\"row centered\" style=\"width:100%; height:auto;\">\n                            <span style=\"text-decoration: underline;\"> <strong>  My Feedback Notes </strong></span>\n                        </div>\n                        {#if Object.keys(feedback_notes).length > 0}\n                            {#each Object.keys(feedback_notes).map(Number).sort((a, b) => a - b) as key}\n                                <div id={\"feedback-note-section-\"+key} class=\"column centered spaced padded\" style=\"width:100%; height:auto;\">\n                                    <div class=\"row space-between\" style=\"width:100%; height:auto;\">\n                                        <span> <strong> Feedback #{key} Notes: </strong> {feedback_list[key-1].quote.slice(0, 70)}...</span>\n                                        <button class=\"action-button\" on:click={async () => {\n                                            let string = \"Are you sure you want to delete this feedback notes section? This cannot be undone\";\n                                            if(feedback_notes[key].notes.length > 0) {\n                                                string = \"Are you sure you want to delete this feedback notes section? This will delete all notes and cannot be undone.\";\n                                            }\n                                            let confirm = window.confirm(string);\n                                            if(!confirm) {\n                                                return;\n                                            }\n                                            delete feedback_notes[key];\n                                            feedback_notes = feedback_notes;\n                                            await saveMyFeedbackNotes(feedback_notes);\n                                            await logAction(\"FeedbackList: Removed feedback notes section\", \"Feedback ID\"+key);\n                                        }}> \n                                            <img src=\"./logos/delete-x-svgrepo-com.svg\" alt=\"Remove feedback notes section\" class=\"mini-icon\">\n                                        </button>\n                                    </div>\n                                    <div class=\"column bordered\" class:centered={feedback_notes[key].notes.length <= 0} \n                                    style=\"width:100%; height:auto;\">\n                                        {#if feedback_notes[key].notes.length > 0}\n                                            {#each feedback_notes[key].notes as note, i}\n                                                <div class=\"row padded bordered space-between\"> \n                                                    <!-- <p style=\"width: 95%;\">{note}</p> -->\n                                                    <div style=\"width: 95%; align-items: flex-start;\">\n                                                        <SvelteMarkdown source={note} />\n                                                    </div>\n                                                    <div class=\"row space-between\" style=\"width: 5%; align-items: flex-start;\">\n                                                        <!-- <button class=\"action-button\"> Edit </button> -->\n                                                        <button class=\"action-button\" on:click={async () => {\n                                                            removeNote(i, key);\n                                                            await saveMyFeedbackNotes(feedback_notes);\n                                                            await logAction(\"FeedbackList: Removed note from Feedback ID\"+key, note);\n                                                        }}> \n                                                            <img src=\"./logos/delete-x-svgrepo-com.svg\" alt=\"Delete note from Feedback ID{key}\" class=\"mini-icon\">\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            {/each}\n                                        {:else}\n                                            <div class=\"row padded centered space-between\">\n                                                <span> No notes added. Feel free to add a note. </span>\n                                            </div>\n                                        {/if}   \n                                        {#if feedback_notes[key].is_adding} \n                                            <div class=\"row padded bordered space-between\" style=\"width:100%; height:auto;\"> \n                                                <input class=\"note-input\" type=\"text\" bind:value={temp_note} placeholder=\"Enter your note here\" />\n                                                <div class=\"row spaced\">\n                                                    <button class=\"action-button\" on:click={async () => {\n                                                        confirmNote(key);\n                                                        feedback_notes[key].is_adding=false;\n                                                        await saveMyFeedbackNotes(feedback_notes);\n                                                        await logAction(\"FeedbackList: Added note to Feedback ID\"+key, temp_note);\n                                                    }}> \n                                                        <img src=\"./logos/check-svgrepo-com.svg\" alt=\"Confirm adding note\" class=\"mini-icon\">\n                                                    </button>\n                                                    <button class=\"action-button\" on:click={async () => {\n                                                        feedback_notes[key].is_adding=false;\n                                                        await logAction(\"FeedbackList: Cancelled adding note to Feedback ID\"+key, temp_note);\n                                                        temp_note=\"\";\n                                                    }}> \n                                                        <img src=\"./logos/delete-x-svgrepo-com.svg\" alt=\"Cancel adding note\" class=\"mini-icon\">\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        {/if}\n                                    </div>\n                                    <div class=\"row centered spaced\">\n                                        <button class=\"action-button centered column\"\n                                            on:click={async () => {\n                                                feedback_notes[key].is_adding=true;\n                                                await logAction(\"FeedbackList: Clicked on Feedback ID\"+key+\"'s Add Note button\", feedback_notes[key].is_adding);\n                                            }}\n                                        > \n                                            <img src=\"./logos/note-svgrepo-com.svg\" alt=\"Add Note\" class=\"action-icon\">\n                                            Add Note\n                                        </button>\n                                        <button class=\"action-button centered column\"\n                                            on:click={async() => {\n                                                let confirm = window.confirm(\"Are you sure you want to delete all notes? This cannot be undone.\");\n                                                if(!confirm) {\n                                                    return;\n                                                }\n                                                feedback_notes[key].notes=[];\n                                                feedback_notes[key].notes=feedback_notes[key].notes;\n                                                await saveMyFeedbackNotes(feedback_notes);\n                                                await logAction(\"FeedbackList: Removed all notes from Feedback ID\"+key, feedback_notes[key].notes);\n                                            }}> \n                                            <img src=\"./logos/delete-svgrepo-com.svg\" alt=\"Delete all notes\" class=\"action-icon\">\n                                            Delete all  \n                                        </button>\n                                    </div>\n                                </div>\n                            {/each}\n                        {:else}\n                            <div class=\"column centered spaced padded\" style=\"width:100%; height:auto;\">\n                                <div class=\"row space-between centered\" style=\"width:100%; height:auto;\">\n                                    <span> No feedback notes added. Feel free to add notes on your feedback by clicking \"Add Note\" on any of the critical feedback.</span>\n                                </div>\n                            </div>\n                        {/if}\n                    </div>\n                    \n\n                    \n\n                {/if}\n            </div>\n\n\n        </div>\n\n        \n    </div>\n\n</div>\n\n<style>\n\n    #feedback-list-page{\n        padding-top: 1rem;\n        position:relative;\n        display:flex;\n        height:100%;\n        width:100%;\n        background-color: #F8F9FA;\n    }\n\n    #left-panel{\n        position:relative;\n        height:100%;\n        width:60%;\n        padding-bottom: 1rem;\n    }\n\n    .tabbed-area{\n        height:100%;\n        width:100%;\n    }\n\n\n\n    .tab-header{\n        height:5%;\n        width:100%;\n        display:flex;\n        flex-direction:row;\n        border-bottom: 1px solid #ccc;\n        border-radius: 2px;\n        overflow-x:auto;\n    }\n\n    button.tab {\n        padding: 0.5rem 1rem;\n        border-top: none;\n        border-left: none;\n        border-bottom: none ;\n        background: #ddd;\n        cursor: pointer;\n    }\n\n    button.tab.active {\n        background:#ccc;\n        font-weight:bold;\n        border-bottom:none;\n    }\n\n    .tab-content {\n        background-color: #FFFFFF;\n        height:95%;\n        width:100%;\n    }\n\n    .right-bordered{\n        border-right: 1px solid #000000;\n    }\n\n    .tab-header button.tab:active{\n        background: #ccc;\n        font-weight: bold;\n    }\n\n    .feedback-header {\n        border-bottom: 1px solid #ccc;\n    }\n\n    .feedback-row:hover {\n        border: 2px solid #000000;\n        cursor:pointer;\n    }\n\n    .feedback-row.selected{\n        border: 2px solid #000000;\n    }\n\n    #right-panel{\n        position:relative;\n        height:100%;\n        width:40%;\n        padding-bottom: 1rem;\n    }\n\n    #media-player-area{\n        height:40%;\n        width:100%;\n    }\n\n    #selected-feedback-area{\n        height:60%;\n        width:100%;\n    }\n\n    #transcript-area {\n        height: 60%;\n        width: 100%;\n        overflow-y: auto; \n    }\n\n    #feedback-details{\n        height:70%;\n        width:100%;\n    }\n\n    #feedback-action-buttons{\n        height:30%;\n        width:100%;\n    }\n\n    #chatbot-tab-content {\n        height:100%;\n        width:100%;\n    }\n\n    #chatbot-header{\n        height:5%;\n        width:100%;\n        display:flex;\n        flex-direction:row;\n        justify-content: right;\n        align-items: center;\n        position: sticky;\n        top: 0;\n        z-index: 100;\n        background-color: rgb(201, 201, 201);\n        padding-top: 0.1rem;\n        padding-bottom: 0.1rem;\n    }\n\n    #chatbot-messages{\n        padding-top:1rem;\n        height:65%;\n        width:100%;\n        overflow-y: auto;\n    }\n\n    #chatbot-actions{\n        height:30%;\n        width:100%;\n        background-color: rgb(201, 201, 201);\n    }\n\n    #chatbot-input{\n        height:60%;\n        width:100%;\n    }\n\n    #chatbot-utilities{\n        height:40%;\n        width:100%;\n    }\n\n    #suggested-messages{\n        height:100%;\n        gap: 0.10rem;\n    }\n\n    #contexts{\n        height:100%;\n        gap: 0.10rem;\n    }\n\n    #visual-context{\n        height:100%;\n        gap: 0.10rem;\n    }\n\n    .user {\n        /* margin-left:1rem; */\n\t\tbackground-color: white;\n        border: 1px solid lightgray;\n\t\t\n\t}\n\t.assistant {\n        /* margin-right:1rem; */\n\t\tbackground-color: lightgray;\n\t}\n\n    .timestamp {\n        color: #007BFF;\n    }\n\n    .timestamp:hover{\n        /* font-weight: bold; */\n        text-decoration: underline;\n        cursor: pointer;\n    }\n\n    .suggested-message {\n        border: 1px dashed; \n        border-radius: 5px; \n        padding: 5px; \n        margin-bottom: 5px;\n    }\n\n    .suggested-message:hover {\n        cursor: pointer;\n        text-decoration: underline;\n        border: 2px dashed;   \n    }\n\n    \n\n    span.clickable {\n        color: blue;\n    }\n\n    span.clickable:hover{\n        /* font-weight: bold; */\n        color: blue;\n        text-decoration: underline;\n        cursor: pointer;\n    }\n\n\n    .done {\n        background-color: #ccc;\n        opacity: 0.5;\n        text-decoration: line-through; /* Add this line to strikeout the text */\n    }\n\n    .grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n        gap: 20px;\n        padding: 20px;\n    }\n\n    .positive-feedback-note {\n        background-color: #d4edda;\n        padding: 10px;\n        border-radius: 5px;\n    }\n\n    .positive-feedback-note:hover {\n        border: 2px solid #000000;\n        cursor:pointer;\n    }\n\n    .positive-feedback-note.selected{\n        border: 2px solid #000000;\n    }\n\n    .critical-feedback-note {\n        background-color: #edd5d4;\n        padding: 10px;\n        border-radius: 5px;\n    }\n\n    .critical-feedback-note:hover {\n        border: 2px solid #000000;\n        cursor:pointer;\n    }\n\n    .critical-feedback-note.selected{\n        border: 2px solid #000000;\n    }\n\n    .id-col {\n        width:3%;\n    }\n\n    .feedback-col {\n        width:45%;\n    }\n\n    .speaker-col {\n        width:15%;\n    }\n\n    .actions-col {\n        width:30%;\n    }\n\n    .done-col {\n        width:7%;\n    }\n\n    .context-tag {\n        padding: 2px 4px; /* Small padding */\n        border-radius: 4px; /* Rounded corners */\n        font-size: 0.75rem; /* Smaller font size */\n        margin-bottom: 4px; /* Space between the tag and the message */\n        text-align: center; /* Center the text */\n    }\n\n    .context-tag.feedback {\n        background-color: #ffbebe; /* Light red background */\n    }\n\n    .context-tag.image {\n        background-color: #a1c2ff; /* Light blue background */\n    }\n\n    .message-header {\n        display:flex;\n        align-items:center;\n    }\n\n    .with-context {\n        justify-content: space-between; /* Context on the left, button on the right */\n    }\n    .no-context {\n        justify-content: flex-end; /* Button on the right */\n    }\n\n    .note-input {\n        width: 80%;\n    }\n    \n    #chatbot-configurations {\n        background-color: #F8F9FA;\n    }\n\n    #chatbot-rag-panel {\n        background-color: #F8F9FA;\n    }\n\n\n    \n\n</style>\n\n\n\n\n        <!-- <div id=\"selected-feedback-area\" class=\"bordered spaced column\" >\n            {#if selected_feedback}\n                <div class=\"tab-header\" style=\"overflow-y: hidden; width: 100%; height: 10%;\">\n                    {#each detail_tabs as tab, i}\n                        <button class=\"tab\" on:click={()=>{\n                            setActiveDetailTab(i);\n                        }} \n                        class:active={i===activeDetailTab} class:right-bordered={i<detail_tabs.length-1} >{tab}</button>\n                    {/each}\n                </div>\n                <div class=\"tab-content \" style=\"width: 100%; height: 90%;\">\n                    {#if activeDetailTab===0}\n                        <span style=\"text-decoration: underline; margin-left: 1rem; margin-top: 1rem;\" class=\"\"><strong> Feedback details </strong></span>\n                        <div id=\"feedback-details\" class=\"column padded\" style=\"overflow-y: auto;\">\n                            <p>\n                                <span class=\"clickable\" on:click={() => seekTo(selected_feedback.excerpt_reference.start_timestamp, mediaPlayer)}>[{selected_feedback.excerpt_reference.start_timestamp}]</span> - <span class=\"clickable\" on:click={() => seekTo(selected_feedback.excerpt_reference.end_timestamp, mediaPlayer)}>[{selected_feedback.excerpt_reference.end_timestamp}]</span>\n                                <br>\n                                <span>{@html selected_feedback.excerpt_reference.dialogue}</span> \n                            </p>\n                        </div>\n                        <div id=\"feedback-action-buttons\" class=\" padded row spaced bordered centered\" style=\"border-left:none; border-right:none; border-bottom:none;\">\n                            <button class=\"action-button centered column\" on:click={async () => { \n                                    selected_feedback.positivised_quote = await paraphrasePositively(selected_feedback.quote, selected_feedback.excerpt_reference.dialogue);\n                                    showParaphrasedQuote(selected_feedback, true);\n                                    feedback_list = feedback_list;\n                                }}>\n                                <img src=\"./logos/ai-positive-paraphrase.png\" alt=\"Paraphrase positively\" class=\"action-icon\">\n                                Paraphrase positively\n                            </button>\n                            <button class=\"action-button\" on:click={() => removeFeedback(selected_feedback)}>\n                                <img src=\"./logos/delete-svgrepo-com.svg\" alt=\"Remove feedback\" class=\"action-icon\">\n                                Delete\n                            </button>\n                        </div>  \n                    {:else if activeDetailTab===1}\n                        <div id=\"chatbot-messages\" class=\"column spaced\">\n                            <div class=\"assistant padded\">\n                                <p> <strong> assistant: </strong> Hello! How can I help you today? </p>\n                            </div>\n                            {#each selected_feedback.chatbot_messages as message} \n                                {#if message.role != \"system\"}\n                                    <div class=\"{message.role} padded\">\n                                        <p> <strong> {message.role}: </strong> {message.content} </p>\n                                    </div>\n                                {/if}\n                            {/each}\n                            <div style=\"height: 20px; width: 100%; background-color:white; color:white; cursor: default;\"> \n                                <p>Lorem ipsum dolor sit amet. Eos libero voluptatem sit excepturi rerum vel porro odio est eligendi voluptatibus. At mollitia quam ea dolorum quae aut nemo ipsum est asperiores quibusdam est voluptatem accusamus. Ut eligendi porro quo autem illum non voluptatem rerum et nobis nisi est molestiae facilis quo magni perferendis.\n                                Ea Quis molestiae cum minus consequatur At velit internos et omnis neque qui nihil consequatur et acc</p>\n                            </div> \n                        </div>\n                        \n                        <div id=\"chatbot-actions\" class=\"column padded spaced centered\">\n                            <div id=\"suggested-messages\" class=\"row centered spaced\">\n                                <div class=\"suggested-message\" on:click|preventDefault={\n                                    async () => {\n                                        await sendMessage(\"Can you explain the following feedback: \\\"\" + selected_feedback.quote + \"\\\"?\");\n                                    }\n                                } >\n                                    Explain feedback.\n                                </div>\n                                <div class=\"suggested-message\" on:click|preventDefault={\n                                    async () => {\n                                        await sendMessage(\"Can you brainstorm the tasks to do to address the following feedback: \\\"\" + selected_feedback.quote + \"\\\"?\");\n                                    }\n                                }>\n                                    Brainstorm actions.\n                                </div>\n                            </div>\n                            <div id=\"chatbot-input\" class=\"row spaced centered\" >\n                                \n                                <textarea bind:value=\"{inputMessage}\" style=\"width:100%;height:100%;\" on:keydown=\"{e => e.key==='Enter' && sendMessage(inputMessage)}\"  placeholder=\"Type your message here...\" id=\"textarea\"></textarea>\n                                <button class=\"action-button centered column\" on:click|preventDefault={async () => { \n                                        await sendMessage(inputMessage);\n                                        inputMessage = \"\";\n                                    }}>\n                                    <img src=\"./logos/send-svgrepo-com.svg\" alt=\"Send\" class=\"action-icon\">\n                                </button>\n                            </div>\n                        </div>\n                        \n                    {/if}\n                </div>\n            {/if}\n        </div> -->\n","<script>\n\timport { onMount } from 'svelte';\n    import {setCookie, getCookie, pause} from './utils.js';\n\n\timport FeedbackSelector from './components/FeedbackSelector.svelte';\n\timport FeedbackList from './components/FeedbackList.svelte';\n    import LoadingBar from './components/LoadingBar.svelte';\n\n\tlet currentStep = 0;\n\tlet steps=3;\n    let uname = \"\";\n    let uID=\"\";\n    let is_loading = false;\n    let progress = 0;\n    let load_status = \"Initializing...\";\n\n    let left_display_styles={\n        0:\"grid\",\n        1:\"row\",\n    };\n\n\tlet recording={};\n\t// let recording={\n    //     \"video\": null,\n    //     \"audio\": \"blob:http://127.0.0.1:5000/e584c5ef-d146-4feb-b00e-d400823c7cc1\",\n    //     \"transcript\":`\n    //         1 \n    //         00:00:00,000 --> 00:00:10,000 \n    //         Professor: Alright, let's start with Sarah's 3D rendering. Sarah, could you give us a brief overview of your design concept? \n\n    //         2 \n    //         00:00:10,000 --> 00:00:20,000 \n    //         Sarah: Sure, my concept is based on creating a serene and airy living space that maximizes natural light and uses sustainable materials. \n\n    //         3 \n    //         00:00:20,000 --> 00:00:30,000 \n    //         Guest Professional 1: I appreciate the focus on sustainability. Can you tell us more about the materials you chose and why? \n\n    //         4 \n    //         00:00:30,000 --> 00:00:40,000 \n    //         Sarah: I used reclaimed wood for the flooring and bamboo for the furniture. The idea was to create a warm, inviting atmosphere while being eco-friendly. \n\n    //         5 \n    //         00:00:40,000 --> 00:00:50,000 \n    //         Student 1: The use of bamboo is interesting. It reminds me of some modern Japanese interiors I've seen. \n\n    //         6 \n    //         00:00:50,000 --> 00:01:00,000 \n    //         Professor: Yes, I see that influence. But I think the space could benefit from more contrast. Right now, it feels a bit too uniform. \n\n    //         7 \n    //         00:01:00,000 --> 00:01:10,000 \n    //         Guest Professional 2: I agree. Maybe you could introduce some darker elements to create depth and dimension. What do you think about that? \n\n    //         8 \n    //         00:01:10,000 --> 00:01:20,000 \n    //         Sarah: That's a good point. I was worried about making it too dark, but I see how it could add more interest. \n\n    //         9 \n    //         00:01:20,000 --> 00:01:30,000 \n    //         Student 2: I think the lighting is really well done. It gives a very airy feel to the space. \n\n    //         10 \n    //         00:01:30,000 --> 00:01:40,000 \n    //         Professor: Yes, the lighting is a strong point. But I would suggest rethinking the placement of the windows. They seem a bit too high. \n\n    //         11 \n    //         00:01:40,000 --> 00:01:50,000 \n    //         Guest Professional 1: And I would definitely take away the coloring. I think it’s not working for the intent that you want and that you could just use blue Styrofoam. \n\n    //         12 \n    //         00:01:50,000 --> 00:02:00,000 \n    //         Sarah: I see. I was trying to create a gradient effect, but maybe it's not coming through as I intended. \n\n    //         13 \n    //         00:02:00,000 --> 00:02:10,000 \n    //         Student 3: It reminds me of a Scandinavian design, very minimalistic and clean. \n\n    //         14 \n    //         00:02:10,000 --> 00:02:20,000 \n    //         Guest Professional 2: Yes, but Scandinavian designs often have a pop of color or a statement piece. Maybe you could incorporate something like that? \n\n    //         15 \n    //         00:02:20,000 --> 00:02:30,000 \n    //         Professor: Good suggestion. Also, consider the long-term vision. How will this space age over time? Will it still feel fresh and inviting? \n\n    //         16 \n    //         00:02:30,000 --> 00:02:40,000 \n    //         Sarah: That's a great point. I hadn't thought about the aging aspect. \n\n    //         17 \n    //         00:02:40,000 --> 00:02:50,000 \n    //         Guest Professional 1: What made you put color on it with this? \n\n    //         18 \n    //         00:02:50,000 --> 00:03:00,000 \n    //         Sarah: I wanted to create a calming effect with soft blues and greens, but I can see how it might be too subtle. \n\n    //         19 \n    //         00:03:00,000 --> 00:03:10,000 \n    //         Student 4: I think the furniture layout is very functional. It seems like a space where you could really relax. \n\n    //         20 \n    //         00:03:10,000 --> 00:03:20,000 \n    //         Professor: Functional, yes, but it could be more dynamic. Maybe try experimenting with different furniture arrangements. \n\n    //         21 \n    //         00:03:20,000 --> 00:03:30,000 \n    //         Guest Professional 2: And consider layering different textures. It could add more depth and interest to the space.\n\n    //         22 \n    //         00:03:30,000 --> 00:03:40,000 \n    //         Sarah: Layering textures sounds like a good idea. I could try incorporating some textiles or different finishes.\n\n    //         23 \n    //         00:03:40,000 --> 00:03:50,000 \n    //         Student 5: The open shelving is a nice touch. It makes the space feel more open and accessible. \n\n    //         24 \n    //         00:03:50,000 --> 00:04:00,000 \n    //         Professor: Yes, but be careful with open shelving. It can easily become cluttered. Think about how you can maintain that clean look.  \n\n    //         25 \n    //         00:04:00,000 --> 00:04:10,000 \n    //         Guest Professional 1: I think we need to explore other ways of creating dimension. Maybe it is about materials? Maybe layering? Maybe it is about bunching?  \n\n    //         26 \n    //         00:04:10,000 --> 00:04:20,000 \n    //         Sarah: I'll definitely experiment with those ideas. Thank you for the suggestions.  \n\n    //         27 \n    //         00:04:20,000 --> 00:04:30,000 \n    //         Student 6: The use of natural light is really effective. It gives the space a very welcoming feel.  \n\n    //         28 \n    //         00:04:30,000 --> 00:04:40,000 \n    //         Professor: Agreed, but I think the lighting could be improved. The current fixtures don't seem to complement the overall design.  \n\n    //         29 \n    //         00:04:40,000 --> 00:04:50,000 \n    //         Guest Professional 2: And I would suggest looking into different types of lighting fixtures. Maybe something more modern or industrial to contrast with the natural elements.\n\n    //         30 \n    //         00:04:50,000 --> 00:05:00,000 \n    //         Sarah: That's a great idea. I'll look into some different lighting options.  \n\n    //         31 \n    //         00:05:00,000 --> 00:05:10,000 \n    //         Student 7: The color palette is very soothing. It makes the space feel very calm and peaceful.  \n\n    //         32 \n    //         00:05:10,000 --> 00:05:20,000 \n    //         Professor: Yes, but as mentioned earlier, it could use more contrast. Maybe introduce some bolder colors in small accents.  \n\n    //         33 \n    //         00:05:20,000 --> 00:05:30,000 \n    //         Guest Professional 1: And think about the flow of the space. How do people move through it? Are there any areas that feel cramped or awkward?  \n\n    //         34 \n    //         00:05:30,000 --> 00:05:40,000 \n    //         Sarah: I'll take another look at the layout and see if there are any areas that need more space.  \n\n    //         35 \n    //         00:05:40,000 --> 00:05:50,000 \n    //         Student 8: The use of plants is a nice touch. It adds a bit of life to the space.  \n\n    //         36 \n    //         00:05:50,000 --> 00:06:00,000 \n    //         Professor: Yes, but be mindful of maintenance. Some plants require a lot of care. Choose ones that are easy to maintain.  \n\n    //         37 \n    //         00:06:00,000 --> 00:06:10,000 \n    //         Guest Professional 2: And consider the placement of the plants. They should enhance the space, not clutter it.  \n\n    //         38 \n    //         00:06:10,000 --> 00:06:20,000 \n    //         Sarah: I'll make sure to choose low-maintenance plants and place them strategically.  \n\n    //         39 \n    //         00:06:20,000 --> 00:06:30,000 \n    //         Student 9: The overall design feels very cohesive. Everything seems to work well together.\n\n    //         40 \n    //         00:06:30,000 --> 00:06:40,000 \n    //         Professor: Cohesive, yes, but don't be afraid to take some risks. Sometimes a bold choice can really elevate a design. \n\n    //         41 \n    //         00:06:40,000 --> 00:06:50,000 \n    //         Guest Professional 1: And speaking of risks, have you considered incorporating any unique or unconventional elements? \n\n    //         42 \n    //         00:06:50,000 --> 00:07:00,000 \n    //         Sarah: I was thinking about adding a statement piece, like a large piece of art or a unique light fixture. \n\n    //         43 \n    //         00:07:00,000 --> 00:07:10,000 \n    //         Student 10: That could be interesting. It might add a focal point to the space. \n\n    //         44 \n    //         00:07:10,000 --> 00:07:20,000 \n    //         Professor: Yes, a focal point could really help anchor the design. Just make sure it complements the overall aesthetic. \n\n    //         45 \n    //         00:07:20,000 --> 00:07:30,000 \n    //         Guest Professional 2: And think about how it interacts with the other elements in the room. It should enhance, not overpower. \n\n    //         46 \n    //         00:07:30,000 --> 00:07:40,000 \n    //         Sarah: I'll definitely consider that. Thank you for the feedback. \n\n    //         47 \n    //         00:07:40,000 --> 00:07:50,000 \n    //         Student 11: The use of mirrors is clever. It makes the space feel larger and more open. \n\n    //         48 \n    //         00:07:50,000 --> 00:08:00,000 \n    //         Professor: Mirrors are a great tool, but be careful not to overdo it. Too many mirrors can make a space feel disorienting. \n\n    //         49 \n    //         00:08:00,000 --> 00:08:10,000 \n    //         Guest Professional 1: And think about the placement of the mirrors. They should reflect something interesting, not just another wall. \n\n    //         50 \n    //         00:08:10,000 --> 00:08:20,000 \n    //         Sarah: I'll make sure to place them thoughtfully. Thank you for the advice. \n\n    //         51 \n    //         00:08:20,000 --> 00:08:30,000 \n    //         Student 12: The choice of furniture is very comfortable-looking. It seems like a space where you could really relax. \n\n    //         52 \n    //         00:08:30,000 --> 00:08:40,000 \n    //         Professor: Comfort is important, but also consider the scale of the furniture. Some pieces look a bit oversized for the space. \n\n    //         53 \n    //         00:08:40,000 --> 00:08:50,000 \n    //         Guest Professional 2: And think about the balance between form and function. The furniture should be both beautiful and practical. \n\n    //         54 \n    //         00:08:50,000 --> 00:09:00,000 \n    //         Sarah: I'll take another look at the furniture choices and see if I can find a better balance. \n\n    //         55 \n    //         00:09:00,000 --> 00:09:10,000 \n    //         Student 13: The overall layout is very intuitive. It seems like a space that would be easy to navigate. \n\n    //         56 \n    //         00:09:10,000 --> 00:09:20,000 \n    //         Professor: Intuitive, yes, but consider the flow of traffic. Are there any bottlenecks or areas that might feel cramped? \n\n    //         57 \n    //         00:09:20,000 --> 00:09:30,000 \n    //         Guest Professional 1: And think about how the space will be used. Are there enough areas for different activities, like reading, entertaining, or working? \n\n    //         58 \n    //         00:09:30,000 --> 00:09:40,000 \n    //         Sarah: I'll make sure to consider the different uses of the space and adjust the layout accordingly. \n\n    //         59 \n    //         00:09:40,000 --> 00:09:50,000 \n    //         Student 14: The use of natural materials is very appealing. It gives the space a warm, inviting feel. \n\n    //         60 \n    //         00:09:50,000 --> 00:10:00,000 \n    //         Professor: Natural materials are great, but be mindful of how they age. Some materials might require more maintenance over time. \n\n    //         61 \n    //         00:10:00,000 --> 00:10:10,000 \n    //         Guest Professional 2: And consider mixing natural materials with more modern elements. It could create an interesting contrast.\n\n    //         62 \n    //         00:10:10,000 --> 00:10:20,000 \n    //         Sarah: I'll definitely explore that idea. Thank you for the suggestion. \n\n    //         63 \n    //         00:10:20,000 --> 00:10:30,000 \n    //         Student 15: The overall design feels very balanced. It seems like a space where everything has its place. \n\n    //         64 \n    //         00:10:30,000 --> 00:10:40,000 \n    //         Professor: Balance is important, but don't be afraid to play with asymmetry. Sometimes a bit of imbalance can make a design more dynamic. \n\n    //         65 \n    //         00:10:40,000 --> 00:10:50,000 \n    //         Guest Professional 1: And think about how you can create focal points. What elements do you want to draw attention to? \n\n    //         66 \n    //         00:10:50,000 --> 00:11:00,000 \n    //         Sarah: I'll experiment with some asymmetrical elements and see how it affects the overall design. \n\n    //         67 \n    //         00:11:00,000 --> 00:11:10,000 \n    //         Student 16: The use of color is very soothing. It makes the space feel very calm and peaceful. \n\n    //         68 \n    //         00:11:10,000 --> 00:11:20,000 \n    //         Professor: Soothing, yes, but as mentioned earlier, it could use more contrast. Maybe introduce some bolder colors in small accents. \n\n    //         69 \n    //         00:11:20,000 --> 00:11:30,000 \n    //         Guest Professional 2: And think about how the colors interact with the lighting. Different lighting can change the way colors appear. \n\n    //         70 \n    //         00:11:30,000 --> 00:11:40,000 \n    //         Sarah: I'll make sure to consider the lighting when choosing colors. Thank you for the feedback. \n\n    //         71 \n    //         00:11:40,000 --> 00:11:50,000 \n    //         Student 17: The overall design feels very cohesive. Everything seems to work well together. \n\n    //         72 \n    //         00:11:50,000 --> 00:12:00,000 \n    //         Professor: Cohesive, yes, but don't be afraid to take some risks. Sometimes a bold choice can really elevate a design. \n\n    //         73 \n    //         00:12:00,000 --> 00:12:10,000 \n    //         Guest Professional 1: And speaking of risks, have you considered incorporating any unique or unconventional elements? \n\n    //         74 \n    //         00:12:10,000 --> 00:12:20,000 \n    //         Sarah: I was thinking about adding a statement piece, like a large piece of art or a unique light fixture. \n\n    //         75 \n    //         00:12:20,000 --> 00:12:30,000 \n    //         Student 18: That could be interesting. It might add a focal point to the space. \n\n    //         76 \n    //         00:12:30,000 --> 00:12:40,000 \n    //         Professor: Yes, a focal point could really help anchor the design. Just make sure it complements the overall aesthetic. \n\n    //         77 \n    //         00:12:40,000 --> 00:12:50,000 \n    //         Guest Professional 2: And think about how it interacts with the other elements in the room. It should enhance, not overpower. \n\n    //         78 \n    //         00:12:50,000 --> 00:13:00,000 \n    //         Sarah: I'll definitely consider that. Thank you for the feedback. \n\n    //         79 \n    //         00:13:00,000 --> 00:13:10,000 \n    //         Student 19: The use of mirrors is clever. It makes the space feel larger and more open. \n\n    //         80 \n    //         00:13:10,000 --> 00:13:20,000 \n    //         Professor: Mirrors are a great tool, but be careful not to overdo it. Too many mirrors can make a space feel disorienting. \n\n    //         81 \n    //         00:13:20,000 --> 00:13:30,000 \n    //         Guest Professional 1: And think about the placement of the mirrors. They should reflect something interesting, not just another wall. \n\n    //         82 \n    //         00:13:30,000 --> 00:13:40,000 \n    //         Sarah: I'll make sure to place them thoughtfully. Thank you for the advice. \n\n    //         83 \n    //         00:13:40,000 --> 00:13:50,000 \n    //         Student 20: The choice of furniture is very comfortable-looking. It seems like a space where you could really relax. \n\n    //         84 \n    //         00:13:50,000 --> 00:14:00,000 \n    //         Professor: Comfort is important, but also consider the scale of the furniture. Some pieces look a bit oversized for the space. \n\n    //         85 \n    //         00:14:00,000 --> 00:14:10,000 \n    //         Guest Professional 2: And think about the balance between form and function. The furniture should be both beautiful and practical. \n\n    //         86 \n    //         00:14:10,000 --> 00:14:20,000 \n    //         Sarah: I'll take another look at the furniture choices and see if I can find a better balance. \n\n    //         87 \n    //         00:14:20,000 --> 00:14:30,000 \n    //         Professor: Alright, I think we've covered a lot of ground. Sarah, you've received some excellent feedback. Take some time to digest it and see how you can incorporate it into your design. \n    //         88 \n    //         00:14:30,000 --> 00:14:40,000 \n    //         Guest Professional 1: Yes, you've done a great job so far. Keep pushing yourself and exploring new ideas. \n\n    //         89 \n    //         00:14:40,000 --> 00:14:50,000 \n    //         Guest Professional 2: And remember, design is an iterative process. Don't be afraid to make changes and try new things. \n\n    //         90 \n    //         00:14:50,000 --> 00:15:00,000 \n    //         Sarah: Thank you all for the feedback. I really appreciate it and will definitely take it into consideration as I move forward with my design. \n\n    //         91 \n    //         00:15:00,000 --> 00:15:10,000 \n    //         Professor: Great. Let's move on to the next student's work. Thank you, Sarah.\n    //     `,\n    //     \"transcript_list\": [\n    //         {\n    //             \"dialogue\": \"Alright, let's start with Sarah's 3D rendering. Sarah, could you give us a brief overview of your design concept? \",\n    //             \"end_timestamp\": \"00:00:10,000 \",\n    //             \"id\": 1,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:00:00,000\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Sure, my concept is based on creating a serene and airy living space that maximizes natural light and uses sustainable materials. \",\n    //             \"end_timestamp\": \"00:00:20,000 \",\n    //             \"id\": 2,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:00:10,000\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I appreciate the focus on sustainability. Can you tell us more about the materials you chose and why?\",\n    //             \"end_timestamp\": \"00:00:30,000\",\n    //             \"id\": 3,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:00:20,000\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I used reclaimed wood for the flooring and bamboo for the furniture. The idea was to create a warm, inviting atmosphere while being eco-friendly. \",\n    //             \"end_timestamp\": \"00:00:43,014\",\n    //             \"id\": 4,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:00:42,333\"\n    //         },\n    //         {\n    //             \"dialogue\": \"The use of bamboo is interesting. It reminds me of some modern Japanese interiors I've seen. \",\n    //             \"end_timestamp\": \"00:00:52,078\",\n    //             \"id\": 5,\n    //             \"speaker\": \"Student 1\",\n    //             \"start_timestamp\": \"00:00:43,074\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Yes, I see that influence. But I think the space could benefit from more contrast. Right now, it feels a bit too uniform. \",\n    //             \"end_timestamp\": \"00:00:53,139\",\n    //             \"id\": 6,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:00:52,098\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I agree. Maybe you could introduce some darker elements to create depth and dimension. What do you think about that? \",\n    //             \"end_timestamp\": \"00:00:59,197\",\n    //             \"id\": 7,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:00:57,136\"\n    //         },\n    //         {\n    //             \"dialogue\": \"That's a good point. I was worried about making it too dark, but I see how it could add more interest. \",\n    //             \"end_timestamp\": \"00:01:08,821\",\n    //             \"id\": 8,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:00:59,837\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I think the lighting is really well done. It gives a very airy feel to the space. \",\n    //             \"end_timestamp\": \"00:01:11,933\",\n    //             \"id\": 9,\n    //             \"speaker\": \"Student 2\",\n    //             \"start_timestamp\": \"00:01:09,471\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Yes, the lighting is a strong point. But I would suggest rethinking the placement of the windows. They seem a bit too high.\",\n    //             \"end_timestamp\": \"00:01:41,357\",\n    //             \"id\": 10,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:01:11,953\"\n    //         },\n    //         {\n    //             \"dialogue\": \"And I would definitely take away the coloring. I think it’s not working for the intent that you want and that you could just use blue Styrofoam. \",\n    //             \"end_timestamp\": \"00:02:13,001\",\n    //             \"id\": 11,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:01:41,778\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I see. I was trying to create a gradient effect, but maybe it's not coming through as I intended. \",\n    //             \"end_timestamp\": \"00:02:24,721\",\n    //             \"id\": 12,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:02:15,034\"\n    //         },\n    //         {\n    //             \"dialogue\": \"It reminds me of a Scandinavian design, very minimalistic and clean.\",\n    //             \"end_timestamp\": \"00:02:37,590\",\n    //             \"id\": 13,\n    //             \"speaker\": \"Student 3\",\n    //             \"start_timestamp\": \"00:02:26,402\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Yes, but Scandinavian designs often have a pop of color or a statement piece. Maybe you could incorporate something like that? \",\n    //             \"end_timestamp\": \"00:02:39,071\",\n    //             \"id\": 14,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:02:38,130\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Good suggestion. Also, consider the long-term vision. How will this space age over time? Will it still feel fresh and inviting? \",\n    //             \"end_timestamp\": \"00:02:42,052\",\n    //             \"id\": 15,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:02:39,111\"\n    //         },\n    //         {\n    //             \"dialogue\": \"That's a great point. I hadn't thought about the aging aspect. \",\n    //             \"end_timestamp\": \"00:02:55,776\",\n    //             \"id\": 16,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:02:42,293\"\n    //         },\n    //         {\n    //             \"dialogue\": \"What made you put color on it with this? \",\n    //             \"end_timestamp\": \"00:02:58,977\",\n    //             \"id\": 17,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:02:55,796\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I think the furniture layout is very functional. It seems like a space where you could really relax. \",\n    //             \"end_timestamp\": \"00:03:03,523\",\n    //             \"id\": 18,\n    //             \"speaker\": \"Student 4\",\n    //             \"start_timestamp\": \"00:02:59,398\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Functional, yes, but it could be more dynamic. Maybe try experimenting with different furniture arrangements. \",\n    //             \"end_timestamp\": \"00:03:28,492\",\n    //             \"id\": 19,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:03:15,502\"\n    //         },\n    //         {\n    //             \"dialogue\": \"And consider layering different textures. It could add more depth and interest to the space.\",\n    //             \"end_timestamp\": \"00:03:32,215\",\n    //             \"id\": 20,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:03:29,013\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Layering textures sounds like a good idea. I could try incorporating some textiles or different finishes.\",\n    //             \"end_timestamp\": \"00:03:50,046\",\n    //             \"id\": 21,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:03:32,836\"\n    //         },\n    //         {\n    //             \"dialogue\": \"The open shelving is a nice touch. It makes the space feel more open and accessible. \",\n    //             \"end_timestamp\": \"00:03:55,969\",\n    //             \"id\": 22,\n    //             \"speaker\": \"Student 5\",\n    //             \"start_timestamp\": \"00:03:50,887\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Yes, but be careful with open shelving. It can easily become cluttered. Think about how you can maintain that clean look.  \",\n    //             \"end_timestamp\": \"00:03:58,530\",\n    //             \"id\": 23,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:03:55,989\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I think we need to explore other ways of creating dimension. Maybe it is about materials? Maybe layering? Maybe it is about bunching?\",\n    //             \"end_timestamp\": \"00:04:05,833\",\n    //             \"id\": 24,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:03:59,810\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I'll definitely experiment with those ideas. Thank you for the suggestions.\",\n    //             \"end_timestamp\": \"00:04:10,275\",\n    //             \"id\": 25,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:04:06,413\"\n    //         },\n    //         {\n    //             \"dialogue\": \"The use of natural light is really effective. It gives the space a very welcoming feel.\",\n    //             \"end_timestamp\": \"00:05:00,648\",\n    //             \"id\": 26,\n    //             \"speaker\": \"Student 6\",\n    //             \"start_timestamp\": \"00:04:18,762\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Agreed, but I think the lighting could be improved. The current fixtures don't seem to complement the overall design.  \",\n    //             \"end_timestamp\": \"00:05:08,411\",\n    //             \"id\": 27,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:05:01,328\"\n    //         },\n    //         {\n    //             \"dialogue\": \"And I would suggest looking into different types of lighting fixtures. Maybe something more modern or industrial to contrast with the natural elements.\",\n    //             \"end_timestamp\": \"00:05:14,614\",\n    //             \"id\": 28,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:05:08,431\"\n    //         },\n    //         {\n    //             \"dialogue\": \"That's a great idea. I'll look into some different lighting options.  \",\n    //             \"end_timestamp\": \"00:05:18,035\",\n    //             \"id\": 29,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:05:16,134\"\n    //         },\n    //         {\n    //             \"dialogue\": \"The color palette is very soothing. It makes the space feel very calm and peaceful.  \",\n    //             \"end_timestamp\": \"00:05:38,562\",\n    //             \"id\": 30,\n    //             \"speaker\": \"Student 7\",\n    //             \"start_timestamp\": \"00:05:19,036\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Yes, but as mentioned earlier, it could use more contrast. Maybe introduce some bolder colors in small accents.\",\n    //             \"end_timestamp\": \"00:05:52,257\",\n    //             \"id\": 31,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:05:40,831\"\n    //         },\n    //         {\n    //             \"dialogue\": \"And think about the flow of the space. How do people move through it? Are there any areas that feel cramped or awkward?  \",\n    //             \"end_timestamp\": \"00:05:56,359\",\n    //             \"id\": 32,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:05:54,898\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I'll take another look at the layout and see if there are any areas that need more space.  \",\n    //             \"end_timestamp\": \"00:05:57,340\",\n    //             \"id\": 33,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:05:56,699\"\n    //         },\n    //         {\n    //             \"dialogue\": \"The use of plants is a nice touch. It adds a bit of life to the space.\",\n    //             \"end_timestamp\": \"00:06:03,842\",\n    //             \"id\": 34,\n    //             \"speaker\": \"Student 8\",\n    //             \"start_timestamp\": \"00:06:00,121\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Yes, but be mindful of maintenance. Some plants require a lot of care. Choose ones that are easy to maintain.\",\n    //             \"end_timestamp\": \"00:06:12,103\",\n    //             \"id\": 35,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:06:04,662\"\n    //         },\n    //         {\n    //             \"dialogue\": \"And consider the placement of the plants. They should enhance the space, not clutter it.\",\n    //             \"end_timestamp\": \"00:06:44,556\",\n    //             \"id\": 36,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:06:12,364\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I'll make sure to choose low-maintenance plants and place them strategically.\",\n    //             \"end_timestamp\": \"00:06:50,058\",\n    //             \"id\": 37,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:06:44,696\"\n    //         },\n    //         {\n    //             \"dialogue\": \"The overall design feels very cohesive. Everything seems to work well together.\",\n    //             \"end_timestamp\": \"00:06:57,340\",\n    //             \"id\": 38,\n    //             \"speaker\": \"Student 9\",\n    //             \"start_timestamp\": \"00:06:50,538\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Cohesive, yes, but don't be afraid to take some risks. Sometimes a bold choice can really elevate a design. \",\n    //             \"end_timestamp\": \"00:07:07,828\",\n    //             \"id\": 39,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:07:01,623\"\n    //         },\n    //         {\n    //             \"dialogue\": \"And speaking of risks, have you considered incorporating any unique or unconventional elements? \",\n    //             \"end_timestamp\": \"00:07:12,932\",\n    //             \"id\": 40,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:07:07,848\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I was thinking about adding a statement piece, like a large piece of art or a unique light fixture.\",\n    //             \"end_timestamp\": \"00:07:42,117\",\n    //             \"id\": 41,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:07:14,053\"\n    //         },\n    //         {\n    //             \"dialogue\": \"That could be interesting. It might add a focal point to the space.\",\n    //             \"end_timestamp\": \"00:07:52,113\",\n    //             \"id\": 42,\n    //             \"speaker\": \"Student 10\",\n    //             \"start_timestamp\": \"00:07:43,798\"\n    //         },\n    //         {\n    //             \"dialogue\": \" Yes, a focal point could really help anchor the design. Just make sure it complements the overall aesthetic. \",\n    //             \"end_timestamp\": \"00:08:06,009\",\n    //             \"id\": 43,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:07:52,754\"\n    //         },\n    //         {\n    //             \"dialogue\": \"And think about how it interacts with the other elements in the room. It should enhance, not overpower. \",\n    //             \"end_timestamp\": \"00:08:15,117\",\n    //             \"id\": 44,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:08:06,850\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I'll definitely consider that. Thank you for the feedback.\",\n    //             \"end_timestamp\": \"00:08:30,049\",\n    //             \"id\": 45,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:08:15,617\"\n    //         },\n    //         {\n    //             \"dialogue\": \"The use of mirrors is clever. It makes the space feel larger and more open. \",\n    //             \"end_timestamp\": \"00:08:33,051\",\n    //             \"id\": 46,\n    //             \"speaker\": \"Student 11\",\n    //             \"start_timestamp\": \"00:08:30,289\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Mirrors are a great tool, but be careful not to overdo it. Too many mirrors can make a space feel disorienting.\",\n    //             \"end_timestamp\": \"00:08:34,712\",\n    //             \"id\": 47,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:08:33,431\"\n    //         },\n    //         {\n    //             \"dialogue\": \"And think about the placement of the mirrors. They should reflect something interesting, not just another wall. \",\n    //             \"end_timestamp\": \"00:09:12,684\",\n    //             \"id\": 48,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:08:35,533\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I'll make sure to place them thoughtfully. Thank you for the advice. \",\n    //             \"end_timestamp\": \"00:09:15,165\",\n    //             \"id\": 49,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:09:12,984\"\n    //         },\n    //         {\n    //             \"dialogue\": \"The choice of furniture is very comfortable-looking. It seems like a space where you could really relax. \",\n    //             \"end_timestamp\": \"00:09:47,989\",\n    //             \"id\": 50,\n    //             \"speaker\": \"Student 12\",\n    //             \"start_timestamp\": \"00:09:16,206\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Comfort is important, but also consider the scale of the furniture. Some pieces look a bit oversized for the space. \",\n    //             \"end_timestamp\": \"00:09:52,211\",\n    //             \"id\": 51,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:09:48,469\"\n    //         },\n    //         {\n    //             \"dialogue\": \"I'll take another look at the furniture choices and see if I can find a better balance. \",\n    //             \"end_timestamp\": \"00:10:09,650\",\n    //             \"id\": 52,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:09:54,838\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Alright, I think we've covered a lot of ground. Sarah, you've received some excellent feedback. Take some time to digest it and see how you can incorporate it into your design\",\n    //             \"end_timestamp\": \"00:10:12,532\",\n    //             \"id\": 53,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:10:10,190\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Yes, you've done a great job so far. Keep pushing yourself and exploring new ideas. \",\n    //             \"end_timestamp\": \"00:10:50,046\",\n    //             \"id\": 54,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:10:12,813\"\n    //         },\n    //         {\n    //             \"dialogue\": \"And remember, design is an iterative process. Don't be afraid to make changes and try new things. \",\n    //             \"end_timestamp\": \"00:11:08,428\",\n    //             \"id\": 55,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:10:51,201\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Thank you all for the feedback. I really appreciate it and will definitely take it into consideration as I move forward with my design. \",\n    //             \"end_timestamp\": \"00:11:30,044\",\n    //             \"id\": 56,\n    //             \"speaker\": \"Sarah\",\n    //             \"start_timestamp\": \"00:11:09,288\"\n    //         },\n    //         {\n    //             \"dialogue\": \"Great. Let's move on to the next student's work. Thank you, Sarah.\",\n    //             \"end_timestamp\": \"00:11:31,085\",\n    //             \"id\": 57,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:11:30,845\"\n    //         },\n    //     ]\n    // };\n\t\n    let feedback_list=[];\n    // let feedback_list = [\n    //     {\n            \n    //         \"dialogue_id\": 5,\n    //         \"done\": false,\n    //         \"quote\": \"The use of bamboo is interesting. It reminds me of some modern Japanese interiors I've seen.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Student 1\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">The use of bamboo is interesting. It reminds me of some modern Japanese interiors I've seen.</mark> \",\n    //             \"end_timestamp\": \"00:00:52,078\",\n    //             \"id\": 5,\n    //             \"speaker\": \"Student 1\",\n    //             \"start_timestamp\": \"00:00:43,074\"\n    //         },\n    //         \"id\":1,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 6,\n    //         \"done\": false,\n    //         \"quote\": \"But I think the space could benefit from more contrast. Right now, it feels a bit too uniform.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"Yes, I see that influence. <mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">But I think the space could benefit from more contrast. Right now, it feels a bit too uniform.</mark> \",\n    //             \"end_timestamp\": \"00:00:53,139\",\n    //             \"id\": 6,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:00:52,098\"\n    //         },\n    //         \"id\":2,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 7,\n    //         \"done\": false,\n    //         \"quote\": \"I agree. Maybe you could introduce some darker elements to create depth and dimension. What do you think about that?\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 2\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">I agree. Maybe you could introduce some darker elements to create depth and dimension. What do you think about that?</mark> \",\n    //             \"end_timestamp\": \"00:00:59,197\",\n    //             \"id\": 7,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:00:57,136\"\n    //         },\n    //         \"id\":3,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 9,\n    //         \"done\": false,\n    //         \"quote\": \"I think the lighting is really well done. It gives a very airy feel to the space.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Student 2\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">I think the lighting is really well done. It gives a very airy feel to the space.</mark> \",\n    //             \"end_timestamp\": \"00:01:11,933\",\n    //             \"id\": 9,\n    //             \"speaker\": \"Student 2\",\n    //             \"start_timestamp\": \"00:01:09,471\"\n    //         },\n    //         \"id\":4,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 10,\n    //         \"done\": false,\n    //         \"quote\": \"Yes, the lighting is a strong point.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">Yes, the lighting is a strong point.</mark> <mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">But I would suggest rethinking the placement of the windows. They seem a bit too high.</mark>\",\n    //             \"end_timestamp\": \"00:01:41,357\",\n    //             \"id\": 10,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:01:11,953\"\n    //         },\n    //         \"id\":5,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 10,\n    //         \"done\": false,\n    //         \"quote\": \"But I would suggest rethinking the placement of the windows. They seem a bit too high.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">Yes, the lighting is a strong point.</mark> <mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">But I would suggest rethinking the placement of the windows. They seem a bit too high.</mark>\",\n    //             \"end_timestamp\": \"00:01:41,357\",\n    //             \"id\": 10,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:01:11,953\"\n    //         },\n    //         \"id\":6,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 11,\n    //         \"done\": false,\n    //         \"quote\": \"And I would definitely take away the coloring. I think it’s not working for the intent that you want and that you could just use blue Styrofoam.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 1\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">And I would definitely take away the coloring. I think it’s not working for the intent that you want and that you could just use blue Styrofoam.</mark> \",\n    //             \"end_timestamp\": \"00:02:13,001\",\n    //             \"id\": 11,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:01:41,778\"\n    //         },\n    //         \"id\":7,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 13,\n    //         \"done\": false,\n    //         \"quote\": \"It reminds me of a Scandinavian design, very minimalistic and clean.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Student 3\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">It reminds me of a Scandinavian design, very minimalistic and clean.</mark>\",\n    //             \"end_timestamp\": \"00:02:37,590\",\n    //             \"id\": 13,\n    //             \"speaker\": \"Student 3\",\n    //             \"start_timestamp\": \"00:02:26,402\"\n    //         },\n    //         \"id\":8,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 14,\n    //         \"done\": false,\n    //         \"quote\": \"Yes, but Scandinavian designs often have a pop of color or a statement piece. Maybe you could incorporate something like that?\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 2\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">Yes, but Scandinavian designs often have a pop of color or a statement piece. Maybe you could incorporate something like that?</mark> \",\n    //             \"end_timestamp\": \"00:02:39,071\",\n    //             \"id\": 14,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:02:38,130\"\n    //         },\n    //         \"id\":9,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 15,\n    //         \"done\": false,\n    //         \"quote\": \"Good suggestion. Also, consider the long-term vision. How will this space age over time? Will it still feel fresh and inviting?\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">Good suggestion. Also, consider the long-term vision. How will this space age over time? Will it still feel fresh and inviting?</mark> \",\n    //             \"end_timestamp\": \"00:02:42,052\",\n    //             \"id\": 15,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:02:39,111\"\n    //         },\n    //         \"id\":10,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 18,\n    //         \"done\": false,\n    //         \"quote\": \"I think the furniture layout is very functional. It seems like a space where you could really relax.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Student 4\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">I think the furniture layout is very functional. It seems like a space where you could really relax.</mark> \",\n    //             \"end_timestamp\": \"00:03:03,523\",\n    //             \"id\": 18,\n    //             \"speaker\": \"Student 4\",\n    //             \"start_timestamp\": \"00:02:59,398\"\n    //         },\n    //         \"id\":11,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 19,\n    //         \"done\": false,\n    //         \"quote\": \"Functional, yes, but it could be more dynamic. Maybe try experimenting with different furniture arrangements.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">Functional, yes, but it could be more dynamic. Maybe try experimenting with different furniture arrangements.</mark> \",\n    //             \"end_timestamp\": \"00:03:28,492\",\n    //             \"id\": 19,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:03:15,502\"\n    //         },\n    //         \"id\":12,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 20,\n    //         \"done\": false,\n    //         \"quote\": \"And consider layering different textures. It could add more depth and interest to the space.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 2\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">And consider layering different textures. It could add more depth and interest to the space.</mark>\",\n    //             \"end_timestamp\": \"00:03:32,215\",\n    //             \"id\": 20,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:03:29,013\"\n    //         },\n    //         \"id\":13,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 22,\n    //         \"done\": false,\n    //         \"quote\": \"The open shelving is a nice touch. It makes the space feel more open and accessible.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Student 5\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">The open shelving is a nice touch. It makes the space feel more open and accessible.</mark> \",\n    //             \"end_timestamp\": \"00:03:55,969\",\n    //             \"id\": 22,\n    //             \"speaker\": \"Student 5\",\n    //             \"start_timestamp\": \"00:03:50,887\"\n    //         },\n    //         \"id\":14,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 23,\n    //         \"done\": false,\n    //         \"quote\": \"Yes, but be careful with open shelving. It can easily become cluttered. Think about how you can maintain that clean look.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">Yes, but be careful with open shelving. It can easily become cluttered. Think about how you can maintain that clean look.</mark>  \",\n    //             \"end_timestamp\": \"00:03:58,530\",\n    //             \"id\": 23,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:03:55,989\"\n    //         },\n    //         \"id\":15,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 24,\n    //         \"done\": false,\n    //         \"quote\": \"I think we need to explore other ways of creating dimension. Maybe it is about materials? Maybe layering? Maybe it is about bunching?\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 1\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">I think we need to explore other ways of creating dimension. Maybe it is about materials? Maybe layering? Maybe it is about bunching?</mark>\",\n    //             \"end_timestamp\": \"00:04:05,833\",\n    //             \"id\": 24,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:03:59,810\"\n    //         },\n    //         \"id\":16,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 26,\n    //         \"done\": false,\n    //         \"quote\": \"The use of natural light is really effective. It gives the space a very welcoming feel.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Student 6\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">The use of natural light is really effective. It gives the space a very welcoming feel.</mark>\",\n    //             \"end_timestamp\": \"00:05:00,648\",\n    //             \"id\": 26,\n    //             \"speaker\": \"Student 6\",\n    //             \"start_timestamp\": \"00:04:18,762\"\n    //         },\n    //         \"id\":17,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 27,\n    //         \"done\": false,\n    //         \"quote\": \"Agreed, but I think the lighting could be improved. The current fixtures don't seem to complement the overall design.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">Agreed, but I think the lighting could be improved. The current fixtures don't seem to complement the overall design.</mark>  \",\n    //             \"end_timestamp\": \"00:05:08,411\",\n    //             \"id\": 27,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:05:01,328\"\n    //         },\n    //         \"id\":18,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 28,\n    //         \"done\": false,\n    //         \"quote\": \"And I would suggest looking into different types of lighting fixtures. Maybe something more modern or industrial to contrast with the natural elements.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 2\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">And I would suggest looking into different types of lighting fixtures. Maybe something more modern or industrial to contrast with the natural elements.</mark>\",\n    //             \"end_timestamp\": \"00:05:14,614\",\n    //             \"id\": 28,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:05:08,431\"\n    //         },\n    //         \"id\":19,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 30,\n    //         \"done\": false,\n    //         \"quote\": \"The color palette is very soothing. It makes the space feel very calm and peaceful.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Student 7\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">The color palette is very soothing. It makes the space feel very calm and peaceful.</mark>  \",\n    //             \"end_timestamp\": \"00:05:38,562\",\n    //             \"id\": 30,\n    //             \"speaker\": \"Student 7\",\n    //             \"start_timestamp\": \"00:05:19,036\"\n    //         },\n    //         \"id\":20,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 31,\n    //         \"done\": false,\n    //         \"quote\": \"Yes, but as mentioned earlier, it could use more contrast. Maybe introduce some bolder colors in small accents.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">Yes, but as mentioned earlier, it could use more contrast. Maybe introduce some bolder colors in small accents.</mark>\",\n    //             \"end_timestamp\": \"00:05:52,257\",\n    //             \"id\": 31,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:05:40,831\"\n    //         },\n    //         \"id\":21,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 32,\n    //         \"done\": false,\n    //         \"quote\": \"And think about the flow of the space. How do people move through it? Are there any areas that feel cramped or awkward?\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 1\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">And think about the flow of the space. How do people move through it? Are there any areas that feel cramped or awkward?</mark>  \",\n    //             \"end_timestamp\": \"00:05:56,359\",\n    //             \"id\": 32,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:05:54,898\"\n    //         },\n    //         \"id\":22,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 34,\n    //         \"done\": false,\n    //         \"quote\": \"The use of plants is a nice touch. It adds a bit of life to the space.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Student 8\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">The use of plants is a nice touch. It adds a bit of life to the space.</mark>\",\n    //             \"end_timestamp\": \"00:06:03,842\",\n    //             \"id\": 34,\n    //             \"speaker\": \"Student 8\",\n    //             \"start_timestamp\": \"00:06:00,121\"\n    //         },\n    //         \"id\":23,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 35,\n    //         \"done\": false,\n    //         \"quote\": \"Yes, but be mindful of maintenance. Some plants require a lot of care. Choose ones that are easy to maintain.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">Yes, but be mindful of maintenance. Some plants require a lot of care. Choose ones that are easy to maintain.</mark>\",\n    //             \"end_timestamp\": \"00:06:12,103\",\n    //             \"id\": 35,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:06:04,662\"\n    //         },\n    //         \"id\":24,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 36,\n    //         \"done\": false,\n    //         \"quote\": \"And consider the placement of the plants. They should enhance the space, not clutter it.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 2\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">And consider the placement of the plants. They should enhance the space, not clutter it.</mark>\",\n    //             \"end_timestamp\": \"00:06:44,556\",\n    //             \"id\": 36,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:06:12,364\"\n    //         },\n    //         \"id\":25,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 38,\n    //         \"done\": false,\n    //         \"quote\": \"The overall design feels very cohesive. Everything seems to work well together.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Student 9\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">The overall design feels very cohesive. Everything seems to work well together.</mark>\",\n    //             \"end_timestamp\": \"00:06:57,340\",\n    //             \"id\": 38,\n    //             \"speaker\": \"Student 9\",\n    //             \"start_timestamp\": \"00:06:50,538\"\n    //         },\n    //         \"id\":26,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 39,\n    //         \"done\": false,\n    //         \"quote\": \"Cohesive, yes, but don't be afraid to take some risks. Sometimes a bold choice can really elevate a design.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">Cohesive, yes, but don't be afraid to take some risks. Sometimes a bold choice can really elevate a design.</mark> \",\n    //             \"end_timestamp\": \"00:07:07,828\",\n    //             \"id\": 39,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:07:01,623\"\n    //         },\n    //         \"id\":27,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 40,\n    //         \"done\": false,\n    //         \"quote\": \"And speaking of risks, have you considered incorporating any unique or unconventional elements?\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 1\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">And speaking of risks, have you considered incorporating any unique or unconventional elements?</mark> \",\n    //             \"end_timestamp\": \"00:07:12,932\",\n    //             \"id\": 40,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:07:07,848\"\n    //         },\n    //         \"id\":28,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 42,\n    //         \"done\": false,\n    //         \"quote\": \"That could be interesting. It might add a focal point to the space.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Student 10\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">That could be interesting. It might add a focal point to the space.</mark>\",\n    //             \"end_timestamp\": \"00:07:52,113\",\n    //             \"id\": 42,\n    //             \"speaker\": \"Student 10\",\n    //             \"start_timestamp\": \"00:07:43,798\"\n    //         },\n    //         \"id\":29,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 43,\n    //         \"done\": false,\n    //         \"quote\": \"Yes, a focal point could really help anchor the design. Just make sure it complements the overall aesthetic.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \" <mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">Yes, a focal point could really help anchor the design. Just make sure it complements the overall aesthetic.</mark> \",\n    //             \"end_timestamp\": \"00:08:06,009\",\n    //             \"id\": 43,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:07:52,754\"\n    //         },\n    //         \"id\":30,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 44,\n    //         \"done\": false,\n    //         \"quote\": \"And think about how it interacts with the other elements in the room. It should enhance, not overpower.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 2\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">And think about how it interacts with the other elements in the room. It should enhance, not overpower.</mark> \",\n    //             \"end_timestamp\": \"00:08:15,117\",\n    //             \"id\": 44,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:08:06,850\"\n    //         },\n    //         \"id\":31,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 46,\n    //         \"done\": false,\n    //         \"quote\": \"The use of mirrors is clever. It makes the space feel larger and more open.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Student 11\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">The use of mirrors is clever. It makes the space feel larger and more open.</mark> \",\n    //             \"end_timestamp\": \"00:08:33,051\",\n    //             \"id\": 46,\n    //             \"speaker\": \"Student 11\",\n    //             \"start_timestamp\": \"00:08:30,289\"\n    //         },\n    //         \"id\":32,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 47,\n    //         \"done\": false,\n    //         \"quote\": \"Mirrors are a great tool, but be careful not to overdo it. Too many mirrors can make a space feel disorienting.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">Mirrors are a great tool, but be careful not to overdo it. Too many mirrors can make a space feel disorienting.</mark>\",\n    //             \"end_timestamp\": \"00:08:34,712\",\n    //             \"id\": 47,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:08:33,431\"\n    //         },\n    //         \"id\":33,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 48,\n    //         \"done\": false,\n    //         \"quote\": \"And think about the placement of the mirrors. They should reflect something interesting, not just another wall.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 1\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">And think about the placement of the mirrors. They should reflect something interesting, not just another wall.</mark> \",\n    //             \"end_timestamp\": \"00:09:12,684\",\n    //             \"id\": 48,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:08:35,533\"\n    //         },\n    //         \"id\":34,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 50,\n    //         \"done\": false,\n    //         \"quote\": \"The choice of furniture is very comfortable-looking. It seems like a space where you could really relax.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Student 12\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">The choice of furniture is very comfortable-looking. It seems like a space where you could really relax.</mark> \",\n    //             \"end_timestamp\": \"00:09:47,989\",\n    //             \"id\": 50,\n    //             \"speaker\": \"Student 12\",\n    //             \"start_timestamp\": \"00:09:16,206\"\n    //         },\n    //         \"id\":35,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 51,\n    //         \"done\": false,\n    //         \"quote\": \"Comfort is important, but also consider the scale of the furniture. Some pieces look a bit oversized for the space.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Professor\",\n    //         \"task\": null,\n    //         \"type\": \"critical\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"critical\\\" style=\\\"background-color:lightcoral;\\\">Comfort is important, but also consider the scale of the furniture. Some pieces look a bit oversized for the space.</mark> \",\n    //             \"end_timestamp\": \"00:09:52,211\",\n    //             \"id\": 51,\n    //             \"speaker\": \"Professor\",\n    //             \"start_timestamp\": \"00:09:48,469\"\n    //         },\n    //         \"id\":36,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 54,\n    //         \"done\": false,\n    //         \"quote\": \"Yes, you've done a great job so far. Keep pushing yourself and exploring new ideas.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 1\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">Yes, you've done a great job so far. Keep pushing yourself and exploring new ideas.</mark> \",\n    //             \"end_timestamp\": \"00:10:50,046\",\n    //             \"id\": 54,\n    //             \"speaker\": \"Guest Professional 1\",\n    //             \"start_timestamp\": \"00:10:12,813\"\n    //         },\n    //         \"id\":37,\n    //     },\n    //     {\n            \n    //         \"dialogue_id\": 55,\n    //         \"done\": false,\n    //         \"quote\": \"And remember, design is an iterative process. Don't be afraid to make changes and try new things.\",\n    //         \"show_paraphrased\": false,\n    //         \"speaker\": \"Guest Professional 2\",\n    //         \"task\": null,\n    //         \"type\": \"positive\",\n    //         \"excerpt_reference\": {\n    //             \"dialogue\": \"<mark class=\\\"positive\\\" style=\\\"background-color:lightgreen;\\\">And remember, design is an iterative process. Don't be afraid to make changes and try new things.</mark> \",\n    //             \"end_timestamp\": \"00:11:08,428\",\n    //             \"id\": 55,\n    //             \"speaker\": \"Guest Professional 2\",\n    //             \"start_timestamp\": \"00:10:51,201\"\n    //         },\n    //         \"id\":38,\n    //     }\n    // ]\n\n    let documents = [];\n\n    let chatbot_messages = [{\n        \"content\": \"You are an expert senior interior designer who is tasked to assist less experienced interior designers like students and junior interior designers with their work by answering their questions on a wide range of interior design topics. \",\n        \"role\": \"system\"\n    }];\n\n    let my_notes = [];\n    let feedback_notes = {};\n\n\n    async function register() {\n        if(uname == null || uname == \"\") {\n            alert(\"Please enter a valid username\");\n            throw new Error('Please enter a valid username');\n        }\n\n        let username_response = await fetch('/register', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({username: uname})\n        });\n\n        const data = await username_response.json();\n        if(!username_response.ok) {\n            alert(data.message);\n        } else if (username_response.ok) {\n            uID = data.user_id;\n            setCookie(\"username\", uname, 30);\n            setCookie(\"user_id\", uID, 30);\n\n            progress=50;\n            load_status = \"Loading documents...\";\n            documents = await fetch(\"/get_documents\", {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            }).then(r => r.json()).then(r => r.documents);\n\n            progress=100;\n            load_status = \"Done!\";\n            pause(1500);\n\n            currentStep=1;\n        }\n    }\n\n    async function login() {\n        if(uname == null || uname == \"\") {\n            alert(\"Please enter a valid username\");\n            throw new Error('Please enter a valid username');\n        }\n\n        let username_response = await fetch('/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({username: uname})\n        });\n\n        const data = await username_response.json();\n        if(!username_response.ok) {\n            alert(data.message);\n            return;\n        } else if (username_response.ok) {\n            uID = data.user_id;\n            setCookie(\"username\", uname, 30);\n            setCookie(\"user_id\", uID, 30);\n            \n            await loadFiles(uID);\n            currentStep=1;\n        }\n    }\n\n    function logout() {\n        setCookie(\"username\", \"\", 0);\n        setCookie(\"user_id\", \"\", 0);\n\n        \n        uname = \"\";\n        uID = \"\";\n        documents = [];\n        feedback_list = [];\n        chatbot_messages = [{\n            \"content\": \"You are an expert senior interior designer who is tasked to assist less experienced interior designers like students and junior interior designers with their work by answering their questions on a wide range of interior design topics. \",\n            \"role\": \"system\"\n        }];\n        currentStep = 0;\n    }\n\n    async function loadFiles(user_id) {\n\n        progress = 15;\n        load_status = \"Loading documents...\";\n        documents = await fetch(\"/get_documents\", {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }).then(r => r.json()).then(r => r.documents);\n\n        if (Object.keys(recording).length <= 0) {\n            progress = 30;\n            load_status = \"Loading recording...\";\n            let recording_response = await fetch(\"/get_recording\", {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            })\n            let recording_json = await recording_response.json();\n            recording = recording_json[\"recording\"];\n\n            if(\"video_path\" in recording && recording[\"video_path\"] != null) { \n                progress = 45;\n                load_status = \"Loading video...\";\n                const vidsrc_response = await fetch(\"/fetch_video\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({path: recording[\"video_path\"]})\n                });\n                if(!vidsrc_response.ok) {\n                    throw new Error('Failed to fetch video');\n                }\n                const vidblob = await vidsrc_response.blob();\n                recording[\"video\"] = URL.createObjectURL(vidblob);\n            }\n\n            if(\"audio_path\" in recording && recording[\"audio_path\"] != null) {\n                progress=50;\n                load_status = \"Loading audio...\";\n                const audiosrc_response = await fetch(\"/fetch_audio\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({audio_path: recording[\"audio_path\"]})\n                });\n                if(!audiosrc_response.ok) {\n                    throw new Error('Failed to fetch audio');\n                }\n                const audioblob = await audiosrc_response.blob();\n                recording[\"audio\"] = URL.createObjectURL(audioblob);\n            }\n\n            progress = 60;\n            load_status = \"Loading feedback...\";\n            const feedback_list_response = await fetch(\"/get_feedback_list\", {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n            if (!feedback_list_response.ok) {\n                throw new Error('Failed to fetch feedback list');\n            }\n            const feedback_list_json = await feedback_list_response.json();\n            feedback_list = feedback_list_json[\"feedback_list\"];\n\n            progress=70;\n            load_status = \"Loading chatbot messages...\";\n            const display_chatbot_messages_response = await fetch(\"/get_display_chatbot_messages\", {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n            if (!display_chatbot_messages_response.ok) {\n                throw new Error('Failed to fetch chatbot messages');\n            }\n            const display_chatbot_messages_json = await display_chatbot_messages_response.json();\n            chatbot_messages = display_chatbot_messages_json[\"display_chatbot_messages\"];\n\n            for (let message of chatbot_messages) {\n                if(\"image_path\" in message && message[\"image_path\"] != null) {\n                    const imgsrc_response = await fetch(\"/fetch_image\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({image_path: message[\"image_path\"]})\n                    });\n                    if(!imgsrc_response.ok) {\n                        throw new Error('Failed to fetch image');\n                    }\n                    const imgblob = await imgsrc_response.blob();\n                    message[\"image\"] = URL.createObjectURL(imgblob);\n                }\n            }\n\n            progress = 80;\n            load_status = \"Loading notes...\";\n            const my_notes_response = await fetch(\"/get_my_notes\", {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n            if (!my_notes_response.ok) {\n                throw new Error('Failed to fetch my notes');\n            }\n            const my_notes_json = await my_notes_response.json();\n            my_notes = my_notes_json[\"my_notes\"];\n\n            const feedback_notes_response = await fetch(\"/get_feedback_notes\", {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n            if (!feedback_notes_response.ok) {\n                throw new Error('Failed to fetch feedback notes');\n            }\n            const feedback_notes_json = await feedback_notes_response.json();\n            feedback_notes = feedback_notes_json[\"feedback_notes\"];\n\n            progress = 100;\n            load_status = \"Done!\";\n            pause(1500);\n\n            \n        }\n            \n\n    }\n\n    onMount(async () => {\n        // uname = getCookie(\"username\");\n        // uID = getCookie(\"user_id\");\n        // if(uname != null && uname != \"\") {\n        //     await loadFiles(uID);\n        //     currentStep=1;\n        // }\n    });\n</script>\n\n<style>\n    .header {\n        height: 5%;\n        justify-content: flex-end;\n        align-items: center;\n    }\n\t.carousel-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\theight: 90%;\n\t}\n\n\t.navigation {\n\t\theight: 5%;\n\t}\n\n\tbutton {\n\t\tmargin: 0 10px;\n\t}\n</style>\n\n<main>\n    <div class:gone={currentStep==0} class=\"header spaced bordered row padded\"> \n        <h5> Welcome, {uname}</h5> \n        <button on:click={() => logout()} class=\"row mini-padded\">\n            Logout\n        </button>\n    </div>\n\t<div class=\"carousel-container\">\n            \n\n            {#if currentStep === 0}\n                <div class=\"centered spaced\" class:gone={currentStep != 0} style=\"width: 100%; height: 100%;\">\n\n                    <div class=\"overlay centered padded\" class:invisible={is_loading===false}> \n                        <LoadingBar bind:progress={progress} bind:status={load_status} />\n                    </div>\n\n\n                    <div class=\"column centered spaced\" style=\"width: 75%; height: 75%;\">\n                        <label for=\"username\"> Enter your username </label>\n                        <input type=\"text\" name=\"username\" id=\"username\" bind:value={uname}>\n                        <div class=\"row\">\n                            <button on:click={async() => {\n                                is_loading = true;\n                                await register();\n                                is_loading = false;\n                                progress=0;\n                            }}> \n                                Register \n                            </button>\n\n                            <button on:click={async() => {\n                                is_loading = true;\n                                await login();\n                                is_loading = false;\n                                progress=0;\n                            }}> \n                                Login \n                            </button>\n                        </div>\n\n                    </div>\n                </div>\n\n            {:else if currentStep ===1}\n                <div class:gone={currentStep != 1} style=\"width: 100%; height: 100%; background-color: #F8F9FA;\">\n                    <FeedbackSelector bind:recording={recording} bind:feedback_list={feedback_list}/>\n                </div>\n            {:else if currentStep ===2}\n                <div class:gone={currentStep != 2} style=\"width: 100%; height: 100%; background-color: #F8F9FA;\"> \n                    <FeedbackList \n                    bind:chatbot_messages={chatbot_messages} \n                    bind:documents={documents} \n                    bind:feedback_list={feedback_list} \n                    bind:recording={recording}\n                    bind:my_notes={my_notes}\n                    bind:feedback_notes={feedback_notes}\n                    bind:left_display_styles={left_display_styles}/>\n                </div>\n            {/if}\n\n            \n\t</div>\n\t<div class=\"navigation centered spaced bordered row\">\n\t\t\t<button class:invisible={currentStep !=2 || currentStep==0 } class=\"action-button row centered\" on:click={() => {currentStep=1}} disabled={currentStep === 0}>\n                <img src=\"./logos/move-to-the-prev-page-symbol-svgrepo-com.svg\" alt=\"Previous page\" class=\"mini-icon\">\n                Select Feedback \n            </button>\n\n            <button class:invisible={currentStep !=1 || currentStep==0 } class=\"action-button row centered\" on:click={() => {currentStep=2}} disabled={currentStep === steps.length - 1 || feedback_list.length <=0}>\n                View Feedback List\n                <img src=\"./logos/move-to-the-next-page-symbol-svgrepo-com.svg\" alt=\"Next page\" class=\"mini-icon\">\n            </button>\n\t</div>\n</main>\n\n","\nimport App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n  props: {\n    name: \"world\",\n  },\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","compute_rest_props","props","keys","rest","Set","has","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","mounting","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","toggle_class","toggle","classList","HtmlTag","constructor","is_svg","e","n","c","html","h","m","nodeName","createElementNS","nodeType","t","tagName","content","innerHTML","Array","from","childNodes","construct_svelte_component","component","set_current_component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","createEvent","initCustomEvent","custom_event","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","callback","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","get_spread_object","spread_props","bind","index","bound","create_component","mount_component","customElement","new_on_destroy","map","filter","on_destroy","destroy_component","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","splice","$set","$$props","obj","$$set","async","pause","milliseconds","setTimeout","setCookie","daysToExpire","expires","date","Date","setTime","getTime","toUTCString","cookie","logAction","action","response","fetch","method","headers","body","JSON","stringify","ok","json","console","log","seekTo","time","videoPlayer","currentTime","timeArray","split","parseInt","timeToSeconds","play","focusOnFeedback","feedback","dialogue_id","quoteElement","getElementById","scrollIntoView","behavior","inline","copy","navigator","clipboard","writeText","previouslyFocusedElement","activeElement","contain","position","left","fontSize","selection","getSelection","originalRange","rangeCount","getRangeAt","selectionStart","selectionEnd","execCommand","removeAllRanges","addRange","focus","copyToClipboard","div2","span","div1","div0","progress","status","saveRecording","recording","response_json","saveFeedbackList","feedback_list","saveDisplayChatbotMessages","display_chatbot_messages","saveMyNotes","my_notes","saveMyFeedbackNotes","feedback_notes","t0_value","t2_value","t0","t2","div","each_value_1","transcript_list","t1_value","start_timestamp","t5_value","end_timestamp","t9_value","speaker","raw_value","dialogue","span2","span2_id_value","id","span0","span1","br0","br1","br2","t1","t5","t9","button","img","video","audio","audio_src_value","video_src_value","track","if_block0","create_if_block_2","create_if_block_1","reduce","func","each_value","entries","func_1","strong","ul","li","t3","t3_value","func_2","func_3","li0","li1","t4","t4_value","t7","t7_value","create_if_block_8","create_if_block_7","if_block2","create_if_block_6","create_if_block_5","create_if_block_3","create_if_block_4","create_if_block","button0","disabled","button0_disabled_value","button1","button1_disabled_value","button2","button2_disabled_value","button3","button3_disabled_value","button4","button4_disabled_value","button5","button5_disabled_value","button6","button6_disabled_value","div18","div14","img0","img1","div13","div9","div8","div7","div4","label0","div3","input0","img2","div6","label1","div5","input1","img3","div12","div11","div10","img4","img5","img6","button7","img7","br3","button8","img8","br4","div17","div15","div16","h3","current","fetchAudio","audio_path","blob","URL","createObjectURL","error","embedTranscriptList","transcript","extractAudioFromVideo","videoFile","formData","FormData","simplifyTranscript","convertTranscriptToList","autoDetectFeedback","transcript_str","excerpt","start","end","convertTranscriptListToStr","findExcerptByID","acc","cur","mediaPlayer","videoPath","micPath","media_files","mediafile_input","transcript_files","transcript_fileinput","feedback_idx","is_loading","load_status","deleteRecordingMedia","handleMediaUpload","file","includes","window","confirm","video_path","videoSrc","$$invalidate","micSrc","newRecording","audioSrc","handleTranscriptUpload","endsWith","removeAllFeedback","reader","FileReader","onload","ld_bar_transcript","result","readAsText","addFeedback","toString","trim","alert","quote","done","excerpt_reference","excerpt_str","findExcerptByQuote","chatbot_messages","role","autoHighlightFeedback","removeFeedback","feedback_quote","deHighlightFeedback","j","start_index","end_index","highlighted_dialogue","feedback_type","$$value","files","list","chunk_size","ceil","chunks","concat","reference_id","min","step","to_number","each_blocks","switch_value","table","t_value","raw","tokens","parser_changes","unorderedlistitem","listitem","each_value_5","items","orderedlistitem","each_value_4","tablecell","align","switch_instance_changes","tablerow","tablehead","switch_value_1","tablebody","renderers","header","rows","ordered","origWarn","warn","message","supressWarnings","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","hooks","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","RegExp","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","encode","test","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","substring","caret","edit","regex","opt","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","prot","decodeURIComponent","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","shift","invert","suffLen","currChar","repeatString","pattern","outputLink","cap","link","lexer","title","state","inLink","token","inlineTokens","Tokenizer","rules","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","join","indentCodeCompensation","lang","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","loose","itemRegex","repeat","trimLeft","search","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","hasMultipleLineBreaks","some","pre","def","tag","item","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","level","findClosingBracket","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","middle","endAst","endUnd","em","_extended_email","Lexer","inlineQueue","lex","lexInline","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","keepPrevChar","lastIndexOf","startInline","Renderer","infostring","slugger","slug","checkbox","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","hasOwnProperty","dryrun","Parser","textRenderer","parse","parseInline","l2","l3","cell","itemBody","parser","unshift","Hooks","static","preprocess","markdown","postprocess","parseMarkdown","origOpt","throwError","msg","reject","onError","marked","prototype","checkSanitizeDeprecation","err","pending","all","catch","setOptions","newDefaults","use","args","childTokens","pack","opts","ext","prevRenderer","apply","prop","prevTokenizer","prevHook","passThroughHooks","arg","values","h6","h5","h4","h2","h1","getOptions","get","getContext","img_src_value","thead","tbody","tr","td","th","ol","defaultRenderers","defaultOptions","smartLists","isInline","dispatch","mounted","set","setContext","combinedOptions","preprocessed","isArray","combinedRenderers","create_if_block_37","create_if_block_22","create_if_block_50","create_if_block_49","create_if_block_48","strong0","strong1","strong2","span3","create_if_block_46","positivised_quote","show_paraphrased","create_if_block_44","create_if_block_47","if_block","create_if_block_45","create_if_block_43","t13_value","create_if_block_41","create_if_block_39","small","t13","create_if_block_42","create_if_block_40","create_if_block_38","create_if_block_35","create_if_block_34","create_if_block_33","span4","strong4","create_if_block_31","create_if_block_29","create_if_block_32","create_if_block_30","create_if_block_28","t8_value","t14_value","create_if_block_26","create_if_block_24","t8","t14","create_if_block_27","create_if_block_25","create_if_block_23","create_if_block_19","show_if","Number","sort","notes","is_adding","create_if_block_17","div3_id_value","create_if_block_14","p1","label","textarea","create_if_block_13","if_block1","create_if_block_12","create_if_block_11","create_if_block_10","if_block4","create_if_block_9","div3_class_value","div5_class_value","sveltemarkdown_changes","img0_src_value","create_if_block_21","create_if_block_36","paraphrasePositively","showParaphrasedQuote","show","selected_feedback","selected_image","image_url","image_files","image_input","document_file_input","documents","left_display_styles","show_chatbot_settings","chatbot_models","selected_chatbot","chatbot_temperature","chatbot_max_output_tokens","inputMessage","active_right_tab","active_left_tab","left_panel_tabs","right_panel_tabs","chatbot_load_status","chatbot_load_progress","document_load_status","document_load_progress","is_document_loading","f","selectFeedback","stopPropagation","sortKey","sortAscending","sortFeedbackList","sendMessage","inputMessageClone","context_string","image_data","max_output_tokens","temperature","model","image_base64","onerror","readAsDataURL","convertImageToBase64","saveBase64Image","chatbot_response","assistant_message","addContext","addDocument","document_name","deleteDocument","idx","deleteAllDocuments","doc","adding_note","temp_note","addNote","note","feedback_id","removeNote","note_idx","confirmNote","original_quote","assistant_idx","user_message_idx","assistant_message_idx","image_file","handleImageUpload","click","string","steps","main","currentStep","uname","uID","register","username_response","username","user_id","login","recording_response","recording_json","vidsrc_response","path","vidblob","audiosrc_response","audioblob","feedback_list_response","feedback_list_json","display_chatbot_messages_response","display_chatbot_messages_json","imgsrc_response","image_path","imgblob","my_notes_response","my_notes_json","feedback_notes_response","feedback_notes_json","loadFiles","logout"],"mappings":"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","x_google_ignoreList":[0,2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]}